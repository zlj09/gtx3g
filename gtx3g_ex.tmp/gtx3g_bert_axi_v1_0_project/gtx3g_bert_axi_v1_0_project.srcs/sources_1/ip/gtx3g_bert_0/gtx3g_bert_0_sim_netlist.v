// Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2017.2 (win64) Build 1909853 Thu Jun 15 18:39:09 MDT 2017
// Date        : Sat May  5 12:59:01 2018
// Host        : idea-PC running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim
//               f:/programs/verilog/fpga_group/test_gtx/gtx3g_ex/gtx3g_ex.tmp/gtx3g_bert_axi_v1_0_project/gtx3g_bert_axi_v1_0_project.srcs/sources_1/ip/gtx3g_bert_0/gtx3g_bert_0_sim_netlist.v
// Design      : gtx3g_bert_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z100iffg900-2L
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "gtx3g_bert_0,gtx3g_exdes,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "gtx3g_exdes,Vivado 2017.2" *) 
(* NotValidForBitStream *)
module gtx3g_bert_0
   (Q0_CLK1_GTREFCLK_PAD_N_IN,
    Q0_CLK1_GTREFCLK_PAD_P_IN,
    DRPCLK_IN,
    TRACK_DATA_OUT,
    TEST_RESET,
    PATTERN_MODE,
    ERROR_INSERT_MASK,
    ECC_CODE_EN,
    USER_CLK,
    DATA_COUNT_OUT,
    PATTERN_ERROR_COUNT_OUT,
    TEST_OVER_OUT,
    PATTERN_ERROR_OUT,
    BLOCK_ERROR_OUT,
    RXDATA_OUT,
    GTX_RESETDONE_OUT);
  input Q0_CLK1_GTREFCLK_PAD_N_IN;
  input Q0_CLK1_GTREFCLK_PAD_P_IN;
  input DRPCLK_IN;
  output TRACK_DATA_OUT;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 TEST_RESET RST" *) input TEST_RESET;
  input [2:0]PATTERN_MODE;
  input [31:0]ERROR_INSERT_MASK;
  input ECC_CODE_EN;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 USER_CLK CLK" *) output USER_CLK;
  output [31:0]DATA_COUNT_OUT;
  output [31:0]PATTERN_ERROR_COUNT_OUT;
  output TEST_OVER_OUT;
  output PATTERN_ERROR_OUT;
  output [3:0]BLOCK_ERROR_OUT;
  output [15:0]RXDATA_OUT;
  output GTX_RESETDONE_OUT;

  wire [3:0]BLOCK_ERROR_OUT;
  wire [31:0]DATA_COUNT_OUT;
  wire DRPCLK_IN;
  wire ECC_CODE_EN;
  wire [31:0]ERROR_INSERT_MASK;
  wire GTX_RESETDONE_OUT;
  wire [31:0]PATTERN_ERROR_COUNT_OUT;
  wire PATTERN_ERROR_OUT;
  wire [2:0]PATTERN_MODE;
  wire Q0_CLK1_GTREFCLK_PAD_N_IN;
  wire Q0_CLK1_GTREFCLK_PAD_P_IN;
  wire [15:0]RXDATA_OUT;
  wire TEST_OVER_OUT;
  wire TEST_RESET;
  wire TRACK_DATA_OUT;
  wire USER_CLK;
  wire [1:0]NLW_inst_TXN_OUT_UNCONNECTED;
  wire [1:0]NLW_inst_TXP_OUT_UNCONNECTED;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EXAMPLE_CONFIG_INDEPENDENT_LANES = "1" *) 
  (* EXAMPLE_LANE_WITH_START_CHAR = "0" *) 
  (* EXAMPLE_SIM_GTRESET_SPEEDUP = "TRUE" *) 
  (* EXAMPLE_USE_CHIPSCOPE = "0" *) 
  (* EXAMPLE_WORDS_IN_BRAM = "512" *) 
  (* LOOPBACK_MODE = "3'b010" *) 
  (* STABLE_CLOCK_PERIOD = "10" *) 
  gtx3g_bert_0_gtx3g_exdes inst
       (.BLOCK_ERROR_OUT(BLOCK_ERROR_OUT),
        .DATA_COUNT_OUT(DATA_COUNT_OUT),
        .DRPCLK_IN(DRPCLK_IN),
        .ECC_CODE_EN(ECC_CODE_EN),
        .ERROR_INSERT_MASK(ERROR_INSERT_MASK),
        .GTX_RESETDONE_OUT(GTX_RESETDONE_OUT),
        .PATTERN_ERROR_COUNT_OUT(PATTERN_ERROR_COUNT_OUT),
        .PATTERN_ERROR_OUT(PATTERN_ERROR_OUT),
        .PATTERN_MODE(PATTERN_MODE),
        .Q0_CLK1_GTREFCLK_PAD_N_IN(Q0_CLK1_GTREFCLK_PAD_N_IN),
        .Q0_CLK1_GTREFCLK_PAD_P_IN(Q0_CLK1_GTREFCLK_PAD_P_IN),
        .RXDATA_OUT(RXDATA_OUT),
        .RXN_IN({1'b1,1'b0}),
        .RXP_IN({1'b1,1'b0}),
        .TEST_OVER_OUT(TEST_OVER_OUT),
        .TEST_RESET(TEST_RESET),
        .TRACK_DATA_OUT(TRACK_DATA_OUT),
        .TXN_OUT(NLW_inst_TXN_OUT_UNCONNECTED[1:0]),
        .TXP_OUT(NLW_inst_TXP_OUT_UNCONNECTED[1:0]),
        .USER_CLK(USER_CLK));
endmodule

(* ORIG_REF_NAME = "bram_gen" *) 
module gtx3g_bert_0_bram_gen
   (Q,
    \bram_reg_reg[12]_0 ,
    \pattern_reg_reg[12] ,
    pattern_pause_reg,
    p_0_in,
    p_1_in,
    pattern_rst_reg,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [2:0]Q;
  output [3:0]\bram_reg_reg[12]_0 ;
  output [10:0]\pattern_reg_reg[12] ;
  input pattern_pause_reg;
  input [5:0]p_0_in;
  input [0:0]p_1_in;
  input pattern_rst_reg;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [2:0]Q;
  wire [12:0]bram_reg;
  wire [3:0]\bram_reg_reg[12]_0 ;
  wire [5:0]p_0_in;
  wire [0:0]p_1_in;
  wire pattern_pause_reg;
  wire pattern_pause_reg_reg;
  wire [10:0]\pattern_reg_reg[12] ;
  wire pattern_rst_reg;
  wire [0:0]read_counter_i_d1;
  wire [3:0]read_counter_i_reg;
  wire \read_counter_i_rep[0]_i_1__1_n_0 ;
  wire \read_counter_i_rep[1]_i_1__1_n_0 ;
  wire \read_counter_i_rep[2]_i_1__1_n_0 ;
  wire \read_counter_i_rep[3]_i_2__1_n_0 ;

  LUT5 #(
    .INIT(32'hFEFFFE00)) 
    \bram_reg[0]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(pattern_pause_reg),
        .I4(p_0_in[0]),
        .O(bram_reg[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[10]_i_1__0 
       (.I0(Q[0]),
        .I1(pattern_pause_reg),
        .I2(\bram_reg_reg[12]_0 [1]),
        .O(bram_reg[10]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[11]_i_1__0 
       (.I0(Q[1]),
        .I1(pattern_pause_reg),
        .I2(\bram_reg_reg[12]_0 [2]),
        .O(bram_reg[11]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[12]_i_1__0 
       (.I0(Q[2]),
        .I1(pattern_pause_reg),
        .I2(\bram_reg_reg[12]_0 [3]),
        .O(bram_reg[12]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h20202F20)) 
    \bram_reg[1]_i_1__0 
       (.I0(p_1_in),
        .I1(read_counter_i_d1),
        .I2(pattern_pause_reg),
        .I3(p_0_in[0]),
        .I4(\bram_reg_reg[12]_0 [0]),
        .O(bram_reg[1]));
  LUT6 #(
    .INIT(64'h999AFFFF999A0000)) 
    \bram_reg[2]_i_1__0 
       (.I0(read_counter_i_d1),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(pattern_pause_reg),
        .I5(p_0_in[1]),
        .O(bram_reg[2]));
  LUT6 #(
    .INIT(64'hCC9AFFFFCC9A0000)) 
    \bram_reg[3]_i_1__0 
       (.I0(read_counter_i_d1),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(pattern_pause_reg),
        .I5(p_0_in[2]),
        .O(bram_reg[3]));
  LUT6 #(
    .INIT(64'hABA8FFFFABA80000)) 
    \bram_reg[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(read_counter_i_d1),
        .I4(pattern_pause_reg),
        .I5(p_0_in[3]),
        .O(bram_reg[4]));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \bram_reg[7]_i_1__0 
       (.I0(Q[2]),
        .I1(read_counter_i_d1),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(pattern_pause_reg),
        .I5(p_0_in[4]),
        .O(bram_reg[7]));
  LUT6 #(
    .INIT(64'h0001FFFF00010000)) 
    \bram_reg[8]_i_1__0 
       (.I0(Q[2]),
        .I1(read_counter_i_d1),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(pattern_pause_reg),
        .I5(p_0_in[5]),
        .O(bram_reg[8]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[9]_i_1__0 
       (.I0(read_counter_i_d1),
        .I1(pattern_pause_reg),
        .I2(\bram_reg_reg[12]_0 [0]),
        .O(bram_reg[9]));
  FDRE \bram_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[0]),
        .Q(\pattern_reg_reg[12] [0]),
        .R(1'b0));
  FDRE \bram_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[10]),
        .Q(\pattern_reg_reg[12] [8]),
        .R(1'b0));
  FDRE \bram_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[11]),
        .Q(\pattern_reg_reg[12] [9]),
        .R(1'b0));
  FDRE \bram_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[12]),
        .Q(\pattern_reg_reg[12] [10]),
        .R(1'b0));
  FDRE \bram_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[1]),
        .Q(\pattern_reg_reg[12] [1]),
        .R(1'b0));
  FDRE \bram_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[2]),
        .Q(\pattern_reg_reg[12] [2]),
        .R(1'b0));
  FDRE \bram_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[3]),
        .Q(\pattern_reg_reg[12] [3]),
        .R(1'b0));
  FDRE \bram_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[4]),
        .Q(\pattern_reg_reg[12] [4]),
        .R(1'b0));
  FDRE \bram_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[7]),
        .Q(\pattern_reg_reg[12] [5]),
        .R(1'b0));
  FDRE \bram_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[8]),
        .Q(\pattern_reg_reg[12] [6]),
        .R(1'b0));
  FDRE \bram_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[9]),
        .Q(\pattern_reg_reg[12] [7]),
        .R(1'b0));
  FDRE \read_counter_i_d1_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg[0]),
        .Q(read_counter_i_d1),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_d1_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg[1]),
        .Q(Q[0]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_d1_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg[2]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_d1_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg[3]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[0]_i_1__1_n_0 ),
        .Q(read_counter_i_reg[0]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[1]_i_1__1_n_0 ),
        .Q(read_counter_i_reg[1]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[2]_i_1__1_n_0 ),
        .Q(read_counter_i_reg[2]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[3]_i_2__1_n_0 ),
        .Q(read_counter_i_reg[3]),
        .R(pattern_rst_reg));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[0]_i_1__1_n_0 ),
        .Q(\bram_reg_reg[12]_0 [0]),
        .R(pattern_rst_reg));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[1]_i_1__1_n_0 ),
        .Q(\bram_reg_reg[12]_0 [1]),
        .R(pattern_rst_reg));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[2]_i_1__1_n_0 ),
        .Q(\bram_reg_reg[12]_0 [2]),
        .R(pattern_rst_reg));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[3]_i_2__1_n_0 ),
        .Q(\bram_reg_reg[12]_0 [3]),
        .R(pattern_rst_reg));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \read_counter_i_rep[0]_i_1__1 
       (.I0(read_counter_i_reg[0]),
        .O(\read_counter_i_rep[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \read_counter_i_rep[1]_i_1__1 
       (.I0(read_counter_i_reg[1]),
        .I1(read_counter_i_reg[0]),
        .O(\read_counter_i_rep[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \read_counter_i_rep[2]_i_1__1 
       (.I0(read_counter_i_reg[2]),
        .I1(read_counter_i_reg[0]),
        .I2(read_counter_i_reg[1]),
        .O(\read_counter_i_rep[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \read_counter_i_rep[3]_i_2__1 
       (.I0(read_counter_i_reg[3]),
        .I1(read_counter_i_reg[1]),
        .I2(read_counter_i_reg[0]),
        .I3(read_counter_i_reg[2]),
        .O(\read_counter_i_rep[3]_i_2__1_n_0 ));
endmodule

(* ORIG_REF_NAME = "bram_gen" *) 
module gtx3g_bert_0_bram_gen_37
   (Q,
    \bram_reg_reg[12]_0 ,
    \pattern_reg_reg[12] ,
    pattern_pause_reg,
    p_0_in,
    p_1_in,
    pattern_rst_reg,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [2:0]Q;
  output [3:0]\bram_reg_reg[12]_0 ;
  output [10:0]\pattern_reg_reg[12] ;
  input pattern_pause_reg;
  input [5:0]p_0_in;
  input [0:0]p_1_in;
  input pattern_rst_reg;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [2:0]Q;
  wire [12:0]bram_reg;
  wire [3:0]\bram_reg_reg[12]_0 ;
  wire [5:0]p_0_in;
  wire [0:0]p_1_in;
  wire pattern_pause_reg;
  wire pattern_pause_reg_reg;
  wire [10:0]\pattern_reg_reg[12] ;
  wire pattern_rst_reg;
  wire [0:0]read_counter_i_d1;
  wire [3:0]read_counter_i_reg__0;
  wire \read_counter_i_rep[0]_i_1__0_n_0 ;
  wire \read_counter_i_rep[1]_i_1__0_n_0 ;
  wire \read_counter_i_rep[2]_i_1__0_n_0 ;
  wire \read_counter_i_rep[3]_i_2__0_n_0 ;

  LUT5 #(
    .INIT(32'hFEFFFE00)) 
    \bram_reg[0]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(pattern_pause_reg),
        .I4(p_0_in[0]),
        .O(bram_reg[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[10]_i_1 
       (.I0(Q[0]),
        .I1(pattern_pause_reg),
        .I2(\bram_reg_reg[12]_0 [1]),
        .O(bram_reg[10]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[11]_i_1 
       (.I0(Q[1]),
        .I1(pattern_pause_reg),
        .I2(\bram_reg_reg[12]_0 [2]),
        .O(bram_reg[11]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[12]_i_1 
       (.I0(Q[2]),
        .I1(pattern_pause_reg),
        .I2(\bram_reg_reg[12]_0 [3]),
        .O(bram_reg[12]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'h20202F20)) 
    \bram_reg[1]_i_1 
       (.I0(p_1_in),
        .I1(read_counter_i_d1),
        .I2(pattern_pause_reg),
        .I3(p_0_in[0]),
        .I4(\bram_reg_reg[12]_0 [0]),
        .O(bram_reg[1]));
  LUT6 #(
    .INIT(64'h999AFFFF999A0000)) 
    \bram_reg[2]_i_1 
       (.I0(read_counter_i_d1),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(pattern_pause_reg),
        .I5(p_0_in[1]),
        .O(bram_reg[2]));
  LUT6 #(
    .INIT(64'hCC9AFFFFCC9A0000)) 
    \bram_reg[3]_i_1 
       (.I0(read_counter_i_d1),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(pattern_pause_reg),
        .I5(p_0_in[2]),
        .O(bram_reg[3]));
  LUT6 #(
    .INIT(64'hABA8FFFFABA80000)) 
    \bram_reg[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(read_counter_i_d1),
        .I4(pattern_pause_reg),
        .I5(p_0_in[3]),
        .O(bram_reg[4]));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \bram_reg[7]_i_1 
       (.I0(Q[2]),
        .I1(read_counter_i_d1),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(pattern_pause_reg),
        .I5(p_0_in[4]),
        .O(bram_reg[7]));
  LUT6 #(
    .INIT(64'h0001FFFF00010000)) 
    \bram_reg[8]_i_1 
       (.I0(Q[2]),
        .I1(read_counter_i_d1),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(pattern_pause_reg),
        .I5(p_0_in[5]),
        .O(bram_reg[8]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[9]_i_1 
       (.I0(read_counter_i_d1),
        .I1(pattern_pause_reg),
        .I2(\bram_reg_reg[12]_0 [0]),
        .O(bram_reg[9]));
  FDRE \bram_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[0]),
        .Q(\pattern_reg_reg[12] [0]),
        .R(1'b0));
  FDRE \bram_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[10]),
        .Q(\pattern_reg_reg[12] [8]),
        .R(1'b0));
  FDRE \bram_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[11]),
        .Q(\pattern_reg_reg[12] [9]),
        .R(1'b0));
  FDRE \bram_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[12]),
        .Q(\pattern_reg_reg[12] [10]),
        .R(1'b0));
  FDRE \bram_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[1]),
        .Q(\pattern_reg_reg[12] [1]),
        .R(1'b0));
  FDRE \bram_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[2]),
        .Q(\pattern_reg_reg[12] [2]),
        .R(1'b0));
  FDRE \bram_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[3]),
        .Q(\pattern_reg_reg[12] [3]),
        .R(1'b0));
  FDRE \bram_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[4]),
        .Q(\pattern_reg_reg[12] [4]),
        .R(1'b0));
  FDRE \bram_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[7]),
        .Q(\pattern_reg_reg[12] [5]),
        .R(1'b0));
  FDRE \bram_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[8]),
        .Q(\pattern_reg_reg[12] [6]),
        .R(1'b0));
  FDRE \bram_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[9]),
        .Q(\pattern_reg_reg[12] [7]),
        .R(1'b0));
  FDRE \read_counter_i_d1_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg__0[0]),
        .Q(read_counter_i_d1),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_d1_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg__0[1]),
        .Q(Q[0]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_d1_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg__0[2]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_d1_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg__0[3]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[0]_i_1__0_n_0 ),
        .Q(read_counter_i_reg__0[0]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[1]_i_1__0_n_0 ),
        .Q(read_counter_i_reg__0[1]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[2]_i_1__0_n_0 ),
        .Q(read_counter_i_reg__0[2]),
        .R(pattern_rst_reg));
  FDRE \read_counter_i_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[3]_i_2__0_n_0 ),
        .Q(read_counter_i_reg__0[3]),
        .R(pattern_rst_reg));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[0]_i_1__0_n_0 ),
        .Q(\bram_reg_reg[12]_0 [0]),
        .R(pattern_rst_reg));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[1]_i_1__0_n_0 ),
        .Q(\bram_reg_reg[12]_0 [1]),
        .R(pattern_rst_reg));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[2]_i_1__0_n_0 ),
        .Q(\bram_reg_reg[12]_0 [2]),
        .R(pattern_rst_reg));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\read_counter_i_rep[3]_i_2__0_n_0 ),
        .Q(\bram_reg_reg[12]_0 [3]),
        .R(pattern_rst_reg));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \read_counter_i_rep[0]_i_1__0 
       (.I0(read_counter_i_reg__0[0]),
        .O(\read_counter_i_rep[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \read_counter_i_rep[1]_i_1__0 
       (.I0(read_counter_i_reg__0[1]),
        .I1(read_counter_i_reg__0[0]),
        .O(\read_counter_i_rep[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \read_counter_i_rep[2]_i_1__0 
       (.I0(read_counter_i_reg__0[2]),
        .I1(read_counter_i_reg__0[0]),
        .I2(read_counter_i_reg__0[1]),
        .O(\read_counter_i_rep[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \read_counter_i_rep[3]_i_2__0 
       (.I0(read_counter_i_reg__0[3]),
        .I1(read_counter_i_reg__0[1]),
        .I2(read_counter_i_reg__0[0]),
        .I3(read_counter_i_reg__0[2]),
        .O(\read_counter_i_rep[3]_i_2__0_n_0 ));
endmodule

(* ORIG_REF_NAME = "bram_gen" *) 
module gtx3g_bert_0_bram_gen_47
   (Q,
    pattern_pause_reg_reg,
    rx_fifo_rst,
    pattern_pause_reg_reg_0,
    GT0_TXUSRCLK_OUT);
  output [10:0]Q;
  input pattern_pause_reg_reg;
  input rx_fifo_rst;
  input pattern_pause_reg_reg_0;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [10:0]Q;
  wire [12:0]bram_reg;
  wire [8:0]p_0_in;
  wire [0:0]p_1_in;
  wire pattern_pause_reg_reg;
  wire pattern_pause_reg_reg_0;
  wire [3:0]read_counter_i;
  wire [3:0]read_counter_i_d1;
  wire [3:0]read_counter_i_reg__0;
  wire \read_counter_i_rep[0]_i_1_n_0 ;
  wire \read_counter_i_rep[1]_i_1_n_0 ;
  wire \read_counter_i_rep[2]_i_1_n_0 ;
  wire \read_counter_i_rep[3]_i_2_n_0 ;
  wire rx_fifo_rst;

  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'hFEFFFE00)) 
    \bram_reg[0]_i_1__1 
       (.I0(read_counter_i_d1[2]),
        .I1(read_counter_i_d1[3]),
        .I2(read_counter_i_d1[1]),
        .I3(pattern_pause_reg_reg),
        .I4(p_0_in[0]),
        .O(bram_reg[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[10]_i_1__1 
       (.I0(read_counter_i_d1[1]),
        .I1(pattern_pause_reg_reg),
        .I2(read_counter_i[1]),
        .O(bram_reg[10]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[11]_i_1__1 
       (.I0(read_counter_i_d1[2]),
        .I1(pattern_pause_reg_reg),
        .I2(read_counter_i[2]),
        .O(bram_reg[11]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[12]_i_1__1 
       (.I0(read_counter_i_d1[3]),
        .I1(pattern_pause_reg_reg),
        .I2(read_counter_i[3]),
        .O(bram_reg[12]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h20202F20)) 
    \bram_reg[1]_i_1__1 
       (.I0(p_1_in),
        .I1(read_counter_i_d1[0]),
        .I2(pattern_pause_reg_reg),
        .I3(p_0_in[0]),
        .I4(read_counter_i[0]),
        .O(bram_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \bram_reg[1]_i_2 
       (.I0(read_counter_i_d1[2]),
        .I1(read_counter_i_d1[3]),
        .I2(read_counter_i_d1[1]),
        .O(p_1_in));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \bram_reg[1]_i_3 
       (.I0(read_counter_i[2]),
        .I1(read_counter_i[3]),
        .I2(read_counter_i[1]),
        .O(p_0_in[0]));
  LUT6 #(
    .INIT(64'h999AFFFF999A0000)) 
    \bram_reg[2]_i_1__1 
       (.I0(read_counter_i_d1[0]),
        .I1(read_counter_i_d1[1]),
        .I2(read_counter_i_d1[3]),
        .I3(read_counter_i_d1[2]),
        .I4(pattern_pause_reg_reg),
        .I5(p_0_in[2]),
        .O(bram_reg[2]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'h999A)) 
    \bram_reg[2]_i_2 
       (.I0(read_counter_i[0]),
        .I1(read_counter_i[1]),
        .I2(read_counter_i[3]),
        .I3(read_counter_i[2]),
        .O(p_0_in[2]));
  LUT6 #(
    .INIT(64'hCC9AFFFFCC9A0000)) 
    \bram_reg[3]_i_1__1 
       (.I0(read_counter_i_d1[0]),
        .I1(read_counter_i_d1[2]),
        .I2(read_counter_i_d1[3]),
        .I3(read_counter_i_d1[1]),
        .I4(pattern_pause_reg_reg),
        .I5(p_0_in[3]),
        .O(bram_reg[3]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hCC9A)) 
    \bram_reg[3]_i_2 
       (.I0(read_counter_i[0]),
        .I1(read_counter_i[2]),
        .I2(read_counter_i[3]),
        .I3(read_counter_i[1]),
        .O(p_0_in[3]));
  LUT6 #(
    .INIT(64'hABA8FFFFABA80000)) 
    \bram_reg[4]_i_1__1 
       (.I0(read_counter_i_d1[3]),
        .I1(read_counter_i_d1[2]),
        .I2(read_counter_i_d1[1]),
        .I3(read_counter_i_d1[0]),
        .I4(pattern_pause_reg_reg),
        .I5(p_0_in[4]),
        .O(bram_reg[4]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \bram_reg[4]_i_2 
       (.I0(read_counter_i[3]),
        .I1(read_counter_i[2]),
        .I2(read_counter_i[1]),
        .I3(read_counter_i[0]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \bram_reg[7]_i_1__1 
       (.I0(read_counter_i_d1[3]),
        .I1(read_counter_i_d1[0]),
        .I2(read_counter_i_d1[1]),
        .I3(read_counter_i_d1[2]),
        .I4(pattern_pause_reg_reg),
        .I5(p_0_in[7]),
        .O(bram_reg[7]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \bram_reg[7]_i_2 
       (.I0(read_counter_i[3]),
        .I1(read_counter_i[0]),
        .I2(read_counter_i[1]),
        .I3(read_counter_i[2]),
        .O(p_0_in[7]));
  LUT6 #(
    .INIT(64'h0001FFFF00010000)) 
    \bram_reg[8]_i_1__1 
       (.I0(read_counter_i_d1[3]),
        .I1(read_counter_i_d1[0]),
        .I2(read_counter_i_d1[1]),
        .I3(read_counter_i_d1[2]),
        .I4(pattern_pause_reg_reg),
        .I5(p_0_in[8]),
        .O(bram_reg[8]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \bram_reg[8]_i_2 
       (.I0(read_counter_i[3]),
        .I1(read_counter_i[0]),
        .I2(read_counter_i[1]),
        .I3(read_counter_i[2]),
        .O(p_0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bram_reg[9]_i_1__1 
       (.I0(read_counter_i_d1[0]),
        .I1(pattern_pause_reg_reg),
        .I2(read_counter_i[0]),
        .O(bram_reg[9]));
  FDRE \bram_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \bram_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[10]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \bram_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[11]),
        .Q(Q[9]),
        .R(1'b0));
  FDRE \bram_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[12]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \bram_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \bram_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \bram_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \bram_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \bram_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[7]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \bram_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[8]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \bram_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(bram_reg[9]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \read_counter_i_d1_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg__0[0]),
        .Q(read_counter_i_d1[0]),
        .R(rx_fifo_rst));
  FDRE \read_counter_i_d1_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg__0[1]),
        .Q(read_counter_i_d1[1]),
        .R(rx_fifo_rst));
  FDRE \read_counter_i_d1_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg__0[2]),
        .Q(read_counter_i_d1[2]),
        .R(rx_fifo_rst));
  FDRE \read_counter_i_d1_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(read_counter_i_reg__0[3]),
        .Q(read_counter_i_d1[3]),
        .R(rx_fifo_rst));
  FDRE \read_counter_i_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg_0),
        .D(\read_counter_i_rep[0]_i_1_n_0 ),
        .Q(read_counter_i_reg__0[0]),
        .R(rx_fifo_rst));
  FDRE \read_counter_i_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg_0),
        .D(\read_counter_i_rep[1]_i_1_n_0 ),
        .Q(read_counter_i_reg__0[1]),
        .R(rx_fifo_rst));
  FDRE \read_counter_i_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg_0),
        .D(\read_counter_i_rep[2]_i_1_n_0 ),
        .Q(read_counter_i_reg__0[2]),
        .R(rx_fifo_rst));
  FDRE \read_counter_i_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg_0),
        .D(\read_counter_i_rep[3]_i_2_n_0 ),
        .Q(read_counter_i_reg__0[3]),
        .R(rx_fifo_rst));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg_0),
        .D(\read_counter_i_rep[0]_i_1_n_0 ),
        .Q(read_counter_i[0]),
        .R(rx_fifo_rst));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg_0),
        .D(\read_counter_i_rep[1]_i_1_n_0 ),
        .Q(read_counter_i[1]),
        .R(rx_fifo_rst));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg_0),
        .D(\read_counter_i_rep[2]_i_1_n_0 ),
        .Q(read_counter_i[2]),
        .R(rx_fifo_rst));
  (* equivalent_register_removal = "no" *) 
  FDRE \read_counter_i_reg_rep[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg_0),
        .D(\read_counter_i_rep[3]_i_2_n_0 ),
        .Q(read_counter_i[3]),
        .R(rx_fifo_rst));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \read_counter_i_rep[0]_i_1 
       (.I0(read_counter_i_reg__0[0]),
        .O(\read_counter_i_rep[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \read_counter_i_rep[1]_i_1 
       (.I0(read_counter_i_reg__0[1]),
        .I1(read_counter_i_reg__0[0]),
        .O(\read_counter_i_rep[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \read_counter_i_rep[2]_i_1 
       (.I0(read_counter_i_reg__0[2]),
        .I1(read_counter_i_reg__0[0]),
        .I2(read_counter_i_reg__0[1]),
        .O(\read_counter_i_rep[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \read_counter_i_rep[3]_i_2 
       (.I0(read_counter_i_reg__0[3]),
        .I1(read_counter_i_reg__0[1]),
        .I2(read_counter_i_reg__0[0]),
        .I3(read_counter_i_reg__0[2]),
        .O(\read_counter_i_rep[3]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "error_insertion" *) 
module gtx3g_bert_0_error_insertion
   (D,
    GT0_TXUSRCLK_OUT,
    Q,
    \txctrl_reg_reg[0] ,
    \bit_pointer_reg[15] ,
    TEST_RESET,
    out,
    word_cnt_reg,
    error_insertion_rst_reg);
  output [15:0]D;
  input GT0_TXUSRCLK_OUT;
  input [15:0]Q;
  input \txctrl_reg_reg[0] ;
  input [15:0]\bit_pointer_reg[15] ;
  input TEST_RESET;
  input out;
  input [31:0]word_cnt_reg;
  input error_insertion_rst_reg;

  wire [15:0]D;
  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire TEST_RESET;
  wire [15:0]\bit_pointer_reg[15] ;
  wire error_insert;
  wire error_insert_reg_i_10__0_n_0;
  wire error_insert_reg_i_11__0_n_0;
  wire error_insert_reg_i_12__0_n_0;
  wire error_insert_reg_i_1__0_n_0;
  wire error_insert_reg_i_2__0_n_0;
  wire error_insert_reg_i_3__0_n_0;
  wire error_insert_reg_i_4__0_n_0;
  wire error_insert_reg_i_5__0_n_0;
  wire error_insert_reg_i_6__0_n_0;
  wire error_insert_reg_i_7__0_n_0;
  wire error_insert_reg_i_8__0_n_0;
  wire error_insert_reg_i_9__0_n_0;
  wire error_insertion_rst_reg;
  wire out;
  wire \txctrl_reg_reg[0] ;
  wire [31:0]word_cnt_reg;

  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[0]_i_1__0 
       (.I0(Q[0]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [0]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[10]_i_1__0 
       (.I0(Q[10]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [10]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[11]_i_1__0 
       (.I0(Q[11]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [11]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[12]_i_1__0 
       (.I0(Q[12]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [12]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[13]_i_1__0 
       (.I0(Q[13]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [13]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[14]_i_1__0 
       (.I0(Q[14]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [14]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[14]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[15]_i_1__0 
       (.I0(Q[15]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [15]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[1]_i_1__0 
       (.I0(Q[1]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [1]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[2]_i_1__0 
       (.I0(Q[2]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [2]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[3]_i_1__0 
       (.I0(Q[3]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [3]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[4]_i_1__0 
       (.I0(Q[4]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [4]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[5]_i_1__0 
       (.I0(Q[5]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [5]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[6]_i_1__0 
       (.I0(Q[6]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [6]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[7]_i_1__0 
       (.I0(Q[7]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [7]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[8]_i_1__0 
       (.I0(Q[8]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [8]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[9]_i_1__0 
       (.I0(Q[9]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [9]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[9]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'hFFEF)) 
    error_insert_reg_i_10__0
       (.I0(word_cnt_reg[3]),
        .I1(word_cnt_reg[9]),
        .I2(word_cnt_reg[0]),
        .I3(word_cnt_reg[7]),
        .O(error_insert_reg_i_10__0_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    error_insert_reg_i_11__0
       (.I0(word_cnt_reg[12]),
        .I1(word_cnt_reg[10]),
        .I2(word_cnt_reg[2]),
        .I3(word_cnt_reg[5]),
        .O(error_insert_reg_i_11__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'hFF7F)) 
    error_insert_reg_i_12__0
       (.I0(word_cnt_reg[1]),
        .I1(word_cnt_reg[9]),
        .I2(word_cnt_reg[3]),
        .I3(word_cnt_reg[0]),
        .O(error_insert_reg_i_12__0_n_0));
  LUT6 #(
    .INIT(64'h0000000001010100)) 
    error_insert_reg_i_1__0
       (.I0(error_insert_reg_i_2__0_n_0),
        .I1(error_insert_reg_i_3__0_n_0),
        .I2(error_insert_reg_i_4__0_n_0),
        .I3(error_insert_reg_i_5__0_n_0),
        .I4(error_insert_reg_i_6__0_n_0),
        .I5(error_insertion_rst_reg),
        .O(error_insert_reg_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFBFFFFFBFFFF)) 
    error_insert_reg_i_2__0
       (.I0(word_cnt_reg[18]),
        .I1(word_cnt_reg[14]),
        .I2(word_cnt_reg[29]),
        .I3(word_cnt_reg[12]),
        .I4(word_cnt_reg[13]),
        .I5(word_cnt_reg[15]),
        .O(error_insert_reg_i_2__0_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    error_insert_reg_i_3__0
       (.I0(word_cnt_reg[28]),
        .I1(word_cnt_reg[17]),
        .I2(word_cnt_reg[19]),
        .I3(word_cnt_reg[31]),
        .I4(error_insert_reg_i_7__0_n_0),
        .O(error_insert_reg_i_3__0_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    error_insert_reg_i_4__0
       (.I0(word_cnt_reg[26]),
        .I1(word_cnt_reg[22]),
        .I2(word_cnt_reg[23]),
        .I3(word_cnt_reg[21]),
        .I4(error_insert_reg_i_8__0_n_0),
        .O(error_insert_reg_i_4__0_n_0));
  LUT5 #(
    .INIT(32'h00000040)) 
    error_insert_reg_i_5__0
       (.I0(word_cnt_reg[12]),
        .I1(word_cnt_reg[10]),
        .I2(word_cnt_reg[2]),
        .I3(error_insert_reg_i_9__0_n_0),
        .I4(error_insert_reg_i_10__0_n_0),
        .O(error_insert_reg_i_5__0_n_0));
  LUT5 #(
    .INIT(32'h00000080)) 
    error_insert_reg_i_6__0
       (.I0(word_cnt_reg[7]),
        .I1(word_cnt_reg[4]),
        .I2(word_cnt_reg[8]),
        .I3(error_insert_reg_i_11__0_n_0),
        .I4(error_insert_reg_i_12__0_n_0),
        .O(error_insert_reg_i_6__0_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    error_insert_reg_i_7__0
       (.I0(word_cnt_reg[25]),
        .I1(word_cnt_reg[24]),
        .I2(word_cnt_reg[27]),
        .I3(word_cnt_reg[30]),
        .O(error_insert_reg_i_7__0_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    error_insert_reg_i_8__0
       (.I0(word_cnt_reg[6]),
        .I1(word_cnt_reg[20]),
        .I2(word_cnt_reg[11]),
        .I3(word_cnt_reg[16]),
        .O(error_insert_reg_i_8__0_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    error_insert_reg_i_9__0
       (.I0(word_cnt_reg[5]),
        .I1(word_cnt_reg[1]),
        .I2(word_cnt_reg[4]),
        .I3(word_cnt_reg[8]),
        .O(error_insert_reg_i_9__0_n_0));
  FDRE error_insert_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insert_reg_i_1__0_n_0),
        .Q(error_insert),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "error_insertion" *) 
module gtx3g_bert_0_error_insertion_34
   (D,
    GT0_TXUSRCLK_OUT,
    Q,
    \txctrl_reg_reg[0] ,
    \bit_pointer_reg[15] ,
    TEST_RESET,
    out,
    word_cnt_reg,
    error_insertion_rst_reg);
  output [15:0]D;
  input GT0_TXUSRCLK_OUT;
  input [15:0]Q;
  input \txctrl_reg_reg[0] ;
  input [15:0]\bit_pointer_reg[15] ;
  input TEST_RESET;
  input out;
  input [31:0]word_cnt_reg;
  input error_insertion_rst_reg;

  wire [15:0]D;
  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire TEST_RESET;
  wire [15:0]\bit_pointer_reg[15] ;
  wire error_insert;
  wire error_insert_reg_i_10_n_0;
  wire error_insert_reg_i_11_n_0;
  wire error_insert_reg_i_12_n_0;
  wire error_insert_reg_i_1_n_0;
  wire error_insert_reg_i_2_n_0;
  wire error_insert_reg_i_3_n_0;
  wire error_insert_reg_i_4_n_0;
  wire error_insert_reg_i_5_n_0;
  wire error_insert_reg_i_6_n_0;
  wire error_insert_reg_i_7_n_0;
  wire error_insert_reg_i_8_n_0;
  wire error_insert_reg_i_9_n_0;
  wire error_insertion_rst_reg;
  wire out;
  wire \txctrl_reg_reg[0] ;
  wire [31:0]word_cnt_reg;

  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[0]_i_1 
       (.I0(Q[0]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [0]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[10]_i_1 
       (.I0(Q[10]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [10]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[11]_i_1 
       (.I0(Q[11]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [11]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[12]_i_1 
       (.I0(Q[12]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [12]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[13]_i_1 
       (.I0(Q[13]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [13]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[14]_i_1 
       (.I0(Q[14]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [14]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[14]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[15]_i_1 
       (.I0(Q[15]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [15]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[1]_i_1 
       (.I0(Q[1]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [1]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[2]_i_1 
       (.I0(Q[2]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [2]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[3]_i_1 
       (.I0(Q[3]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [3]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[4]_i_1 
       (.I0(Q[4]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [4]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[5]_i_1 
       (.I0(Q[5]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [5]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[6]_i_1 
       (.I0(Q[6]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [6]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[7]_i_1 
       (.I0(Q[7]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [7]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[8]_i_1 
       (.I0(Q[8]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [8]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA6AA)) 
    \TX_DATA_OUT[9]_i_1 
       (.I0(Q[9]),
        .I1(error_insert),
        .I2(\txctrl_reg_reg[0] ),
        .I3(\bit_pointer_reg[15] [9]),
        .I4(TEST_RESET),
        .I5(out),
        .O(D[9]));
  LUT6 #(
    .INIT(64'h0000000001010100)) 
    error_insert_reg_i_1
       (.I0(error_insert_reg_i_2_n_0),
        .I1(error_insert_reg_i_3_n_0),
        .I2(error_insert_reg_i_4_n_0),
        .I3(error_insert_reg_i_5_n_0),
        .I4(error_insert_reg_i_6_n_0),
        .I5(error_insertion_rst_reg),
        .O(error_insert_reg_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    error_insert_reg_i_10
       (.I0(word_cnt_reg[4]),
        .I1(word_cnt_reg[10]),
        .I2(word_cnt_reg[1]),
        .I3(word_cnt_reg[2]),
        .O(error_insert_reg_i_10_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    error_insert_reg_i_11
       (.I0(word_cnt_reg[0]),
        .I1(word_cnt_reg[8]),
        .I2(word_cnt_reg[5]),
        .I3(word_cnt_reg[3]),
        .O(error_insert_reg_i_11_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    error_insert_reg_i_12
       (.I0(word_cnt_reg[7]),
        .I1(word_cnt_reg[12]),
        .I2(word_cnt_reg[4]),
        .I3(word_cnt_reg[1]),
        .O(error_insert_reg_i_12_n_0));
  LUT6 #(
    .INIT(64'hFFFFFBFFFFFBFFFF)) 
    error_insert_reg_i_2
       (.I0(word_cnt_reg[18]),
        .I1(word_cnt_reg[14]),
        .I2(word_cnt_reg[29]),
        .I3(word_cnt_reg[12]),
        .I4(word_cnt_reg[13]),
        .I5(word_cnt_reg[15]),
        .O(error_insert_reg_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    error_insert_reg_i_3
       (.I0(word_cnt_reg[28]),
        .I1(word_cnt_reg[17]),
        .I2(word_cnt_reg[19]),
        .I3(word_cnt_reg[31]),
        .I4(error_insert_reg_i_7_n_0),
        .O(error_insert_reg_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    error_insert_reg_i_4
       (.I0(word_cnt_reg[26]),
        .I1(word_cnt_reg[22]),
        .I2(word_cnt_reg[23]),
        .I3(word_cnt_reg[21]),
        .I4(error_insert_reg_i_8_n_0),
        .O(error_insert_reg_i_4_n_0));
  LUT5 #(
    .INIT(32'h00000004)) 
    error_insert_reg_i_5
       (.I0(word_cnt_reg[5]),
        .I1(word_cnt_reg[8]),
        .I2(word_cnt_reg[0]),
        .I3(error_insert_reg_i_9_n_0),
        .I4(error_insert_reg_i_10_n_0),
        .O(error_insert_reg_i_5_n_0));
  LUT5 #(
    .INIT(32'h00000040)) 
    error_insert_reg_i_6
       (.I0(word_cnt_reg[9]),
        .I1(word_cnt_reg[2]),
        .I2(word_cnt_reg[10]),
        .I3(error_insert_reg_i_11_n_0),
        .I4(error_insert_reg_i_12_n_0),
        .O(error_insert_reg_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    error_insert_reg_i_7
       (.I0(word_cnt_reg[25]),
        .I1(word_cnt_reg[24]),
        .I2(word_cnt_reg[27]),
        .I3(word_cnt_reg[30]),
        .O(error_insert_reg_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    error_insert_reg_i_8
       (.I0(word_cnt_reg[6]),
        .I1(word_cnt_reg[20]),
        .I2(word_cnt_reg[11]),
        .I3(word_cnt_reg[16]),
        .O(error_insert_reg_i_8_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    error_insert_reg_i_9
       (.I0(word_cnt_reg[3]),
        .I1(word_cnt_reg[12]),
        .I2(word_cnt_reg[9]),
        .I3(word_cnt_reg[7]),
        .O(error_insert_reg_i_9_n_0));
  FDRE error_insert_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insert_reg_i_1_n_0),
        .Q(error_insert),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "gtx3g" *) (* X_CORE_INFO = "gtx3g,gtwizard_v3_6_7,{protocol_file=xaui}" *) 
module gtx3g_bert_0_gtx3g
   (sysclk_in,
    soft_reset_tx_in,
    soft_reset_rx_in,
    dont_reset_on_data_error_in,
    gt0_tx_fsm_reset_done_out,
    gt0_rx_fsm_reset_done_out,
    gt0_data_valid_in,
    gt1_tx_fsm_reset_done_out,
    gt1_rx_fsm_reset_done_out,
    gt1_data_valid_in,
    gt0_drpaddr_in,
    gt0_drpclk_in,
    gt0_drpdi_in,
    gt0_drpdo_out,
    gt0_drpen_in,
    gt0_drprdy_out,
    gt0_drpwe_in,
    gt0_dmonitorout_out,
    gt0_loopback_in,
    gt0_rxrate_in,
    gt0_rxpd_in,
    gt0_txpd_in,
    gt0_eyescanreset_in,
    gt0_rxuserrdy_in,
    gt0_eyescandataerror_out,
    gt0_eyescantrigger_in,
    gt0_rxcdrhold_in,
    gt0_rxclkcorcnt_out,
    gt0_rxusrclk_in,
    gt0_rxusrclk2_in,
    gt0_rxdata_out,
    gt0_rxprbserr_out,
    gt0_rxprbssel_in,
    gt0_rxprbscntreset_in,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    gt0_gtxrxp_in,
    gt0_gtxrxn_in,
    gt0_rxbufreset_in,
    gt0_rxbufstatus_out,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    gt0_rxmcommaalignen_in,
    gt0_rxpcommaalignen_in,
    gt0_rxdfelpmreset_in,
    gt0_rxmonitorout_out,
    gt0_rxmonitorsel_in,
    gt0_rxratedone_out,
    gt0_rxoutclkfabric_out,
    gt0_gtrxreset_in,
    gt0_rxpcsreset_in,
    gt0_rxpmareset_in,
    gt0_rxlpmen_in,
    gt0_rxpolarity_in,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxresetdone_out,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    gt0_gttxreset_in,
    gt0_txuserrdy_in,
    gt0_txusrclk_in,
    gt0_txusrclk2_in,
    gt0_txelecidle_in,
    gt0_txprbsforceerr_in,
    gt0_txdiffctrl_in,
    gt0_txdata_in,
    gt0_gtxtxn_out,
    gt0_gtxtxp_out,
    gt0_txoutclk_out,
    gt0_txoutclkfabric_out,
    gt0_txoutclkpcs_out,
    gt0_txcharisk_in,
    gt0_txpcsreset_in,
    gt0_txpmareset_in,
    gt0_txresetdone_out,
    gt0_txpolarity_in,
    gt0_tx8b10bbypass_in,
    gt0_txprbssel_in,
    gt1_drpaddr_in,
    gt1_drpclk_in,
    gt1_drpdi_in,
    gt1_drpdo_out,
    gt1_drpen_in,
    gt1_drprdy_out,
    gt1_drpwe_in,
    gt1_dmonitorout_out,
    gt1_loopback_in,
    gt1_rxrate_in,
    gt1_rxpd_in,
    gt1_txpd_in,
    gt1_eyescanreset_in,
    gt1_rxuserrdy_in,
    gt1_eyescandataerror_out,
    gt1_eyescantrigger_in,
    gt1_rxcdrhold_in,
    gt1_rxclkcorcnt_out,
    gt1_rxusrclk_in,
    gt1_rxusrclk2_in,
    gt1_rxdata_out,
    gt1_rxprbserr_out,
    gt1_rxprbssel_in,
    gt1_rxprbscntreset_in,
    gt1_rxdisperr_out,
    gt1_rxnotintable_out,
    gt1_gtxrxp_in,
    gt1_gtxrxn_in,
    gt1_rxbufreset_in,
    gt1_rxbufstatus_out,
    gt1_rxbyteisaligned_out,
    gt1_rxbyterealign_out,
    gt1_rxcommadet_out,
    gt1_rxmcommaalignen_in,
    gt1_rxpcommaalignen_in,
    gt1_rxdfelpmreset_in,
    gt1_rxmonitorout_out,
    gt1_rxmonitorsel_in,
    gt1_rxratedone_out,
    gt1_rxoutclkfabric_out,
    gt1_gtrxreset_in,
    gt1_rxpcsreset_in,
    gt1_rxpmareset_in,
    gt1_rxlpmen_in,
    gt1_rxpolarity_in,
    gt1_rxchariscomma_out,
    gt1_rxcharisk_out,
    gt1_rxresetdone_out,
    gt1_txpostcursor_in,
    gt1_txprecursor_in,
    gt1_gttxreset_in,
    gt1_txuserrdy_in,
    gt1_txusrclk_in,
    gt1_txusrclk2_in,
    gt1_txelecidle_in,
    gt1_txprbsforceerr_in,
    gt1_txdiffctrl_in,
    gt1_txdata_in,
    gt1_gtxtxn_out,
    gt1_gtxtxp_out,
    gt1_txoutclk_out,
    gt1_txoutclkfabric_out,
    gt1_txoutclkpcs_out,
    gt1_txcharisk_in,
    gt1_txpcsreset_in,
    gt1_txpmareset_in,
    gt1_txresetdone_out,
    gt1_txpolarity_in,
    gt1_tx8b10bbypass_in,
    gt1_txprbssel_in,
    gt0_qplllock_in,
    gt0_qpllrefclklost_in,
    gt0_qpllreset_out,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in);
  input sysclk_in;
  input soft_reset_tx_in;
  input soft_reset_rx_in;
  input dont_reset_on_data_error_in;
  output gt0_tx_fsm_reset_done_out;
  output gt0_rx_fsm_reset_done_out;
  input gt0_data_valid_in;
  output gt1_tx_fsm_reset_done_out;
  output gt1_rx_fsm_reset_done_out;
  input gt1_data_valid_in;
  input [8:0]gt0_drpaddr_in;
  input gt0_drpclk_in;
  input [15:0]gt0_drpdi_in;
  output [15:0]gt0_drpdo_out;
  input gt0_drpen_in;
  output gt0_drprdy_out;
  input gt0_drpwe_in;
  output [7:0]gt0_dmonitorout_out;
  input [2:0]gt0_loopback_in;
  input [2:0]gt0_rxrate_in;
  input [1:0]gt0_rxpd_in;
  input [1:0]gt0_txpd_in;
  input gt0_eyescanreset_in;
  input gt0_rxuserrdy_in;
  output gt0_eyescandataerror_out;
  input gt0_eyescantrigger_in;
  input gt0_rxcdrhold_in;
  output [1:0]gt0_rxclkcorcnt_out;
  input gt0_rxusrclk_in;
  input gt0_rxusrclk2_in;
  output [15:0]gt0_rxdata_out;
  output gt0_rxprbserr_out;
  input [2:0]gt0_rxprbssel_in;
  input gt0_rxprbscntreset_in;
  output [1:0]gt0_rxdisperr_out;
  output [1:0]gt0_rxnotintable_out;
  input gt0_gtxrxp_in;
  input gt0_gtxrxn_in;
  input gt0_rxbufreset_in;
  output [2:0]gt0_rxbufstatus_out;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  input gt0_rxmcommaalignen_in;
  input gt0_rxpcommaalignen_in;
  input gt0_rxdfelpmreset_in;
  output [6:0]gt0_rxmonitorout_out;
  input [1:0]gt0_rxmonitorsel_in;
  output gt0_rxratedone_out;
  output gt0_rxoutclkfabric_out;
  input gt0_gtrxreset_in;
  input gt0_rxpcsreset_in;
  input gt0_rxpmareset_in;
  input gt0_rxlpmen_in;
  input gt0_rxpolarity_in;
  output [1:0]gt0_rxchariscomma_out;
  output [1:0]gt0_rxcharisk_out;
  output gt0_rxresetdone_out;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input gt0_gttxreset_in;
  input gt0_txuserrdy_in;
  input gt0_txusrclk_in;
  input gt0_txusrclk2_in;
  input gt0_txelecidle_in;
  input gt0_txprbsforceerr_in;
  input [3:0]gt0_txdiffctrl_in;
  input [15:0]gt0_txdata_in;
  output gt0_gtxtxn_out;
  output gt0_gtxtxp_out;
  output gt0_txoutclk_out;
  output gt0_txoutclkfabric_out;
  output gt0_txoutclkpcs_out;
  input [1:0]gt0_txcharisk_in;
  input gt0_txpcsreset_in;
  input gt0_txpmareset_in;
  output gt0_txresetdone_out;
  input gt0_txpolarity_in;
  input [1:0]gt0_tx8b10bbypass_in;
  input [2:0]gt0_txprbssel_in;
  input [8:0]gt1_drpaddr_in;
  input gt1_drpclk_in;
  input [15:0]gt1_drpdi_in;
  output [15:0]gt1_drpdo_out;
  input gt1_drpen_in;
  output gt1_drprdy_out;
  input gt1_drpwe_in;
  output [7:0]gt1_dmonitorout_out;
  input [2:0]gt1_loopback_in;
  input [2:0]gt1_rxrate_in;
  input [1:0]gt1_rxpd_in;
  input [1:0]gt1_txpd_in;
  input gt1_eyescanreset_in;
  input gt1_rxuserrdy_in;
  output gt1_eyescandataerror_out;
  input gt1_eyescantrigger_in;
  input gt1_rxcdrhold_in;
  output [1:0]gt1_rxclkcorcnt_out;
  input gt1_rxusrclk_in;
  input gt1_rxusrclk2_in;
  output [15:0]gt1_rxdata_out;
  output gt1_rxprbserr_out;
  input [2:0]gt1_rxprbssel_in;
  input gt1_rxprbscntreset_in;
  output [1:0]gt1_rxdisperr_out;
  output [1:0]gt1_rxnotintable_out;
  input gt1_gtxrxp_in;
  input gt1_gtxrxn_in;
  input gt1_rxbufreset_in;
  output [2:0]gt1_rxbufstatus_out;
  output gt1_rxbyteisaligned_out;
  output gt1_rxbyterealign_out;
  output gt1_rxcommadet_out;
  input gt1_rxmcommaalignen_in;
  input gt1_rxpcommaalignen_in;
  input gt1_rxdfelpmreset_in;
  output [6:0]gt1_rxmonitorout_out;
  input [1:0]gt1_rxmonitorsel_in;
  output gt1_rxratedone_out;
  output gt1_rxoutclkfabric_out;
  input gt1_gtrxreset_in;
  input gt1_rxpcsreset_in;
  input gt1_rxpmareset_in;
  input gt1_rxlpmen_in;
  input gt1_rxpolarity_in;
  output [1:0]gt1_rxchariscomma_out;
  output [1:0]gt1_rxcharisk_out;
  output gt1_rxresetdone_out;
  input [4:0]gt1_txpostcursor_in;
  input [4:0]gt1_txprecursor_in;
  input gt1_gttxreset_in;
  input gt1_txuserrdy_in;
  input gt1_txusrclk_in;
  input gt1_txusrclk2_in;
  input gt1_txelecidle_in;
  input gt1_txprbsforceerr_in;
  input [3:0]gt1_txdiffctrl_in;
  input [15:0]gt1_txdata_in;
  output gt1_gtxtxn_out;
  output gt1_gtxtxp_out;
  output gt1_txoutclk_out;
  output gt1_txoutclkfabric_out;
  output gt1_txoutclkpcs_out;
  input [1:0]gt1_txcharisk_in;
  input gt1_txpcsreset_in;
  input gt1_txpmareset_in;
  output gt1_txresetdone_out;
  input gt1_txpolarity_in;
  input [1:0]gt1_tx8b10bbypass_in;
  input [2:0]gt1_txprbssel_in;
  input gt0_qplllock_in;
  input gt0_qpllrefclklost_in;
  output gt0_qpllreset_out;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;

  wire dont_reset_on_data_error_in;
  wire gt0_data_valid_in;
  wire [7:0]gt0_dmonitorout_out;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gtrxreset_in;
  wire gt0_gttxreset_in;
  wire gt0_gtxrxn_in;
  wire gt0_gtxrxp_in;
  wire gt0_gtxtxn_out;
  wire gt0_gtxtxp_out;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplllock_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_qpllrefclklost_in;
  wire gt0_qpllreset_out;
  wire gt0_rx_fsm_reset_done_out;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [1:0]gt0_rxchariscomma_out;
  wire [1:0]gt0_rxcharisk_out;
  wire [1:0]gt0_rxclkcorcnt_out;
  wire gt0_rxcommadet_out;
  wire [15:0]gt0_rxdata_out;
  wire gt0_rxdfelpmreset_in;
  wire [1:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire gt0_rxmcommaalignen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [1:0]gt0_rxnotintable_out;
  wire gt0_rxoutclkfabric_out;
  wire gt0_rxpcommaalignen_in;
  wire gt0_rxpcsreset_in;
  wire [1:0]gt0_rxpd_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire gt0_rxresetdone_out;
  wire gt0_rxuserrdy_in;
  wire gt0_rxusrclk2_in;
  wire gt0_rxusrclk_in;
  wire [1:0]gt0_tx8b10bbypass_in;
  wire gt0_tx_fsm_reset_done_out;
  wire [1:0]gt0_txcharisk_in;
  wire [15:0]gt0_txdata_in;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txelecidle_in;
  wire gt0_txoutclk_out;
  wire gt0_txoutclkfabric_out;
  wire gt0_txoutclkpcs_out;
  wire gt0_txpcsreset_in;
  wire [1:0]gt0_txpd_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txresetdone_out;
  wire gt0_txuserrdy_in;
  wire gt0_txusrclk2_in;
  wire gt0_txusrclk_in;
  wire gt1_data_valid_in;
  wire [7:0]gt1_dmonitorout_out;
  wire [8:0]gt1_drpaddr_in;
  wire gt1_drpclk_in;
  wire [15:0]gt1_drpdi_in;
  wire [15:0]gt1_drpdo_out;
  wire gt1_drpen_in;
  wire gt1_drprdy_out;
  wire gt1_drpwe_in;
  wire gt1_eyescandataerror_out;
  wire gt1_eyescanreset_in;
  wire gt1_eyescantrigger_in;
  wire gt1_gtrxreset_in;
  wire gt1_gttxreset_in;
  wire gt1_gtxrxn_in;
  wire gt1_gtxrxp_in;
  wire gt1_gtxtxn_out;
  wire gt1_gtxtxp_out;
  wire [2:0]gt1_loopback_in;
  wire gt1_rx_fsm_reset_done_out;
  wire gt1_rxbufreset_in;
  wire [2:0]gt1_rxbufstatus_out;
  wire gt1_rxbyteisaligned_out;
  wire gt1_rxbyterealign_out;
  wire gt1_rxcdrhold_in;
  wire [1:0]gt1_rxchariscomma_out;
  wire [1:0]gt1_rxcharisk_out;
  wire [1:0]gt1_rxclkcorcnt_out;
  wire gt1_rxcommadet_out;
  wire [15:0]gt1_rxdata_out;
  wire gt1_rxdfelpmreset_in;
  wire [1:0]gt1_rxdisperr_out;
  wire gt1_rxlpmen_in;
  wire gt1_rxmcommaalignen_in;
  wire [6:0]gt1_rxmonitorout_out;
  wire [1:0]gt1_rxmonitorsel_in;
  wire [1:0]gt1_rxnotintable_out;
  wire gt1_rxoutclkfabric_out;
  wire gt1_rxpcommaalignen_in;
  wire gt1_rxpcsreset_in;
  wire [1:0]gt1_rxpd_in;
  wire gt1_rxpmareset_in;
  wire gt1_rxpolarity_in;
  wire gt1_rxprbscntreset_in;
  wire gt1_rxprbserr_out;
  wire [2:0]gt1_rxprbssel_in;
  wire [2:0]gt1_rxrate_in;
  wire gt1_rxratedone_out;
  wire gt1_rxresetdone_out;
  wire gt1_rxuserrdy_in;
  wire gt1_rxusrclk2_in;
  wire gt1_rxusrclk_in;
  wire [1:0]gt1_tx8b10bbypass_in;
  wire gt1_tx_fsm_reset_done_out;
  wire [1:0]gt1_txcharisk_in;
  wire [15:0]gt1_txdata_in;
  wire [3:0]gt1_txdiffctrl_in;
  wire gt1_txelecidle_in;
  wire gt1_txoutclk_out;
  wire gt1_txoutclkfabric_out;
  wire gt1_txoutclkpcs_out;
  wire gt1_txpcsreset_in;
  wire [1:0]gt1_txpd_in;
  wire gt1_txpmareset_in;
  wire gt1_txpolarity_in;
  wire [4:0]gt1_txpostcursor_in;
  wire gt1_txprbsforceerr_in;
  wire [2:0]gt1_txprbssel_in;
  wire [4:0]gt1_txprecursor_in;
  wire gt1_txresetdone_out;
  wire gt1_txuserrdy_in;
  wire gt1_txusrclk2_in;
  wire gt1_txusrclk_in;
  wire soft_reset_rx_in;
  wire soft_reset_tx_in;
  wire sysclk_in;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EXAMPLE_SIMULATION = "0" *) 
  (* EXAMPLE_SIM_GTRESET_SPEEDUP = "TRUE" *) 
  (* EXAMPLE_USE_CHIPSCOPE = "0" *) 
  (* RX_CDRLOCK_TIME = "33333" *) 
  (* STABLE_CLOCK_PERIOD = "10" *) 
  (* WAIT_TIME_CDRLOCK = "3333" *) 
  gtx3g_bert_0_gtx3g_init inst
       (.dont_reset_on_data_error_in(dont_reset_on_data_error_in),
        .gt0_data_valid_in(gt0_data_valid_in),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drpaddr_in(gt0_drpaddr_in),
        .gt0_drpclk_in(gt0_drpclk_in),
        .gt0_drpdi_in(gt0_drpdi_in),
        .gt0_drpdo_out(gt0_drpdo_out),
        .gt0_drpen_in(gt0_drpen_in),
        .gt0_drprdy_out(gt0_drprdy_out),
        .gt0_drpwe_in(gt0_drpwe_in),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_gtrxreset_in(gt0_gtrxreset_in),
        .gt0_gttxreset_in(gt0_gttxreset_in),
        .gt0_gtxrxn_in(gt0_gtxrxn_in),
        .gt0_gtxrxp_in(gt0_gtxrxp_in),
        .gt0_gtxtxn_out(gt0_gtxtxn_out),
        .gt0_gtxtxp_out(gt0_gtxtxp_out),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_qplllock_in(gt0_qplllock_in),
        .gt0_qplloutclk_in(gt0_qplloutclk_in),
        .gt0_qplloutrefclk_in(gt0_qplloutrefclk_in),
        .gt0_qpllrefclklost_in(gt0_qpllrefclklost_in),
        .gt0_qpllreset_out(gt0_qpllreset_out),
        .gt0_rx_fsm_reset_done_out(gt0_rx_fsm_reset_done_out),
        .gt0_rxbufreset_in(gt0_rxbufreset_in),
        .gt0_rxbufstatus_out(gt0_rxbufstatus_out),
        .gt0_rxbyteisaligned_out(gt0_rxbyteisaligned_out),
        .gt0_rxbyterealign_out(gt0_rxbyterealign_out),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxclkcorcnt_out(gt0_rxclkcorcnt_out),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxdata_out(gt0_rxdata_out),
        .gt0_rxdfelpmreset_in(gt0_rxdfelpmreset_in),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxlpmen_in(gt0_rxlpmen_in),
        .gt0_rxmcommaalignen_in(gt0_rxmcommaalignen_in),
        .gt0_rxmonitorout_out(gt0_rxmonitorout_out),
        .gt0_rxmonitorsel_in(gt0_rxmonitorsel_in),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .gt0_rxoutclkfabric_out(gt0_rxoutclkfabric_out),
        .gt0_rxpcommaalignen_in(gt0_rxpcommaalignen_in),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpd_in(gt0_rxpd_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxratedone_out(gt0_rxratedone_out),
        .gt0_rxresetdone_out(gt0_rxresetdone_out),
        .gt0_rxuserrdy_in(gt0_rxuserrdy_in),
        .gt0_rxusrclk2_in(gt0_rxusrclk2_in),
        .gt0_rxusrclk_in(gt0_rxusrclk_in),
        .gt0_tx8b10bbypass_in(gt0_tx8b10bbypass_in),
        .gt0_tx_fsm_reset_done_out(gt0_tx_fsm_reset_done_out),
        .gt0_txcharisk_in(gt0_txcharisk_in),
        .gt0_txdata_in(gt0_txdata_in),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txelecidle_in(gt0_txelecidle_in),
        .gt0_txoutclk_out(gt0_txoutclk_out),
        .gt0_txoutclkfabric_out(gt0_txoutclkfabric_out),
        .gt0_txoutclkpcs_out(gt0_txoutclkpcs_out),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txpd_in(gt0_txpd_in),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gt0_txresetdone_out(gt0_txresetdone_out),
        .gt0_txuserrdy_in(gt0_txuserrdy_in),
        .gt0_txusrclk2_in(gt0_txusrclk2_in),
        .gt0_txusrclk_in(gt0_txusrclk_in),
        .gt1_data_valid_in(gt1_data_valid_in),
        .gt1_dmonitorout_out(gt1_dmonitorout_out),
        .gt1_drpaddr_in(gt1_drpaddr_in),
        .gt1_drpclk_in(gt1_drpclk_in),
        .gt1_drpdi_in(gt1_drpdi_in),
        .gt1_drpdo_out(gt1_drpdo_out),
        .gt1_drpen_in(gt1_drpen_in),
        .gt1_drprdy_out(gt1_drprdy_out),
        .gt1_drpwe_in(gt1_drpwe_in),
        .gt1_eyescandataerror_out(gt1_eyescandataerror_out),
        .gt1_eyescanreset_in(gt1_eyescanreset_in),
        .gt1_eyescantrigger_in(gt1_eyescantrigger_in),
        .gt1_gtrxreset_in(gt1_gtrxreset_in),
        .gt1_gttxreset_in(gt1_gttxreset_in),
        .gt1_gtxrxn_in(gt1_gtxrxn_in),
        .gt1_gtxrxp_in(gt1_gtxrxp_in),
        .gt1_gtxtxn_out(gt1_gtxtxn_out),
        .gt1_gtxtxp_out(gt1_gtxtxp_out),
        .gt1_loopback_in(gt1_loopback_in),
        .gt1_rx_fsm_reset_done_out(gt1_rx_fsm_reset_done_out),
        .gt1_rxbufreset_in(gt1_rxbufreset_in),
        .gt1_rxbufstatus_out(gt1_rxbufstatus_out),
        .gt1_rxbyteisaligned_out(gt1_rxbyteisaligned_out),
        .gt1_rxbyterealign_out(gt1_rxbyterealign_out),
        .gt1_rxcdrhold_in(gt1_rxcdrhold_in),
        .gt1_rxchariscomma_out(gt1_rxchariscomma_out),
        .gt1_rxcharisk_out(gt1_rxcharisk_out),
        .gt1_rxclkcorcnt_out(gt1_rxclkcorcnt_out),
        .gt1_rxcommadet_out(gt1_rxcommadet_out),
        .gt1_rxdata_out(gt1_rxdata_out),
        .gt1_rxdfelpmreset_in(gt1_rxdfelpmreset_in),
        .gt1_rxdisperr_out(gt1_rxdisperr_out),
        .gt1_rxlpmen_in(gt1_rxlpmen_in),
        .gt1_rxmcommaalignen_in(gt1_rxmcommaalignen_in),
        .gt1_rxmonitorout_out(gt1_rxmonitorout_out),
        .gt1_rxmonitorsel_in(gt1_rxmonitorsel_in),
        .gt1_rxnotintable_out(gt1_rxnotintable_out),
        .gt1_rxoutclkfabric_out(gt1_rxoutclkfabric_out),
        .gt1_rxpcommaalignen_in(gt1_rxpcommaalignen_in),
        .gt1_rxpcsreset_in(gt1_rxpcsreset_in),
        .gt1_rxpd_in(gt1_rxpd_in),
        .gt1_rxpmareset_in(gt1_rxpmareset_in),
        .gt1_rxpolarity_in(gt1_rxpolarity_in),
        .gt1_rxprbscntreset_in(gt1_rxprbscntreset_in),
        .gt1_rxprbserr_out(gt1_rxprbserr_out),
        .gt1_rxprbssel_in(gt1_rxprbssel_in),
        .gt1_rxrate_in(gt1_rxrate_in),
        .gt1_rxratedone_out(gt1_rxratedone_out),
        .gt1_rxresetdone_out(gt1_rxresetdone_out),
        .gt1_rxuserrdy_in(gt1_rxuserrdy_in),
        .gt1_rxusrclk2_in(gt1_rxusrclk2_in),
        .gt1_rxusrclk_in(gt1_rxusrclk_in),
        .gt1_tx8b10bbypass_in(gt1_tx8b10bbypass_in),
        .gt1_tx_fsm_reset_done_out(gt1_tx_fsm_reset_done_out),
        .gt1_txcharisk_in(gt1_txcharisk_in),
        .gt1_txdata_in(gt1_txdata_in),
        .gt1_txdiffctrl_in(gt1_txdiffctrl_in),
        .gt1_txelecidle_in(gt1_txelecidle_in),
        .gt1_txoutclk_out(gt1_txoutclk_out),
        .gt1_txoutclkfabric_out(gt1_txoutclkfabric_out),
        .gt1_txoutclkpcs_out(gt1_txoutclkpcs_out),
        .gt1_txpcsreset_in(gt1_txpcsreset_in),
        .gt1_txpd_in(gt1_txpd_in),
        .gt1_txpmareset_in(gt1_txpmareset_in),
        .gt1_txpolarity_in(gt1_txpolarity_in),
        .gt1_txpostcursor_in(gt1_txpostcursor_in),
        .gt1_txprbsforceerr_in(gt1_txprbsforceerr_in),
        .gt1_txprbssel_in(gt1_txprbssel_in),
        .gt1_txprecursor_in(gt1_txprecursor_in),
        .gt1_txresetdone_out(gt1_txresetdone_out),
        .gt1_txuserrdy_in(gt1_txuserrdy_in),
        .gt1_txusrclk2_in(gt1_txusrclk2_in),
        .gt1_txusrclk_in(gt1_txusrclk_in),
        .soft_reset_rx_in(soft_reset_rx_in),
        .soft_reset_tx_in(soft_reset_tx_in),
        .sysclk_in(sysclk_in));
endmodule

(* ORIG_REF_NAME = "gtx3g_GT" *) 
module gtx3g_bert_0_gtx3g_GT
   (gt0_drprdy_out,
    gt0_eyescandataerror_out,
    gt0_gtxtxn_out,
    gt0_gtxtxp_out,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    gt0_rxoutclkfabric_out,
    gt0_rxprbserr_out,
    gt0_rxratedone_out,
    gt0_rxresetdone_out,
    U0_TXDLYSRESETDONE,
    gt0_txoutclk_out,
    gt0_txoutclkfabric_out,
    gt0_txoutclkpcs_out,
    U0_TXPHALIGNDONE,
    U0_TXPHINITDONE,
    gt0_txresetdone_out,
    gt0_drpdo_out,
    gt0_rxclkcorcnt_out,
    gt0_rxbufstatus_out,
    gt0_rxdata_out,
    gt0_rxmonitorout_out,
    gt0_dmonitorout_out,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    gt0_drpclk_in,
    gt0_drpen_in,
    gt0_drpwe_in,
    gt0_eyescanreset_in,
    gt0_eyescantrigger_in,
    SR,
    gt0_gttxreset_in,
    gt0_gtxrxn_in,
    gt0_gtxrxp_in,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    gt0_rxbufreset_in,
    gt0_rxcdrhold_in,
    gt0_rxdfelpmreset_in,
    gt0_rxlpmen_in,
    gt0_rxmcommaalignen_in,
    gt0_rxpcommaalignen_in,
    gt0_rxpcsreset_in,
    gt0_rxpmareset_in,
    gt0_rxpolarity_in,
    gt0_rxprbscntreset_in,
    gt0_rxuserrdy_in,
    gt0_rxusrclk_in,
    gt0_rxusrclk2_in,
    gt0_txdlyen_in,
    U0_TXDLYSRESET,
    gt0_txelecidle_in,
    gt0_txpcsreset_in,
    U0_TXPHALIGN,
    U0_TXPHINIT,
    gt0_txpmareset_in,
    gt0_txpolarity_in,
    gt0_txprbsforceerr_in,
    gt0_txuserrdy_in,
    gt0_txusrclk_in,
    gt0_txusrclk2_in,
    gt0_drpdi_in,
    gt0_rxmonitorsel_in,
    gt0_rxpd_in,
    gt0_txpd_in,
    gt0_loopback_in,
    gt0_rxprbssel_in,
    gt0_rxrate_in,
    gt0_txprbssel_in,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    gt0_txdata_in,
    gt0_tx8b10bbypass_in,
    gt0_txcharisk_in,
    gt0_drpaddr_in);
  output gt0_drprdy_out;
  output gt0_eyescandataerror_out;
  output gt0_gtxtxn_out;
  output gt0_gtxtxp_out;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  output gt0_rxoutclkfabric_out;
  output gt0_rxprbserr_out;
  output gt0_rxratedone_out;
  output gt0_rxresetdone_out;
  output [0:0]U0_TXDLYSRESETDONE;
  output gt0_txoutclk_out;
  output gt0_txoutclkfabric_out;
  output gt0_txoutclkpcs_out;
  output [0:0]U0_TXPHALIGNDONE;
  output [0:0]U0_TXPHINITDONE;
  output gt0_txresetdone_out;
  output [15:0]gt0_drpdo_out;
  output [1:0]gt0_rxclkcorcnt_out;
  output [2:0]gt0_rxbufstatus_out;
  output [15:0]gt0_rxdata_out;
  output [6:0]gt0_rxmonitorout_out;
  output [7:0]gt0_dmonitorout_out;
  output [1:0]gt0_rxchariscomma_out;
  output [1:0]gt0_rxcharisk_out;
  output [1:0]gt0_rxdisperr_out;
  output [1:0]gt0_rxnotintable_out;
  input gt0_drpclk_in;
  input gt0_drpen_in;
  input gt0_drpwe_in;
  input gt0_eyescanreset_in;
  input gt0_eyescantrigger_in;
  input [0:0]SR;
  input gt0_gttxreset_in;
  input gt0_gtxrxn_in;
  input gt0_gtxrxp_in;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;
  input gt0_rxbufreset_in;
  input gt0_rxcdrhold_in;
  input gt0_rxdfelpmreset_in;
  input gt0_rxlpmen_in;
  input gt0_rxmcommaalignen_in;
  input gt0_rxpcommaalignen_in;
  input gt0_rxpcsreset_in;
  input gt0_rxpmareset_in;
  input gt0_rxpolarity_in;
  input gt0_rxprbscntreset_in;
  input gt0_rxuserrdy_in;
  input gt0_rxusrclk_in;
  input gt0_rxusrclk2_in;
  input gt0_txdlyen_in;
  input [0:0]U0_TXDLYSRESET;
  input gt0_txelecidle_in;
  input gt0_txpcsreset_in;
  input [0:0]U0_TXPHALIGN;
  input [0:0]U0_TXPHINIT;
  input gt0_txpmareset_in;
  input gt0_txpolarity_in;
  input gt0_txprbsforceerr_in;
  input gt0_txuserrdy_in;
  input gt0_txusrclk_in;
  input gt0_txusrclk2_in;
  input [15:0]gt0_drpdi_in;
  input [1:0]gt0_rxmonitorsel_in;
  input [1:0]gt0_rxpd_in;
  input [1:0]gt0_txpd_in;
  input [2:0]gt0_loopback_in;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_rxrate_in;
  input [2:0]gt0_txprbssel_in;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input [15:0]gt0_txdata_in;
  input [1:0]gt0_tx8b10bbypass_in;
  input [1:0]gt0_txcharisk_in;
  input [8:0]gt0_drpaddr_in;

  wire [0:0]SR;
  wire [0:0]U0_TXDLYSRESET;
  wire [0:0]U0_TXDLYSRESETDONE;
  wire [0:0]U0_TXPHALIGN;
  wire [0:0]U0_TXPHALIGNDONE;
  wire [0:0]U0_TXPHINIT;
  wire [0:0]U0_TXPHINITDONE;
  wire [7:0]gt0_dmonitorout_out;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gttxreset_in;
  wire gt0_gtxrxn_in;
  wire gt0_gtxrxp_in;
  wire gt0_gtxtxn_out;
  wire gt0_gtxtxp_out;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [1:0]gt0_rxchariscomma_out;
  wire [1:0]gt0_rxcharisk_out;
  wire [1:0]gt0_rxclkcorcnt_out;
  wire gt0_rxcommadet_out;
  wire [15:0]gt0_rxdata_out;
  wire gt0_rxdfelpmreset_in;
  wire [1:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire gt0_rxmcommaalignen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [1:0]gt0_rxnotintable_out;
  wire gt0_rxoutclkfabric_out;
  wire gt0_rxpcommaalignen_in;
  wire gt0_rxpcsreset_in;
  wire [1:0]gt0_rxpd_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire gt0_rxresetdone_out;
  wire gt0_rxuserrdy_in;
  wire gt0_rxusrclk2_in;
  wire gt0_rxusrclk_in;
  wire [1:0]gt0_tx8b10bbypass_in;
  wire [1:0]gt0_txcharisk_in;
  wire [15:0]gt0_txdata_in;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txdlyen_in;
  wire gt0_txelecidle_in;
  wire gt0_txoutclk_out;
  wire gt0_txoutclkfabric_out;
  wire gt0_txoutclkpcs_out;
  wire gt0_txpcsreset_in;
  wire [1:0]gt0_txpd_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txresetdone_out;
  wire gt0_txuserrdy_in;
  wire gt0_txusrclk2_in;
  wire gt0_txusrclk_in;
  wire gtxe2_i_n_23;
  wire NLW_gtxe2_i_CPLLFBCLKLOST_UNCONNECTED;
  wire NLW_gtxe2_i_CPLLLOCK_UNCONNECTED;
  wire NLW_gtxe2_i_CPLLREFCLKLOST_UNCONNECTED;
  wire NLW_gtxe2_i_GTREFCLKMONITOR_UNCONNECTED;
  wire NLW_gtxe2_i_PHYSTATUS_UNCONNECTED;
  wire NLW_gtxe2_i_RXCDRLOCK_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANBONDSEQ_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANISALIGNED_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANREALIGN_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMINITDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMSASDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMWAKEDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXDATAVALID_UNCONNECTED;
  wire NLW_gtxe2_i_RXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtxe2_i_RXELECIDLE_UNCONNECTED;
  wire NLW_gtxe2_i_RXHEADERVALID_UNCONNECTED;
  wire NLW_gtxe2_i_RXOUTCLKPCS_UNCONNECTED;
  wire NLW_gtxe2_i_RXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtxe2_i_RXQPISENN_UNCONNECTED;
  wire NLW_gtxe2_i_RXQPISENP_UNCONNECTED;
  wire NLW_gtxe2_i_RXSTARTOFSEQ_UNCONNECTED;
  wire NLW_gtxe2_i_RXVALID_UNCONNECTED;
  wire NLW_gtxe2_i_TXCOMFINISH_UNCONNECTED;
  wire NLW_gtxe2_i_TXGEARBOXREADY_UNCONNECTED;
  wire NLW_gtxe2_i_TXQPISENN_UNCONNECTED;
  wire NLW_gtxe2_i_TXQPISENP_UNCONNECTED;
  wire NLW_gtxe2_i_TXRATEDONE_UNCONNECTED;
  wire [15:0]NLW_gtxe2_i_PCSRSVDOUT_UNCONNECTED;
  wire [7:2]NLW_gtxe2_i_RXCHARISCOMMA_UNCONNECTED;
  wire [7:2]NLW_gtxe2_i_RXCHARISK_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXCHBONDO_UNCONNECTED;
  wire [63:16]NLW_gtxe2_i_RXDATA_UNCONNECTED;
  wire [7:2]NLW_gtxe2_i_RXDISPERR_UNCONNECTED;
  wire [2:0]NLW_gtxe2_i_RXHEADER_UNCONNECTED;
  wire [7:2]NLW_gtxe2_i_RXNOTINTABLE_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXPHMONITOR_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXPHSLIPMONITOR_UNCONNECTED;
  wire [2:0]NLW_gtxe2_i_RXSTATUS_UNCONNECTED;
  wire [9:0]NLW_gtxe2_i_TSTOUT_UNCONNECTED;
  wire [1:0]NLW_gtxe2_i_TXBUFSTATUS_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  GTXE2_CHANNEL #(
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0001111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0101111100),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0100000000),
    .CHAN_BOND_SEQ_2_2(10'b0100000000),
    .CHAN_BOND_SEQ_2_3(10'b0100000000),
    .CHAN_BOND_SEQ_2_4(10'b0100000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(13),
    .CLK_COR_MIN_LAT(11),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0100000000),
    .CLK_COR_SEQ_1_3(10'b0100000000),
    .CLK_COR_SEQ_1_4(10'b0100000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0100000000),
    .CLK_COR_SEQ_2_2(10'b0100000000),
    .CLK_COR_SEQ_2_3(10'b0100000000),
    .CLK_COR_SEQ_2_4(10'b0100000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(24'hBC07DC),
    .CPLL_FBDIV(4),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("TRUE"),
    .DMONITOR_CFG(24'h000A00),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("TRUE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(3'b000),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD_ATTR(48'h000000000002),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'h00018480),
    .PMA_RSV2(16'h2050),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(32'h00000000),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(72'h03000023FF10200020),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00000011110000),
    .RXLPM_LF_CFG(14'b00000011110000),
    .RXOOB_CFG(7'b0000110),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h084020),
    .RXPH_CFG(24'h000000),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RX_BIAS_CFG(12'b000000000100),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(6),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(3'b010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(12'b000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFE_GAIN_CFG(23'h020FEA),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011110000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_KL_CFG(13'b0000011111110),
    .RX_DFE_KL_CFG2(32'h301148AC),
    .RX_DFE_LPM_CFG(16'h0904),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DFE_UT_CFG(17'b10001111000000000),
    .RX_DFE_VP_CFG(17'b00011111100000011),
    .RX_DFE_XYD_CFG(13'b0000000000000),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(0),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b0101),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("X"),
    .SIM_VERSION("4.0"),
    .TERM_RCAL_CFG(5'b10000),
    .TERM_RCAL_OVRD(1'b0),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPMARESET_TIME(5'b00001),
    .TX_CLK25_DIV(6),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(5'b00000),
    .TX_DEEMPH1(5'b00000),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b110),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001110),
    .TX_MARGIN_FULL_1(7'b1001001),
    .TX_MARGIN_FULL_2(7'b1000101),
    .TX_MARGIN_FULL_3(7'b1000010),
    .TX_MARGIN_FULL_4(7'b1000000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000100),
    .TX_MARGIN_LOW_2(7'b1000010),
    .TX_MARGIN_LOW_3(7'b1000000),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h1832),
    .TX_RXDETECT_REF(3'b100),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0)) 
    gtxe2_i
       (.CFGRESET(1'b0),
        .CLKRSVD({1'b0,1'b0,1'b0,1'b0}),
        .CPLLFBCLKLOST(NLW_gtxe2_i_CPLLFBCLKLOST_UNCONNECTED),
        .CPLLLOCK(NLW_gtxe2_i_CPLLLOCK_UNCONNECTED),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(NLW_gtxe2_i_CPLLREFCLKLOST_UNCONNECTED),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b0),
        .DMONITOROUT(gt0_dmonitorout_out),
        .DRPADDR(gt0_drpaddr_in),
        .DRPCLK(gt0_drpclk_in),
        .DRPDI(gt0_drpdi_in),
        .DRPDO(gt0_drpdo_out),
        .DRPEN(gt0_drpen_in),
        .DRPRDY(gt0_drprdy_out),
        .DRPWE(gt0_drpwe_in),
        .EYESCANDATAERROR(gt0_eyescandataerror_out),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(gt0_eyescanreset_in),
        .EYESCANTRIGGER(gt0_eyescantrigger_in),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(1'b0),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(NLW_gtxe2_i_GTREFCLKMONITOR_UNCONNECTED),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(SR),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(gt0_gttxreset_in),
        .GTXRXN(gt0_gtxrxn_in),
        .GTXRXP(gt0_gtxrxp_in),
        .GTXTXN(gt0_gtxtxn_out),
        .GTXTXP(gt0_gtxtxp_out),
        .LOOPBACK(gt0_loopback_in),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(NLW_gtxe2_i_PCSRSVDOUT_UNCONNECTED[15:0]),
        .PHYSTATUS(NLW_gtxe2_i_PHYSTATUS_UNCONNECTED),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(gt0_qplloutclk_in),
        .QPLLREFCLK(gt0_qplloutrefclk_in),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b1),
        .RXBUFRESET(gt0_rxbufreset_in),
        .RXBUFSTATUS(gt0_rxbufstatus_out),
        .RXBYTEISALIGNED(gt0_rxbyteisaligned_out),
        .RXBYTEREALIGN(gt0_rxbyterealign_out),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(gt0_rxcdrhold_in),
        .RXCDRLOCK(NLW_gtxe2_i_RXCDRLOCK_UNCONNECTED),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(NLW_gtxe2_i_RXCHANBONDSEQ_UNCONNECTED),
        .RXCHANISALIGNED(NLW_gtxe2_i_RXCHANISALIGNED_UNCONNECTED),
        .RXCHANREALIGN(NLW_gtxe2_i_RXCHANREALIGN_UNCONNECTED),
        .RXCHARISCOMMA({NLW_gtxe2_i_RXCHARISCOMMA_UNCONNECTED[7:2],gt0_rxchariscomma_out}),
        .RXCHARISK({NLW_gtxe2_i_RXCHARISK_UNCONNECTED[7:2],gt0_rxcharisk_out}),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO(NLW_gtxe2_i_RXCHBONDO_UNCONNECTED[4:0]),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(gt0_rxclkcorcnt_out),
        .RXCOMINITDET(NLW_gtxe2_i_RXCOMINITDET_UNCONNECTED),
        .RXCOMMADET(gt0_rxcommadet_out),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(NLW_gtxe2_i_RXCOMSASDET_UNCONNECTED),
        .RXCOMWAKEDET(NLW_gtxe2_i_RXCOMWAKEDET_UNCONNECTED),
        .RXDATA({NLW_gtxe2_i_RXDATA_UNCONNECTED[63:16],gt0_rxdata_out}),
        .RXDATAVALID(NLW_gtxe2_i_RXDATAVALID_UNCONNECTED),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(gt0_rxdfelpmreset_in),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDFEXYDHOLD(1'b0),
        .RXDFEXYDOVRDEN(1'b0),
        .RXDISPERR({NLW_gtxe2_i_RXDISPERR_UNCONNECTED[7:2],gt0_rxdisperr_out}),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(NLW_gtxe2_i_RXDLYSRESETDONE_UNCONNECTED),
        .RXELECIDLE(NLW_gtxe2_i_RXELECIDLE_UNCONNECTED),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(NLW_gtxe2_i_RXHEADER_UNCONNECTED[2:0]),
        .RXHEADERVALID(NLW_gtxe2_i_RXHEADERVALID_UNCONNECTED),
        .RXLPMEN(gt0_rxlpmen_in),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(gt0_rxmcommaalignen_in),
        .RXMONITOROUT(gt0_rxmonitorout_out),
        .RXMONITORSEL(gt0_rxmonitorsel_in),
        .RXNOTINTABLE({NLW_gtxe2_i_RXNOTINTABLE_UNCONNECTED[7:2],gt0_rxnotintable_out}),
        .RXOOBRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(gtxe2_i_n_23),
        .RXOUTCLKFABRIC(gt0_rxoutclkfabric_out),
        .RXOUTCLKPCS(NLW_gtxe2_i_RXOUTCLKPCS_UNCONNECTED),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(gt0_rxpcommaalignen_in),
        .RXPCSRESET(gt0_rxpcsreset_in),
        .RXPD(gt0_rxpd_in),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(NLW_gtxe2_i_RXPHALIGNDONE_UNCONNECTED),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(NLW_gtxe2_i_RXPHMONITOR_UNCONNECTED[4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(NLW_gtxe2_i_RXPHSLIPMONITOR_UNCONNECTED[4:0]),
        .RXPMARESET(gt0_rxpmareset_in),
        .RXPOLARITY(gt0_rxpolarity_in),
        .RXPRBSCNTRESET(gt0_rxprbscntreset_in),
        .RXPRBSERR(gt0_rxprbserr_out),
        .RXPRBSSEL(gt0_rxprbssel_in),
        .RXQPIEN(1'b0),
        .RXQPISENN(NLW_gtxe2_i_RXQPISENN_UNCONNECTED),
        .RXQPISENP(NLW_gtxe2_i_RXQPISENP_UNCONNECTED),
        .RXRATE(gt0_rxrate_in),
        .RXRATEDONE(gt0_rxratedone_out),
        .RXRESETDONE(gt0_rxresetdone_out),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(NLW_gtxe2_i_RXSTARTOFSEQ_UNCONNECTED),
        .RXSTATUS(NLW_gtxe2_i_RXSTATUS_UNCONNECTED[2:0]),
        .RXSYSCLKSEL({1'b1,1'b1}),
        .RXUSERRDY(gt0_rxuserrdy_in),
        .RXUSRCLK(gt0_rxusrclk_in),
        .RXUSRCLK2(gt0_rxusrclk2_in),
        .RXVALID(NLW_gtxe2_i_RXVALID_UNCONNECTED),
        .SETERRSTATUS(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TSTOUT(NLW_gtxe2_i_TSTOUT_UNCONNECTED[9:0]),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gt0_tx8b10bbypass_in}),
        .TX8B10BEN(1'b1),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(NLW_gtxe2_i_TXBUFSTATUS_UNCONNECTED[1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gt0_txcharisk_in}),
        .TXCOMFINISH(NLW_gtxe2_i_TXCOMFINISH_UNCONNECTED),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gt0_txdata_in}),
        .TXDEEMPH(1'b0),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL(gt0_txdiffctrl_in),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(gt0_txdlyen_in),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(U0_TXDLYSRESET),
        .TXDLYSRESETDONE(U0_TXDLYSRESETDONE),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(gt0_txelecidle_in),
        .TXGEARBOXREADY(NLW_gtxe2_i_TXGEARBOXREADY_UNCONNECTED),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(1'b0),
        .TXMAINCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXOUTCLK(gt0_txoutclk_out),
        .TXOUTCLKFABRIC(gt0_txoutclkfabric_out),
        .TXOUTCLKPCS(gt0_txoutclkpcs_out),
        .TXOUTCLKSEL({1'b0,1'b1,1'b1}),
        .TXPCSRESET(gt0_txpcsreset_in),
        .TXPD(gt0_txpd_in),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(U0_TXPHALIGN),
        .TXPHALIGNDONE(U0_TXPHALIGNDONE),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(U0_TXPHINIT),
        .TXPHINITDONE(U0_TXPHINITDONE),
        .TXPHOVRDEN(1'b0),
        .TXPISOPD(1'b0),
        .TXPMARESET(gt0_txpmareset_in),
        .TXPOLARITY(gt0_txpolarity_in),
        .TXPOSTCURSOR(gt0_txpostcursor_in),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(gt0_txprbsforceerr_in),
        .TXPRBSSEL(gt0_txprbssel_in),
        .TXPRECURSOR(gt0_txprecursor_in),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(NLW_gtxe2_i_TXQPISENN_UNCONNECTED),
        .TXQPISENP(NLW_gtxe2_i_TXQPISENP_UNCONNECTED),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(NLW_gtxe2_i_TXRATEDONE_UNCONNECTED),
        .TXRESETDONE(gt0_txresetdone_out),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYSCLKSEL({1'b1,1'b1}),
        .TXUSERRDY(gt0_txuserrdy_in),
        .TXUSRCLK(gt0_txusrclk_in),
        .TXUSRCLK2(gt0_txusrclk2_in));
endmodule

(* ORIG_REF_NAME = "gtx3g_GT" *) 
module gtx3g_bert_0_gtx3g_GT_3
   (gt1_drprdy_out,
    gt1_eyescandataerror_out,
    gt1_gtxtxn_out,
    gt1_gtxtxp_out,
    gt1_rxbyteisaligned_out,
    gt1_rxbyterealign_out,
    gt1_rxcommadet_out,
    gt1_rxoutclkfabric_out,
    gt1_rxprbserr_out,
    gt1_rxratedone_out,
    gt1_rxresetdone_out,
    U0_TXDLYSRESETDONE,
    gt1_txoutclk_out,
    gt1_txoutclkfabric_out,
    gt1_txoutclkpcs_out,
    U0_TXPHALIGNDONE,
    U0_TXPHINITDONE,
    gt1_txresetdone_out,
    gt1_drpdo_out,
    gt1_rxclkcorcnt_out,
    gt1_rxbufstatus_out,
    gt1_rxdata_out,
    gt1_rxmonitorout_out,
    gt1_dmonitorout_out,
    gt1_rxchariscomma_out,
    gt1_rxcharisk_out,
    gt1_rxdisperr_out,
    gt1_rxnotintable_out,
    gt1_drpclk_in,
    gt1_drpen_in,
    gt1_drpwe_in,
    gt1_eyescanreset_in,
    gt1_eyescantrigger_in,
    gtrxreset_i_reg,
    gt1_gttxreset_in,
    gt1_gtxrxn_in,
    gt1_gtxrxp_in,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    gt1_rxbufreset_in,
    gt1_rxcdrhold_in,
    gt1_rxdfelpmreset_in,
    gt1_rxlpmen_in,
    gt1_rxmcommaalignen_in,
    gt1_rxpcommaalignen_in,
    gt1_rxpcsreset_in,
    gt1_rxpmareset_in,
    gt1_rxpolarity_in,
    gt1_rxprbscntreset_in,
    gt1_rxuserrdy_in,
    gt1_rxusrclk_in,
    gt1_rxusrclk2_in,
    U0_TXDLYSRESET,
    gt1_txelecidle_in,
    gt1_txpcsreset_in,
    U0_TXPHALIGN,
    U0_TXPHINIT,
    gt1_txpmareset_in,
    gt1_txpolarity_in,
    gt1_txprbsforceerr_in,
    gt1_txuserrdy_in,
    gt1_txusrclk_in,
    gt1_txusrclk2_in,
    gt1_drpdi_in,
    gt1_rxmonitorsel_in,
    gt1_rxpd_in,
    gt1_txpd_in,
    gt1_loopback_in,
    gt1_rxprbssel_in,
    gt1_rxrate_in,
    gt1_txprbssel_in,
    gt1_txdiffctrl_in,
    gt1_txpostcursor_in,
    gt1_txprecursor_in,
    gt1_txdata_in,
    gt1_tx8b10bbypass_in,
    gt1_txcharisk_in,
    gt1_drpaddr_in);
  output gt1_drprdy_out;
  output gt1_eyescandataerror_out;
  output gt1_gtxtxn_out;
  output gt1_gtxtxp_out;
  output gt1_rxbyteisaligned_out;
  output gt1_rxbyterealign_out;
  output gt1_rxcommadet_out;
  output gt1_rxoutclkfabric_out;
  output gt1_rxprbserr_out;
  output gt1_rxratedone_out;
  output gt1_rxresetdone_out;
  output [0:0]U0_TXDLYSRESETDONE;
  output gt1_txoutclk_out;
  output gt1_txoutclkfabric_out;
  output gt1_txoutclkpcs_out;
  output [0:0]U0_TXPHALIGNDONE;
  output [0:0]U0_TXPHINITDONE;
  output gt1_txresetdone_out;
  output [15:0]gt1_drpdo_out;
  output [1:0]gt1_rxclkcorcnt_out;
  output [2:0]gt1_rxbufstatus_out;
  output [15:0]gt1_rxdata_out;
  output [6:0]gt1_rxmonitorout_out;
  output [7:0]gt1_dmonitorout_out;
  output [1:0]gt1_rxchariscomma_out;
  output [1:0]gt1_rxcharisk_out;
  output [1:0]gt1_rxdisperr_out;
  output [1:0]gt1_rxnotintable_out;
  input gt1_drpclk_in;
  input gt1_drpen_in;
  input gt1_drpwe_in;
  input gt1_eyescanreset_in;
  input gt1_eyescantrigger_in;
  input [0:0]gtrxreset_i_reg;
  input gt1_gttxreset_in;
  input gt1_gtxrxn_in;
  input gt1_gtxrxp_in;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;
  input gt1_rxbufreset_in;
  input gt1_rxcdrhold_in;
  input gt1_rxdfelpmreset_in;
  input gt1_rxlpmen_in;
  input gt1_rxmcommaalignen_in;
  input gt1_rxpcommaalignen_in;
  input gt1_rxpcsreset_in;
  input gt1_rxpmareset_in;
  input gt1_rxpolarity_in;
  input gt1_rxprbscntreset_in;
  input gt1_rxuserrdy_in;
  input gt1_rxusrclk_in;
  input gt1_rxusrclk2_in;
  input [0:0]U0_TXDLYSRESET;
  input gt1_txelecidle_in;
  input gt1_txpcsreset_in;
  input [0:0]U0_TXPHALIGN;
  input [0:0]U0_TXPHINIT;
  input gt1_txpmareset_in;
  input gt1_txpolarity_in;
  input gt1_txprbsforceerr_in;
  input gt1_txuserrdy_in;
  input gt1_txusrclk_in;
  input gt1_txusrclk2_in;
  input [15:0]gt1_drpdi_in;
  input [1:0]gt1_rxmonitorsel_in;
  input [1:0]gt1_rxpd_in;
  input [1:0]gt1_txpd_in;
  input [2:0]gt1_loopback_in;
  input [2:0]gt1_rxprbssel_in;
  input [2:0]gt1_rxrate_in;
  input [2:0]gt1_txprbssel_in;
  input [3:0]gt1_txdiffctrl_in;
  input [4:0]gt1_txpostcursor_in;
  input [4:0]gt1_txprecursor_in;
  input [15:0]gt1_txdata_in;
  input [1:0]gt1_tx8b10bbypass_in;
  input [1:0]gt1_txcharisk_in;
  input [8:0]gt1_drpaddr_in;

  wire [0:0]U0_TXDLYSRESET;
  wire [0:0]U0_TXDLYSRESETDONE;
  wire [0:0]U0_TXPHALIGN;
  wire [0:0]U0_TXPHALIGNDONE;
  wire [0:0]U0_TXPHINIT;
  wire [0:0]U0_TXPHINITDONE;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire [7:0]gt1_dmonitorout_out;
  wire [8:0]gt1_drpaddr_in;
  wire gt1_drpclk_in;
  wire [15:0]gt1_drpdi_in;
  wire [15:0]gt1_drpdo_out;
  wire gt1_drpen_in;
  wire gt1_drprdy_out;
  wire gt1_drpwe_in;
  wire gt1_eyescandataerror_out;
  wire gt1_eyescanreset_in;
  wire gt1_eyescantrigger_in;
  wire gt1_gttxreset_in;
  wire gt1_gtxrxn_in;
  wire gt1_gtxrxp_in;
  wire gt1_gtxtxn_out;
  wire gt1_gtxtxp_out;
  wire [2:0]gt1_loopback_in;
  wire gt1_rxbufreset_in;
  wire [2:0]gt1_rxbufstatus_out;
  wire gt1_rxbyteisaligned_out;
  wire gt1_rxbyterealign_out;
  wire gt1_rxcdrhold_in;
  wire [1:0]gt1_rxchariscomma_out;
  wire [1:0]gt1_rxcharisk_out;
  wire [1:0]gt1_rxclkcorcnt_out;
  wire gt1_rxcommadet_out;
  wire [15:0]gt1_rxdata_out;
  wire gt1_rxdfelpmreset_in;
  wire [1:0]gt1_rxdisperr_out;
  wire gt1_rxlpmen_in;
  wire gt1_rxmcommaalignen_in;
  wire [6:0]gt1_rxmonitorout_out;
  wire [1:0]gt1_rxmonitorsel_in;
  wire [1:0]gt1_rxnotintable_out;
  wire gt1_rxoutclkfabric_out;
  wire gt1_rxpcommaalignen_in;
  wire gt1_rxpcsreset_in;
  wire [1:0]gt1_rxpd_in;
  wire gt1_rxpmareset_in;
  wire gt1_rxpolarity_in;
  wire gt1_rxprbscntreset_in;
  wire gt1_rxprbserr_out;
  wire [2:0]gt1_rxprbssel_in;
  wire [2:0]gt1_rxrate_in;
  wire gt1_rxratedone_out;
  wire gt1_rxresetdone_out;
  wire gt1_rxuserrdy_in;
  wire gt1_rxusrclk2_in;
  wire gt1_rxusrclk_in;
  wire [1:0]gt1_tx8b10bbypass_in;
  wire [1:0]gt1_txcharisk_in;
  wire [15:0]gt1_txdata_in;
  wire [3:0]gt1_txdiffctrl_in;
  wire gt1_txelecidle_in;
  wire gt1_txoutclk_out;
  wire gt1_txoutclkfabric_out;
  wire gt1_txoutclkpcs_out;
  wire gt1_txpcsreset_in;
  wire [1:0]gt1_txpd_in;
  wire gt1_txpmareset_in;
  wire gt1_txpolarity_in;
  wire [4:0]gt1_txpostcursor_in;
  wire gt1_txprbsforceerr_in;
  wire [2:0]gt1_txprbssel_in;
  wire [4:0]gt1_txprecursor_in;
  wire gt1_txresetdone_out;
  wire gt1_txuserrdy_in;
  wire gt1_txusrclk2_in;
  wire gt1_txusrclk_in;
  wire [0:0]gtrxreset_i_reg;
  wire gtxe2_i_n_23;
  wire NLW_gtxe2_i_CPLLFBCLKLOST_UNCONNECTED;
  wire NLW_gtxe2_i_CPLLLOCK_UNCONNECTED;
  wire NLW_gtxe2_i_CPLLREFCLKLOST_UNCONNECTED;
  wire NLW_gtxe2_i_GTREFCLKMONITOR_UNCONNECTED;
  wire NLW_gtxe2_i_PHYSTATUS_UNCONNECTED;
  wire NLW_gtxe2_i_RXCDRLOCK_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANBONDSEQ_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANISALIGNED_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANREALIGN_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMINITDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMSASDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMWAKEDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXDATAVALID_UNCONNECTED;
  wire NLW_gtxe2_i_RXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtxe2_i_RXELECIDLE_UNCONNECTED;
  wire NLW_gtxe2_i_RXHEADERVALID_UNCONNECTED;
  wire NLW_gtxe2_i_RXOUTCLKPCS_UNCONNECTED;
  wire NLW_gtxe2_i_RXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtxe2_i_RXQPISENN_UNCONNECTED;
  wire NLW_gtxe2_i_RXQPISENP_UNCONNECTED;
  wire NLW_gtxe2_i_RXSTARTOFSEQ_UNCONNECTED;
  wire NLW_gtxe2_i_RXVALID_UNCONNECTED;
  wire NLW_gtxe2_i_TXCOMFINISH_UNCONNECTED;
  wire NLW_gtxe2_i_TXGEARBOXREADY_UNCONNECTED;
  wire NLW_gtxe2_i_TXQPISENN_UNCONNECTED;
  wire NLW_gtxe2_i_TXQPISENP_UNCONNECTED;
  wire NLW_gtxe2_i_TXRATEDONE_UNCONNECTED;
  wire [15:0]NLW_gtxe2_i_PCSRSVDOUT_UNCONNECTED;
  wire [7:2]NLW_gtxe2_i_RXCHARISCOMMA_UNCONNECTED;
  wire [7:2]NLW_gtxe2_i_RXCHARISK_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXCHBONDO_UNCONNECTED;
  wire [63:16]NLW_gtxe2_i_RXDATA_UNCONNECTED;
  wire [7:2]NLW_gtxe2_i_RXDISPERR_UNCONNECTED;
  wire [2:0]NLW_gtxe2_i_RXHEADER_UNCONNECTED;
  wire [7:2]NLW_gtxe2_i_RXNOTINTABLE_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXPHMONITOR_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXPHSLIPMONITOR_UNCONNECTED;
  wire [2:0]NLW_gtxe2_i_RXSTATUS_UNCONNECTED;
  wire [9:0]NLW_gtxe2_i_TSTOUT_UNCONNECTED;
  wire [1:0]NLW_gtxe2_i_TXBUFSTATUS_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  GTXE2_CHANNEL #(
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0001111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0101111100),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0100000000),
    .CHAN_BOND_SEQ_2_2(10'b0100000000),
    .CHAN_BOND_SEQ_2_3(10'b0100000000),
    .CHAN_BOND_SEQ_2_4(10'b0100000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(13),
    .CLK_COR_MIN_LAT(11),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0100000000),
    .CLK_COR_SEQ_1_3(10'b0100000000),
    .CLK_COR_SEQ_1_4(10'b0100000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0100000000),
    .CLK_COR_SEQ_2_2(10'b0100000000),
    .CLK_COR_SEQ_2_3(10'b0100000000),
    .CLK_COR_SEQ_2_4(10'b0100000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(24'hBC07DC),
    .CPLL_FBDIV(4),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("TRUE"),
    .DMONITOR_CFG(24'h000A00),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("TRUE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(3'b000),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD_ATTR(48'h000000000002),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'h00018480),
    .PMA_RSV2(16'h2050),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(32'h00000000),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(72'h03000023FF10200020),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00000011110000),
    .RXLPM_LF_CFG(14'b00000011110000),
    .RXOOB_CFG(7'b0000110),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h084020),
    .RXPH_CFG(24'h000000),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RX_BIAS_CFG(12'b000000000100),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(6),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(3'b010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(12'b000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFE_GAIN_CFG(23'h020FEA),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011110000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_KL_CFG(13'b0000011111110),
    .RX_DFE_KL_CFG2(32'h301148AC),
    .RX_DFE_LPM_CFG(16'h0904),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DFE_UT_CFG(17'b10001111000000000),
    .RX_DFE_VP_CFG(17'b00011111100000011),
    .RX_DFE_XYD_CFG(13'b0000000000000),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(0),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b0101),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("X"),
    .SIM_VERSION("4.0"),
    .TERM_RCAL_CFG(5'b10000),
    .TERM_RCAL_OVRD(1'b0),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPMARESET_TIME(5'b00001),
    .TX_CLK25_DIV(6),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(5'b00000),
    .TX_DEEMPH1(5'b00000),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b110),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001110),
    .TX_MARGIN_FULL_1(7'b1001001),
    .TX_MARGIN_FULL_2(7'b1000101),
    .TX_MARGIN_FULL_3(7'b1000010),
    .TX_MARGIN_FULL_4(7'b1000000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000100),
    .TX_MARGIN_LOW_2(7'b1000010),
    .TX_MARGIN_LOW_3(7'b1000000),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h1832),
    .TX_RXDETECT_REF(3'b100),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0)) 
    gtxe2_i
       (.CFGRESET(1'b0),
        .CLKRSVD({1'b0,1'b0,1'b0,1'b0}),
        .CPLLFBCLKLOST(NLW_gtxe2_i_CPLLFBCLKLOST_UNCONNECTED),
        .CPLLLOCK(NLW_gtxe2_i_CPLLLOCK_UNCONNECTED),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(NLW_gtxe2_i_CPLLREFCLKLOST_UNCONNECTED),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b0),
        .DMONITOROUT(gt1_dmonitorout_out),
        .DRPADDR(gt1_drpaddr_in),
        .DRPCLK(gt1_drpclk_in),
        .DRPDI(gt1_drpdi_in),
        .DRPDO(gt1_drpdo_out),
        .DRPEN(gt1_drpen_in),
        .DRPRDY(gt1_drprdy_out),
        .DRPWE(gt1_drpwe_in),
        .EYESCANDATAERROR(gt1_eyescandataerror_out),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(gt1_eyescanreset_in),
        .EYESCANTRIGGER(gt1_eyescantrigger_in),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(1'b0),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(NLW_gtxe2_i_GTREFCLKMONITOR_UNCONNECTED),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(gtrxreset_i_reg),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(gt1_gttxreset_in),
        .GTXRXN(gt1_gtxrxn_in),
        .GTXRXP(gt1_gtxrxp_in),
        .GTXTXN(gt1_gtxtxn_out),
        .GTXTXP(gt1_gtxtxp_out),
        .LOOPBACK(gt1_loopback_in),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(NLW_gtxe2_i_PCSRSVDOUT_UNCONNECTED[15:0]),
        .PHYSTATUS(NLW_gtxe2_i_PHYSTATUS_UNCONNECTED),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(gt0_qplloutclk_in),
        .QPLLREFCLK(gt0_qplloutrefclk_in),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b1),
        .RXBUFRESET(gt1_rxbufreset_in),
        .RXBUFSTATUS(gt1_rxbufstatus_out),
        .RXBYTEISALIGNED(gt1_rxbyteisaligned_out),
        .RXBYTEREALIGN(gt1_rxbyterealign_out),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(gt1_rxcdrhold_in),
        .RXCDRLOCK(NLW_gtxe2_i_RXCDRLOCK_UNCONNECTED),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(NLW_gtxe2_i_RXCHANBONDSEQ_UNCONNECTED),
        .RXCHANISALIGNED(NLW_gtxe2_i_RXCHANISALIGNED_UNCONNECTED),
        .RXCHANREALIGN(NLW_gtxe2_i_RXCHANREALIGN_UNCONNECTED),
        .RXCHARISCOMMA({NLW_gtxe2_i_RXCHARISCOMMA_UNCONNECTED[7:2],gt1_rxchariscomma_out}),
        .RXCHARISK({NLW_gtxe2_i_RXCHARISK_UNCONNECTED[7:2],gt1_rxcharisk_out}),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO(NLW_gtxe2_i_RXCHBONDO_UNCONNECTED[4:0]),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(gt1_rxclkcorcnt_out),
        .RXCOMINITDET(NLW_gtxe2_i_RXCOMINITDET_UNCONNECTED),
        .RXCOMMADET(gt1_rxcommadet_out),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(NLW_gtxe2_i_RXCOMSASDET_UNCONNECTED),
        .RXCOMWAKEDET(NLW_gtxe2_i_RXCOMWAKEDET_UNCONNECTED),
        .RXDATA({NLW_gtxe2_i_RXDATA_UNCONNECTED[63:16],gt1_rxdata_out}),
        .RXDATAVALID(NLW_gtxe2_i_RXDATAVALID_UNCONNECTED),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(gt1_rxdfelpmreset_in),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDFEXYDHOLD(1'b0),
        .RXDFEXYDOVRDEN(1'b0),
        .RXDISPERR({NLW_gtxe2_i_RXDISPERR_UNCONNECTED[7:2],gt1_rxdisperr_out}),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(NLW_gtxe2_i_RXDLYSRESETDONE_UNCONNECTED),
        .RXELECIDLE(NLW_gtxe2_i_RXELECIDLE_UNCONNECTED),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(NLW_gtxe2_i_RXHEADER_UNCONNECTED[2:0]),
        .RXHEADERVALID(NLW_gtxe2_i_RXHEADERVALID_UNCONNECTED),
        .RXLPMEN(gt1_rxlpmen_in),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(gt1_rxmcommaalignen_in),
        .RXMONITOROUT(gt1_rxmonitorout_out),
        .RXMONITORSEL(gt1_rxmonitorsel_in),
        .RXNOTINTABLE({NLW_gtxe2_i_RXNOTINTABLE_UNCONNECTED[7:2],gt1_rxnotintable_out}),
        .RXOOBRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(gtxe2_i_n_23),
        .RXOUTCLKFABRIC(gt1_rxoutclkfabric_out),
        .RXOUTCLKPCS(NLW_gtxe2_i_RXOUTCLKPCS_UNCONNECTED),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(gt1_rxpcommaalignen_in),
        .RXPCSRESET(gt1_rxpcsreset_in),
        .RXPD(gt1_rxpd_in),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(NLW_gtxe2_i_RXPHALIGNDONE_UNCONNECTED),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(NLW_gtxe2_i_RXPHMONITOR_UNCONNECTED[4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(NLW_gtxe2_i_RXPHSLIPMONITOR_UNCONNECTED[4:0]),
        .RXPMARESET(gt1_rxpmareset_in),
        .RXPOLARITY(gt1_rxpolarity_in),
        .RXPRBSCNTRESET(gt1_rxprbscntreset_in),
        .RXPRBSERR(gt1_rxprbserr_out),
        .RXPRBSSEL(gt1_rxprbssel_in),
        .RXQPIEN(1'b0),
        .RXQPISENN(NLW_gtxe2_i_RXQPISENN_UNCONNECTED),
        .RXQPISENP(NLW_gtxe2_i_RXQPISENP_UNCONNECTED),
        .RXRATE(gt1_rxrate_in),
        .RXRATEDONE(gt1_rxratedone_out),
        .RXRESETDONE(gt1_rxresetdone_out),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(NLW_gtxe2_i_RXSTARTOFSEQ_UNCONNECTED),
        .RXSTATUS(NLW_gtxe2_i_RXSTATUS_UNCONNECTED[2:0]),
        .RXSYSCLKSEL({1'b1,1'b1}),
        .RXUSERRDY(gt1_rxuserrdy_in),
        .RXUSRCLK(gt1_rxusrclk_in),
        .RXUSRCLK2(gt1_rxusrclk2_in),
        .RXVALID(NLW_gtxe2_i_RXVALID_UNCONNECTED),
        .SETERRSTATUS(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TSTOUT(NLW_gtxe2_i_TSTOUT_UNCONNECTED[9:0]),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gt1_tx8b10bbypass_in}),
        .TX8B10BEN(1'b1),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(NLW_gtxe2_i_TXBUFSTATUS_UNCONNECTED[1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gt1_txcharisk_in}),
        .TXCOMFINISH(NLW_gtxe2_i_TXCOMFINISH_UNCONNECTED),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gt1_txdata_in}),
        .TXDEEMPH(1'b0),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL(gt1_txdiffctrl_in),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(U0_TXDLYSRESET),
        .TXDLYSRESETDONE(U0_TXDLYSRESETDONE),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(gt1_txelecidle_in),
        .TXGEARBOXREADY(NLW_gtxe2_i_TXGEARBOXREADY_UNCONNECTED),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(1'b0),
        .TXMAINCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXOUTCLK(gt1_txoutclk_out),
        .TXOUTCLKFABRIC(gt1_txoutclkfabric_out),
        .TXOUTCLKPCS(gt1_txoutclkpcs_out),
        .TXOUTCLKSEL({1'b0,1'b1,1'b1}),
        .TXPCSRESET(gt1_txpcsreset_in),
        .TXPD(gt1_txpd_in),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(U0_TXPHALIGN),
        .TXPHALIGNDONE(U0_TXPHALIGNDONE),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(U0_TXPHINIT),
        .TXPHINITDONE(U0_TXPHINITDONE),
        .TXPHOVRDEN(1'b0),
        .TXPISOPD(1'b0),
        .TXPMARESET(gt1_txpmareset_in),
        .TXPOLARITY(gt1_txpolarity_in),
        .TXPOSTCURSOR(gt1_txpostcursor_in),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(gt1_txprbsforceerr_in),
        .TXPRBSSEL(gt1_txprbssel_in),
        .TXPRECURSOR(gt1_txprecursor_in),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(NLW_gtxe2_i_TXQPISENN_UNCONNECTED),
        .TXQPISENP(NLW_gtxe2_i_TXQPISENP_UNCONNECTED),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(NLW_gtxe2_i_TXRATEDONE_UNCONNECTED),
        .TXRESETDONE(gt1_txresetdone_out),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYSCLKSEL({1'b1,1'b1}),
        .TXUSERRDY(gt1_txuserrdy_in),
        .TXUSRCLK(gt1_txusrclk_in),
        .TXUSRCLK2(gt1_txusrclk2_in));
endmodule

(* ORIG_REF_NAME = "gtx3g_GT_FRAME_CHECK" *) 
module gtx3g_bert_0_gtx3g_GT_FRAME_CHECK
   (gt1_rxpcommaalignen_in,
    gt1_track_data_i,
    GT0_TXUSRCLK_OUT,
    TEST_RESET,
    ECC_CODE_EN,
    out,
    D,
    gtrxreset_i_reg);
  output gt1_rxpcommaalignen_in;
  output gt1_track_data_i;
  input GT0_TXUSRCLK_OUT;
  input TEST_RESET;
  input ECC_CODE_EN;
  input out;
  input [15:0]D;
  input [1:0]gtrxreset_i_reg;

  wire [15:0]D;
  wire ECC_CODE_EN;
  wire GT0_TXUSRCLK_OUT;
  wire TEST_RESET;
  wire begin_r;
  wire [1:1]block_word_cnt;
  wire block_word_cnt0;
  wire \block_word_cnt[0]_i_2__0_n_0 ;
  wire \block_word_cnt[0]_i_3__0_n_0 ;
  wire \block_word_cnt[1]_i_2__0_n_0 ;
  wire \block_word_cnt[1]_i_3_n_0 ;
  wire \block_word_cnt[1]_i_4__0_n_0 ;
  wire \block_word_cnt[1]_i_5__1_n_0 ;
  wire \block_word_cnt[1]_i_7_n_0 ;
  wire \block_word_cnt[1]_i_8_n_0 ;
  wire \block_word_cnt[3]_i_1_n_0 ;
  wire \block_word_cnt[4]_i_2__2_n_0 ;
  wire \block_word_cnt[4]_i_3__0_n_0 ;
  wire \block_word_cnt[5]_i_1__2_n_0 ;
  wire \block_word_cnt[5]_i_2_n_0 ;
  wire \block_word_cnt[5]_i_3_n_0 ;
  wire \block_word_cnt[7]_i_10_n_0 ;
  wire \block_word_cnt[7]_i_11_n_0 ;
  wire \block_word_cnt[7]_i_12_n_0 ;
  wire \block_word_cnt[7]_i_1__0_n_0 ;
  wire \block_word_cnt[7]_i_3__2_n_0 ;
  wire \block_word_cnt[7]_i_4_n_0 ;
  wire \block_word_cnt[7]_i_5_n_0 ;
  wire \block_word_cnt[7]_i_6_n_0 ;
  wire \block_word_cnt[7]_i_7_n_0 ;
  wire \block_word_cnt[7]_i_8_n_0 ;
  wire \block_word_cnt[7]_i_9_n_0 ;
  wire \block_word_cnt_reg_n_0_[0] ;
  wire \block_word_cnt_reg_n_0_[1] ;
  wire \block_word_cnt_reg_n_0_[2] ;
  wire \block_word_cnt_reg_n_0_[3] ;
  wire \block_word_cnt_reg_n_0_[4] ;
  wire \block_word_cnt_reg_n_0_[5] ;
  wire \block_word_cnt_reg_n_0_[6] ;
  wire \block_word_cnt_reg_n_0_[7] ;
  wire [6:1]data;
  wire gt1_rx_system_reset_c;
  wire gt1_rxpcommaalignen_in;
  wire gt1_track_data_i;
  wire [1:0]gtrxreset_i_reg;
  wire link_ctr;
  wire link_ctr0_carry__0_i_1__0_n_0;
  wire link_ctr0_carry__0_i_2__0_n_0;
  wire link_ctr0_carry__0_n_3;
  wire link_ctr0_carry_i_1__0_n_0;
  wire link_ctr0_carry_i_2__0_n_0;
  wire link_ctr0_carry_i_3__0_n_0;
  wire link_ctr0_carry_i_4__0_n_0;
  wire link_ctr0_carry_n_0;
  wire link_ctr0_carry_n_1;
  wire link_ctr0_carry_n_2;
  wire link_ctr0_carry_n_3;
  wire \link_ctr[5]_i_2__0_n_0 ;
  wire \link_ctr[6]_i_3__0_n_0 ;
  wire \link_ctr[6]_i_4__0_n_0 ;
  wire [6:0]link_ctr_reg;
  wire next_begin_c;
  wire next_track_data_c;
  wire out;
  wire [6:0]p_0_in;
  wire [15:0]p_0_in1_in;
  wire [7:0]p_1_in;
  wire p_1_in5_in;
  wire [15:0]rx_data_r;
  wire [15:0]rx_data_r2;
  wire [7:0]rx_data_r3;
  wire rx_data_r3_reg_r_n_0;
  wire rx_data_r4_reg_r_n_0;
  wire \rx_data_r5_reg[0]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[10]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[11]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[12]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[13]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[14]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[15]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[1]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[2]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[3]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[4]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[5]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[6]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[7]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[8]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[9]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire rx_data_r5_reg_r_n_0;
  wire \rx_data_r6_reg[0]_gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[10]_gt1_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[11]_gt1_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[12]_gt1_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[13]_gt1_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[14]_gt1_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[15]_gt1_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[1]_gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[2]_gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[3]_gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[4]_gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[5]_gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[6]_gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[7]_gt1_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[8]_gt1_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[9]_gt1_frame_check_rx_data_r6_reg_r_n_0 ;
  wire rx_data_r6_reg_gate__0_n_0;
  wire rx_data_r6_reg_gate__10_n_0;
  wire rx_data_r6_reg_gate__11_n_0;
  wire rx_data_r6_reg_gate__12_n_0;
  wire rx_data_r6_reg_gate__13_n_0;
  wire rx_data_r6_reg_gate__14_n_0;
  wire rx_data_r6_reg_gate__1_n_0;
  wire rx_data_r6_reg_gate__2_n_0;
  wire rx_data_r6_reg_gate__3_n_0;
  wire rx_data_r6_reg_gate__4_n_0;
  wire rx_data_r6_reg_gate__5_n_0;
  wire rx_data_r6_reg_gate__6_n_0;
  wire rx_data_r6_reg_gate__7_n_0;
  wire rx_data_r6_reg_gate__8_n_0;
  wire rx_data_r6_reg_gate__9_n_0;
  wire rx_data_r6_reg_gate_n_0;
  wire rx_data_r6_reg_r_n_0;
  wire [15:0]rx_data_r_track;
  wire [15:0]rx_fifo_in_reg;
  wire \rx_fifo_in_reg[15]_i_1__0_n_0 ;
  wire \rx_fifo_in_reg[15]_i_2__0_n_0 ;
  wire [15:0]rx_fifo_out;
  wire rx_fifo_rd_en_i_1_n_0;
  wire rx_fifo_rd_en_i_2_n_0;
  wire rx_fifo_rd_en_i_3_n_0;
  wire rx_fifo_rd_en_i_4_n_0;
  wire rx_fifo_rd_en_reg_n_0;
  wire rx_fifo_rst;
  wire rx_fifo_valid;
  wire rx_fifo_valid_i_1__0_n_0;
  wire rx_fifo_valid_i_2__0_n_0;
  wire rx_fifo_valid_i_3__0_n_0;
  wire rx_fifo_wr_en;
  wire rx_fifo_wr_en_i_1_n_0;
  wire [1:0]rxctrl_r2;
  wire [1:0]rxctrl_r3;
  wire \rxctrl_r_reg_n_0_[0] ;
  wire \sel[0]_i_1__0_n_0 ;
  wire \sel[0]_i_2__0_n_0 ;
  wire \sel[0]_i_3__0_n_0 ;
  wire \sel[0]_i_4__0_n_0 ;
  wire \sel[0]_i_5__0_n_0 ;
  wire \sel_reg_n_0_[0] ;
  wire sm_link_i_1__0_n_0;
  wire sm_link_i_2__0_n_0;
  wire start_of_packet_detected_r;
  wire start_of_packet_detected_r_i_1__0_n_0;
  wire start_of_packet_detected_r_i_2__0_n_0;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) wire system_reset_r;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) wire system_reset_r2;
  wire track_data_r;
  wire [3:1]NLW_link_ctr0_carry__0_CO_UNCONNECTED;
  wire [3:2]NLW_link_ctr0_carry__0_O_UNCONNECTED;
  wire NLW_rx_word_fifo_inst_1_empty_UNCONNECTED;
  wire NLW_rx_word_fifo_inst_1_full_UNCONNECTED;

  FDRE RXENPCOMMADET_OUT_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(1'b1),
        .Q(gt1_rxpcommaalignen_in),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    SYSTEM_RESET_inferred_i_1__2
       (.I0(out),
        .O(gt1_rx_system_reset_c));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h2)) 
    begin_r_i_1__0
       (.I0(begin_r),
        .I1(start_of_packet_detected_r),
        .O(next_begin_c));
  FDSE begin_r_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT6 #(
    .INIT(64'h1511151533333333)) 
    \block_word_cnt[0]_i_1__0 
       (.I0(\block_word_cnt[0]_i_2__0_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .I5(\block_word_cnt[0]_i_3__0_n_0 ),
        .O(p_1_in[0]));
  LUT6 #(
    .INIT(64'h00000000331C0300)) 
    \block_word_cnt[0]_i_2__0 
       (.I0(ECC_CODE_EN),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000233)) 
    \block_word_cnt[0]_i_3__0 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\rx_fifo_in_reg[15]_i_2__0_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[0]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'h8BB8)) 
    \block_word_cnt[1]_i_1__0 
       (.I0(\block_word_cnt[1]_i_2__0_n_0 ),
        .I1(\block_word_cnt[5]_i_3_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .O(p_1_in[1]));
  LUT5 #(
    .INIT(32'h0B3C083C)) 
    \block_word_cnt[1]_i_2__0 
       (.I0(ECC_CODE_EN),
        .I1(\block_word_cnt[1]_i_3_n_0 ),
        .I2(\block_word_cnt[1]_i_4__0_n_0 ),
        .I3(\block_word_cnt[1]_i_5__1_n_0 ),
        .I4(block_word_cnt),
        .O(\block_word_cnt[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'h04040440)) 
    \block_word_cnt[1]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .O(\block_word_cnt[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'h10000510)) 
    \block_word_cnt[1]_i_4__0 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .I4(\block_word_cnt_reg_n_0_[0] ),
        .O(\block_word_cnt[1]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'h00040414)) 
    \block_word_cnt[1]_i_5__1 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(\block_word_cnt[1]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \block_word_cnt[1]_i_6 
       (.I0(\block_word_cnt[7]_i_7_n_0 ),
        .I1(rx_data_r_track[12]),
        .I2(rx_data_r_track[10]),
        .I3(rx_data_r_track[13]),
        .I4(\block_word_cnt[1]_i_7_n_0 ),
        .I5(\block_word_cnt[1]_i_8_n_0 ),
        .O(block_word_cnt));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \block_word_cnt[1]_i_7 
       (.I0(rx_data_r_track[4]),
        .I1(rx_data_r_track[8]),
        .I2(rx_data_r_track[1]),
        .I3(rx_data_r_track[6]),
        .O(\block_word_cnt[1]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \block_word_cnt[1]_i_8 
       (.I0(rx_data_r_track[3]),
        .I1(rx_data_r_track[2]),
        .I2(rx_data_r_track[0]),
        .O(\block_word_cnt[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h002F0F000F000F00)) 
    \block_word_cnt[2]_i_1__0 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt[5]_i_3_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .I5(\block_word_cnt_reg_n_0_[0] ),
        .O(p_1_in[2]));
  LUT5 #(
    .INIT(32'h14444444)) 
    \block_word_cnt[3]_i_1 
       (.I0(\block_word_cnt[5]_i_3_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(\block_word_cnt[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \block_word_cnt[4]_i_2__2 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .O(\block_word_cnt[4]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0030002000300030)) 
    \block_word_cnt[4]_i_3__0 
       (.I0(ECC_CODE_EN),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[0] ),
        .I5(\block_word_cnt_reg_n_0_[1] ),
        .O(\block_word_cnt[4]_i_3__0_n_0 ));
  LUT3 #(
    .INIT(8'h06)) 
    \block_word_cnt[5]_i_1__2 
       (.I0(\block_word_cnt_reg_n_0_[5] ),
        .I1(\block_word_cnt[5]_i_2_n_0 ),
        .I2(\block_word_cnt[5]_i_3_n_0 ),
        .O(\block_word_cnt[5]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \block_word_cnt[5]_i_2 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .O(\block_word_cnt[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000031300000103)) 
    \block_word_cnt[5]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\rx_fifo_in_reg[15]_i_2__0_n_0 ),
        .I5(\block_word_cnt_reg_n_0_[4] ),
        .O(\block_word_cnt[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \block_word_cnt[6]_i_1__0 
       (.I0(\block_word_cnt_reg_n_0_[6] ),
        .I1(\block_word_cnt[7]_i_4_n_0 ),
        .O(p_1_in[6]));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \block_word_cnt[7]_i_10 
       (.I0(rx_data_r_track[11]),
        .I1(rx_data_r_track[13]),
        .I2(rx_data_r_track[7]),
        .I3(rx_data_r_track[0]),
        .O(\block_word_cnt[7]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \block_word_cnt[7]_i_11 
       (.I0(rx_data_r_track[8]),
        .I1(rx_data_r_track[4]),
        .O(\block_word_cnt[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \block_word_cnt[7]_i_12 
       (.I0(rx_data_r_track[10]),
        .I1(rx_data_r_track[9]),
        .I2(rx_data_r_track[12]),
        .I3(rx_data_r_track[5]),
        .O(\block_word_cnt[7]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \block_word_cnt[7]_i_1__0 
       (.I0(\block_word_cnt[7]_i_3__2_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[7] ),
        .I3(\block_word_cnt_reg_n_0_[5] ),
        .I4(\block_word_cnt_reg_n_0_[6] ),
        .O(\block_word_cnt[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \block_word_cnt[7]_i_2__2 
       (.I0(\block_word_cnt_reg_n_0_[6] ),
        .I1(\block_word_cnt[7]_i_4_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[7] ),
        .O(p_1_in[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFEEEFFFFFE)) 
    \block_word_cnt[7]_i_3__2 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt[7]_i_5_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(\block_word_cnt[7]_i_6_n_0 ),
        .O(\block_word_cnt[7]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \block_word_cnt[7]_i_4 
       (.I0(\block_word_cnt_reg_n_0_[5] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[3] ),
        .I5(\block_word_cnt_reg_n_0_[4] ),
        .O(\block_word_cnt[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \block_word_cnt[7]_i_5 
       (.I0(\block_word_cnt[7]_i_7_n_0 ),
        .I1(rx_data_r_track[12]),
        .I2(rx_data_r_track[10]),
        .I3(rx_data_r_track[13]),
        .I4(\block_word_cnt[7]_i_8_n_0 ),
        .I5(\block_word_cnt[7]_i_9_n_0 ),
        .O(\block_word_cnt[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \block_word_cnt[7]_i_6 
       (.I0(\block_word_cnt[7]_i_10_n_0 ),
        .I1(rx_data_r_track[14]),
        .I2(rx_data_r_track[15]),
        .I3(\block_word_cnt[7]_i_11_n_0 ),
        .I4(\block_word_cnt[7]_i_12_n_0 ),
        .I5(\block_word_cnt[7]_i_9_n_0 ),
        .O(\block_word_cnt[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEFFFFFFFFFFF)) 
    \block_word_cnt[7]_i_7 
       (.I0(rx_data_r_track[14]),
        .I1(rx_data_r_track[15]),
        .I2(rx_data_r_track[9]),
        .I3(rx_data_r_track[5]),
        .I4(rx_data_r_track[11]),
        .I5(rx_data_r_track[7]),
        .O(\block_word_cnt[7]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hFB)) 
    \block_word_cnt[7]_i_8 
       (.I0(rx_data_r_track[8]),
        .I1(rx_data_r_track[4]),
        .I2(rx_data_r_track[0]),
        .O(\block_word_cnt[7]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \block_word_cnt[7]_i_9 
       (.I0(rx_data_r_track[2]),
        .I1(rx_data_r_track[1]),
        .I2(rx_data_r_track[3]),
        .I3(rx_data_r_track[6]),
        .O(\block_word_cnt[7]_i_9_n_0 ));
  FDRE \block_word_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[0]),
        .Q(\block_word_cnt_reg_n_0_[0] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[1]),
        .Q(\block_word_cnt_reg_n_0_[1] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[2]),
        .Q(\block_word_cnt_reg_n_0_[2] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1__0_n_0 ),
        .D(\block_word_cnt[3]_i_1_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[3] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[4]),
        .Q(\block_word_cnt_reg_n_0_[4] ),
        .R(block_word_cnt0));
  MUXF7 \block_word_cnt_reg[4]_i_1 
       (.I0(\block_word_cnt[4]_i_2__2_n_0 ),
        .I1(\block_word_cnt[4]_i_3__0_n_0 ),
        .O(p_1_in[4]),
        .S(\block_word_cnt[5]_i_3_n_0 ));
  FDRE \block_word_cnt_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1__0_n_0 ),
        .D(\block_word_cnt[5]_i_1__2_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[5] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[6]),
        .Q(\block_word_cnt_reg_n_0_[6] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[7]),
        .Q(\block_word_cnt_reg_n_0_[7] ),
        .R(block_word_cnt0));
  CARRY4 link_ctr0_carry
       (.CI(1'b0),
        .CO({link_ctr0_carry_n_0,link_ctr0_carry_n_1,link_ctr0_carry_n_2,link_ctr0_carry_n_3}),
        .CYINIT(link_ctr_reg[0]),
        .DI({link_ctr_reg[3:2],1'b1,1'b0}),
        .O(data[4:1]),
        .S({link_ctr0_carry_i_1__0_n_0,link_ctr0_carry_i_2__0_n_0,link_ctr0_carry_i_3__0_n_0,link_ctr0_carry_i_4__0_n_0}));
  CARRY4 link_ctr0_carry__0
       (.CI(link_ctr0_carry_n_0),
        .CO({NLW_link_ctr0_carry__0_CO_UNCONNECTED[3:1],link_ctr0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,link_ctr_reg[4]}),
        .O({NLW_link_ctr0_carry__0_O_UNCONNECTED[3:2],data[6:5]}),
        .S({1'b0,1'b0,link_ctr0_carry__0_i_1__0_n_0,link_ctr0_carry__0_i_2__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    link_ctr0_carry__0_i_1__0
       (.I0(link_ctr_reg[5]),
        .I1(link_ctr_reg[6]),
        .O(link_ctr0_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    link_ctr0_carry__0_i_2__0
       (.I0(link_ctr_reg[4]),
        .I1(link_ctr_reg[5]),
        .O(link_ctr0_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    link_ctr0_carry_i_1__0
       (.I0(link_ctr_reg[3]),
        .I1(link_ctr_reg[4]),
        .O(link_ctr0_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    link_ctr0_carry_i_2__0
       (.I0(link_ctr_reg[2]),
        .I1(link_ctr_reg[3]),
        .O(link_ctr0_carry_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    link_ctr0_carry_i_3__0
       (.I0(link_ctr_reg[2]),
        .O(link_ctr0_carry_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    link_ctr0_carry_i_4__0
       (.I0(link_ctr_reg[1]),
        .O(link_ctr0_carry_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \link_ctr[0]_i_1__0 
       (.I0(link_ctr_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT4 #(
    .INIT(16'h8BB8)) 
    \link_ctr[1]_i_1__0 
       (.I0(data[1]),
        .I1(gt1_track_data_i),
        .I2(link_ctr_reg[0]),
        .I3(link_ctr_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'h8BB8B8B8)) 
    \link_ctr[2]_i_1__0 
       (.I0(data[2]),
        .I1(gt1_track_data_i),
        .I2(link_ctr_reg[2]),
        .I3(link_ctr_reg[0]),
        .I4(link_ctr_reg[1]),
        .O(p_0_in[2]));
  LUT6 #(
    .INIT(64'h8BB8B8B8B8B8B8B8)) 
    \link_ctr[3]_i_1__0 
       (.I0(data[3]),
        .I1(gt1_track_data_i),
        .I2(link_ctr_reg[3]),
        .I3(link_ctr_reg[2]),
        .I4(link_ctr_reg[0]),
        .I5(link_ctr_reg[1]),
        .O(p_0_in[3]));
  LUT5 #(
    .INIT(32'hB8B88BB8)) 
    \link_ctr[4]_i_1__0 
       (.I0(data[4]),
        .I1(gt1_track_data_i),
        .I2(link_ctr_reg[4]),
        .I3(link_ctr_reg[3]),
        .I4(\link_ctr[5]_i_2__0_n_0 ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'hB88BB8B8B8B8B8B8)) 
    \link_ctr[5]_i_1__0 
       (.I0(data[5]),
        .I1(gt1_track_data_i),
        .I2(link_ctr_reg[5]),
        .I3(\link_ctr[5]_i_2__0_n_0 ),
        .I4(link_ctr_reg[3]),
        .I5(link_ctr_reg[4]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \link_ctr[5]_i_2__0 
       (.I0(link_ctr_reg[1]),
        .I1(link_ctr_reg[0]),
        .I2(link_ctr_reg[2]),
        .O(\link_ctr[5]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000008AAAAAAAA)) 
    \link_ctr[6]_i_1__0 
       (.I0(track_data_r),
        .I1(\link_ctr[6]_i_3__0_n_0 ),
        .I2(link_ctr_reg[4]),
        .I3(link_ctr_reg[3]),
        .I4(link_ctr_reg[5]),
        .I5(link_ctr_reg[6]),
        .O(link_ctr));
  LUT5 #(
    .INIT(32'h8BB8B8B8)) 
    \link_ctr[6]_i_2__0 
       (.I0(data[6]),
        .I1(gt1_track_data_i),
        .I2(link_ctr_reg[6]),
        .I3(link_ctr_reg[5]),
        .I4(\link_ctr[6]_i_4__0_n_0 ),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h07)) 
    \link_ctr[6]_i_3__0 
       (.I0(link_ctr_reg[1]),
        .I1(link_ctr_reg[0]),
        .I2(link_ctr_reg[2]),
        .O(\link_ctr[6]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \link_ctr[6]_i_4__0 
       (.I0(link_ctr_reg[4]),
        .I1(link_ctr_reg[3]),
        .I2(link_ctr_reg[1]),
        .I3(link_ctr_reg[0]),
        .I4(link_ctr_reg[2]),
        .O(\link_ctr[6]_i_4__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[0]),
        .Q(link_ctr_reg[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[1]),
        .Q(link_ctr_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[2]),
        .Q(link_ctr_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[3]),
        .Q(link_ctr_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[4]),
        .Q(link_ctr_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[5]),
        .Q(link_ctr_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[6]),
        .Q(link_ctr_reg[6]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[0]),
        .Q(rx_data_r2[0]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[10]),
        .Q(rx_data_r2[10]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[11]),
        .Q(rx_data_r2[11]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[12]),
        .Q(rx_data_r2[12]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[13]),
        .Q(rx_data_r2[13]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[14]),
        .Q(rx_data_r2[14]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[15]),
        .Q(rx_data_r2[15]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[1]),
        .Q(rx_data_r2[1]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[2]),
        .Q(rx_data_r2[2]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[3]),
        .Q(rx_data_r2[3]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[4]),
        .Q(rx_data_r2[4]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[5]),
        .Q(rx_data_r2[5]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[6]),
        .Q(rx_data_r2[6]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[7]),
        .Q(rx_data_r2[7]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[8]),
        .Q(rx_data_r2[8]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[9]),
        .Q(rx_data_r2[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[0]_i_1__0 
       (.I0(rx_data_r2[8]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[0]),
        .O(p_0_in1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[1]_i_1__0 
       (.I0(rx_data_r2[9]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[1]),
        .O(p_0_in1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[2]_i_1__0 
       (.I0(rx_data_r2[10]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[2]),
        .O(p_0_in1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[3]_i_1__0 
       (.I0(rx_data_r2[11]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[3]),
        .O(p_0_in1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[4]_i_1__0 
       (.I0(rx_data_r2[12]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[4]),
        .O(p_0_in1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[5]_i_1__0 
       (.I0(rx_data_r2[13]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[5]),
        .O(p_0_in1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[6]_i_1__0 
       (.I0(rx_data_r2[14]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[6]),
        .O(p_0_in1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[7]_i_1__0 
       (.I0(rx_data_r2[15]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[7]),
        .O(p_0_in1_in[7]));
  FDRE \rx_data_r3_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[0]),
        .Q(rx_data_r3[0]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[1]),
        .Q(rx_data_r3[1]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[2]),
        .Q(rx_data_r3[2]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[3]),
        .Q(rx_data_r3[3]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[4]),
        .Q(rx_data_r3[4]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[5]),
        .Q(rx_data_r3[5]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[6]),
        .Q(rx_data_r3[6]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[7]),
        .Q(rx_data_r3[7]),
        .R(system_reset_r2));
  FDRE rx_data_r3_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(1'b1),
        .Q(rx_data_r3_reg_r_n_0),
        .R(system_reset_r2));
  FDRE rx_data_r4_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r3_reg_r_n_0),
        .Q(rx_data_r4_reg_r_n_0),
        .R(system_reset_r2));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[0]_srl2___gt1_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[0]_srl2___gt1_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[0]),
        .Q(\rx_data_r5_reg[0]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[10]_srl3___gt1_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[10]_srl3___gt1_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[10]),
        .Q(\rx_data_r5_reg[10]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[10]_srl3___gt1_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[2]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[10]),
        .O(p_0_in1_in[10]));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[11]_srl3___gt1_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[11]_srl3___gt1_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[11]),
        .Q(\rx_data_r5_reg[11]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[11]_srl3___gt1_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[3]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[11]),
        .O(p_0_in1_in[11]));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[12]_srl3___gt1_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[12]_srl3___gt1_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[12]),
        .Q(\rx_data_r5_reg[12]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[12]_srl3___gt1_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[4]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[12]),
        .O(p_0_in1_in[12]));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[13]_srl3___gt1_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[13]_srl3___gt1_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[13]),
        .Q(\rx_data_r5_reg[13]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[13]_srl3___gt1_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[5]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[13]),
        .O(p_0_in1_in[13]));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[14]_srl3___gt1_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[14]_srl3___gt1_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[14]),
        .Q(\rx_data_r5_reg[14]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[14]_srl3___gt1_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[6]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[14]),
        .O(p_0_in1_in[14]));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[15]_srl3___gt1_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[15]_srl3___gt1_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[15]),
        .Q(\rx_data_r5_reg[15]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[15]_srl3___gt1_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[7]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[15]),
        .O(p_0_in1_in[15]));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[1]_srl2___gt1_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[1]_srl2___gt1_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[1]),
        .Q(\rx_data_r5_reg[1]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[2]_srl2___gt1_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[2]_srl2___gt1_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[2]),
        .Q(\rx_data_r5_reg[2]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[3]_srl2___gt1_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[3]_srl2___gt1_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[3]),
        .Q(\rx_data_r5_reg[3]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[4]_srl2___gt1_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[4]_srl2___gt1_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[4]),
        .Q(\rx_data_r5_reg[4]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[5]_srl2___gt1_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[5]_srl2___gt1_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[5]),
        .Q(\rx_data_r5_reg[5]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[6]_srl2___gt1_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[6]_srl2___gt1_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[6]),
        .Q(\rx_data_r5_reg[6]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[7]_srl2___gt1_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[7]_srl2___gt1_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[7]),
        .Q(\rx_data_r5_reg[7]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[8]_srl3___gt1_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[8]_srl3___gt1_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[8]),
        .Q(\rx_data_r5_reg[8]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[8]_srl3___gt1_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[0]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[8]),
        .O(p_0_in1_in[8]));
  (* srl_bus_name = "inst/\gt1_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt1_frame_check/rx_data_r5_reg[9]_srl3___gt1_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[9]_srl3___gt1_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[9]),
        .Q(\rx_data_r5_reg[9]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[9]_srl3___gt1_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[1]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[9]),
        .O(p_0_in1_in[9]));
  FDRE rx_data_r5_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r4_reg_r_n_0),
        .Q(rx_data_r5_reg_r_n_0),
        .R(system_reset_r2));
  FDRE \rx_data_r6_reg[0]_gt1_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[0]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[0]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[10]_gt1_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[10]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[10]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[11]_gt1_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[11]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[11]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[12]_gt1_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[12]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[12]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[13]_gt1_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[13]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[13]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[14]_gt1_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[14]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[14]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[15]_gt1_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[15]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[15]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[1]_gt1_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[1]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[1]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[2]_gt1_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[2]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[2]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[3]_gt1_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[3]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[3]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[4]_gt1_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[4]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[4]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[5]_gt1_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[5]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[5]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[6]_gt1_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[6]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[6]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[7]_gt1_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[7]_srl2___gt1_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[7]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[8]_gt1_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[8]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[8]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[9]_gt1_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[9]_srl3___gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[9]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate
       (.I0(\rx_data_r6_reg[15]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate_n_0));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__0
       (.I0(\rx_data_r6_reg[14]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__1
       (.I0(\rx_data_r6_reg[13]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__10
       (.I0(\rx_data_r6_reg[4]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__11
       (.I0(\rx_data_r6_reg[3]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__12
       (.I0(\rx_data_r6_reg[2]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__13
       (.I0(\rx_data_r6_reg[1]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__14
       (.I0(\rx_data_r6_reg[0]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__2
       (.I0(\rx_data_r6_reg[12]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__3
       (.I0(\rx_data_r6_reg[11]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__4
       (.I0(\rx_data_r6_reg[10]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__5
       (.I0(\rx_data_r6_reg[9]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__6
       (.I0(\rx_data_r6_reg[8]_gt1_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__7
       (.I0(\rx_data_r6_reg[7]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__8
       (.I0(\rx_data_r6_reg[6]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__9
       (.I0(\rx_data_r6_reg[5]_gt1_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__9_n_0));
  FDRE rx_data_r6_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r5_reg_r_n_0),
        .Q(rx_data_r6_reg_r_n_0),
        .R(system_reset_r2));
  FDRE \rx_data_r_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[0]),
        .Q(rx_data_r[0]),
        .R(1'b0));
  FDRE \rx_data_r_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[10]),
        .Q(rx_data_r[10]),
        .R(1'b0));
  FDRE \rx_data_r_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[11]),
        .Q(rx_data_r[11]),
        .R(1'b0));
  FDRE \rx_data_r_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[12]),
        .Q(rx_data_r[12]),
        .R(1'b0));
  FDRE \rx_data_r_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[13]),
        .Q(rx_data_r[13]),
        .R(1'b0));
  FDRE \rx_data_r_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[14]),
        .Q(rx_data_r[14]),
        .R(1'b0));
  FDRE \rx_data_r_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[15]),
        .Q(rx_data_r[15]),
        .R(1'b0));
  FDRE \rx_data_r_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[1]),
        .Q(rx_data_r[1]),
        .R(1'b0));
  FDRE \rx_data_r_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[2]),
        .Q(rx_data_r[2]),
        .R(1'b0));
  FDRE \rx_data_r_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[3]),
        .Q(rx_data_r[3]),
        .R(1'b0));
  FDRE \rx_data_r_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[4]),
        .Q(rx_data_r[4]),
        .R(1'b0));
  FDRE \rx_data_r_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[5]),
        .Q(rx_data_r[5]),
        .R(1'b0));
  FDRE \rx_data_r_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[6]),
        .Q(rx_data_r[6]),
        .R(1'b0));
  FDRE \rx_data_r_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[7]),
        .Q(rx_data_r[7]),
        .R(1'b0));
  FDRE \rx_data_r_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[8]),
        .Q(rx_data_r[8]),
        .R(1'b0));
  FDRE \rx_data_r_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[9]),
        .Q(rx_data_r[9]),
        .R(1'b0));
  FDRE \rx_data_r_track_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__14_n_0),
        .Q(rx_data_r_track[0]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__4_n_0),
        .Q(rx_data_r_track[10]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__3_n_0),
        .Q(rx_data_r_track[11]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__2_n_0),
        .Q(rx_data_r_track[12]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__1_n_0),
        .Q(rx_data_r_track[13]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__0_n_0),
        .Q(rx_data_r_track[14]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate_n_0),
        .Q(rx_data_r_track[15]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__13_n_0),
        .Q(rx_data_r_track[1]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__12_n_0),
        .Q(rx_data_r_track[2]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__11_n_0),
        .Q(rx_data_r_track[3]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__10_n_0),
        .Q(rx_data_r_track[4]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__9_n_0),
        .Q(rx_data_r_track[5]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__8_n_0),
        .Q(rx_data_r_track[6]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__7_n_0),
        .Q(rx_data_r_track[7]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__6_n_0),
        .Q(rx_data_r_track[8]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__5_n_0),
        .Q(rx_data_r_track[9]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'hFFFFFFF6FFFBFFF6)) 
    \rx_fifo_in_reg[15]_i_1__0 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\rx_fifo_in_reg[15]_i_2__0_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[3] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .I5(\block_word_cnt_reg_n_0_[0] ),
        .O(\rx_fifo_in_reg[15]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \rx_fifo_in_reg[15]_i_2__0 
       (.I0(\block_word_cnt_reg_n_0_[6] ),
        .I1(\block_word_cnt_reg_n_0_[5] ),
        .I2(\block_word_cnt_reg_n_0_[7] ),
        .O(\rx_fifo_in_reg[15]_i_2__0_n_0 ));
  FDRE \rx_fifo_in_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[0]),
        .Q(rx_fifo_in_reg[0]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[10]),
        .Q(rx_fifo_in_reg[10]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[11]),
        .Q(rx_fifo_in_reg[11]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[12]),
        .Q(rx_fifo_in_reg[12]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[13]),
        .Q(rx_fifo_in_reg[13]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[14]),
        .Q(rx_fifo_in_reg[14]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[15]),
        .Q(rx_fifo_in_reg[15]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[1]),
        .Q(rx_fifo_in_reg[1]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[2]),
        .Q(rx_fifo_in_reg[2]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[3]),
        .Q(rx_fifo_in_reg[3]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[4]),
        .Q(rx_fifo_in_reg[4]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[5]),
        .Q(rx_fifo_in_reg[5]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[6]),
        .Q(rx_fifo_in_reg[6]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[7]),
        .Q(rx_fifo_in_reg[7]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[8]),
        .Q(rx_fifo_in_reg[8]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .D(rx_data_r_track[9]),
        .Q(rx_fifo_in_reg[9]),
        .R(block_word_cnt0));
  LUT6 #(
    .INIT(64'h00000000FE020202)) 
    rx_fifo_rd_en_i_1
       (.I0(rx_fifo_rd_en_reg_n_0),
        .I1(rx_fifo_rd_en_i_2_n_0),
        .I2(rx_fifo_rd_en_i_3_n_0),
        .I3(rx_fifo_valid_i_3__0_n_0),
        .I4(rx_fifo_valid),
        .I5(block_word_cnt0),
        .O(rx_fifo_rd_en_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFC0FFCF8)) 
    rx_fifo_rd_en_i_2
       (.I0(block_word_cnt),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(rx_fifo_rd_en_i_4_n_0),
        .O(rx_fifo_rd_en_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'h000000E2)) 
    rx_fifo_rd_en_i_3
       (.I0(\block_word_cnt[7]_i_5_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt[7]_i_6_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(rx_fifo_rd_en_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEFFFFFFFEFE)) 
    rx_fifo_rd_en_i_4
       (.I0(\block_word_cnt_reg_n_0_[7] ),
        .I1(\block_word_cnt_reg_n_0_[5] ),
        .I2(\block_word_cnt_reg_n_0_[6] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .I4(\block_word_cnt_reg_n_0_[3] ),
        .I5(\block_word_cnt_reg_n_0_[2] ),
        .O(rx_fifo_rd_en_i_4_n_0));
  FDRE rx_fifo_rd_en_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_fifo_rd_en_i_1_n_0),
        .Q(rx_fifo_rd_en_reg_n_0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    rx_fifo_rst_i_1
       (.I0(TEST_RESET),
        .I1(system_reset_r2),
        .O(block_word_cnt0));
  FDRE rx_fifo_rst_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(block_word_cnt0),
        .Q(rx_fifo_rst),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h000000AE)) 
    rx_fifo_valid_i_1__0
       (.I0(rx_fifo_valid),
        .I1(rx_fifo_valid_i_2__0_n_0),
        .I2(rx_fifo_valid_i_3__0_n_0),
        .I3(system_reset_r2),
        .I4(TEST_RESET),
        .O(rx_fifo_valid_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'h08)) 
    rx_fifo_valid_i_2__0
       (.I0(\block_word_cnt[7]_i_6_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .O(rx_fifo_valid_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    rx_fifo_valid_i_3__0
       (.I0(\block_word_cnt_reg_n_0_[7] ),
        .I1(\block_word_cnt_reg_n_0_[5] ),
        .I2(\block_word_cnt_reg_n_0_[6] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .I5(\block_word_cnt_reg_n_0_[3] ),
        .O(rx_fifo_valid_i_3__0_n_0));
  FDRE rx_fifo_valid_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_fifo_valid_i_1__0_n_0),
        .Q(rx_fifo_valid),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000FEFE02FE)) 
    rx_fifo_wr_en_i_1
       (.I0(rx_fifo_wr_en),
        .I1(rx_fifo_valid_i_2__0_n_0),
        .I2(\rx_fifo_in_reg[15]_i_1__0_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(rx_fifo_valid_i_3__0_n_0),
        .I5(block_word_cnt0),
        .O(rx_fifo_wr_en_i_1_n_0));
  FDRE rx_fifo_wr_en_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_fifo_wr_en_i_1_n_0),
        .Q(rx_fifo_wr_en),
        .R(1'b0));
  (* CHECK_LICENSE_TYPE = "rx_word_fifo,fifo_generator_v13_1_4,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_1_4,Vivado 2017.2" *) 
  gtx3g_bert_0_rx_word_fifo rx_word_fifo_inst_1
       (.clk(GT0_TXUSRCLK_OUT),
        .din(rx_fifo_in_reg),
        .dout(rx_fifo_out),
        .empty(NLW_rx_word_fifo_inst_1_empty_UNCONNECTED),
        .full(NLW_rx_word_fifo_inst_1_full_UNCONNECTED),
        .rd_en(rx_fifo_rd_en_reg_n_0),
        .srst(rx_fifo_rst),
        .wr_en(rx_fifo_wr_en));
  FDRE \rxctrl_r2_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rxctrl_r_reg_n_0_[0] ),
        .Q(rxctrl_r2[0]),
        .R(system_reset_r2));
  FDRE \rxctrl_r2_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_1_in5_in),
        .Q(rxctrl_r2[1]),
        .R(system_reset_r2));
  FDRE \rxctrl_r3_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rxctrl_r2[0]),
        .Q(rxctrl_r3[0]),
        .R(system_reset_r2));
  FDRE \rxctrl_r3_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rxctrl_r2[1]),
        .Q(rxctrl_r3[1]),
        .R(system_reset_r2));
  FDRE \rxctrl_r_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(gtrxreset_i_reg[0]),
        .Q(\rxctrl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \rxctrl_r_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(gtrxreset_i_reg[1]),
        .Q(p_1_in5_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000AEAE00AE)) 
    \sel[0]_i_1__0 
       (.I0(\sel_reg_n_0_[0] ),
        .I1(\sel[0]_i_2__0_n_0 ),
        .I2(\sel[0]_i_3__0_n_0 ),
        .I3(\sel[0]_i_4__0_n_0 ),
        .I4(\sel[0]_i_5__0_n_0 ),
        .I5(system_reset_r2),
        .O(\sel[0]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h4000)) 
    \sel[0]_i_2__0 
       (.I0(rx_data_r[14]),
        .I1(begin_r),
        .I2(rx_data_r[13]),
        .I3(rx_data_r[11]),
        .O(\sel[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFDFFFFFFFFFFF)) 
    \sel[0]_i_3__0 
       (.I0(rx_data_r[10]),
        .I1(rx_data_r[9]),
        .I2(rx_data_r[15]),
        .I3(rx_data_r[12]),
        .I4(rx_data_r[8]),
        .I5(p_1_in5_in),
        .O(\sel[0]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \sel[0]_i_4__0 
       (.I0(rx_data_r[3]),
        .I1(begin_r),
        .I2(\rxctrl_r_reg_n_0_[0] ),
        .I3(rx_data_r[1]),
        .O(\sel[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFDFFFFFFFFFFF)) 
    \sel[0]_i_5__0 
       (.I0(rx_data_r[5]),
        .I1(rx_data_r[0]),
        .I2(rx_data_r[4]),
        .I3(rx_data_r[2]),
        .I4(rx_data_r[6]),
        .I5(rx_data_r[7]),
        .O(\sel[0]_i_5__0_n_0 ));
  FDRE \sel_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\sel[0]_i_1__0_n_0 ),
        .Q(\sel_reg_n_0_[0] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hA8)) 
    sm_link_i_1__0
       (.I0(track_data_r),
        .I1(gt1_track_data_i),
        .I2(sm_link_i_2__0_n_0),
        .O(sm_link_i_1__0_n_0));
  LUT5 #(
    .INIT(32'hAAA8AAAA)) 
    sm_link_i_2__0
       (.I0(link_ctr_reg[6]),
        .I1(link_ctr_reg[5]),
        .I2(link_ctr_reg[3]),
        .I3(link_ctr_reg[4]),
        .I4(\link_ctr[6]_i_3__0_n_0 ),
        .O(sm_link_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_link_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(sm_link_i_1__0_n_0),
        .Q(gt1_track_data_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    start_of_packet_detected_r_i_1__0
       (.I0(rx_data_r3[1]),
        .I1(rx_data_r3[6]),
        .I2(start_of_packet_detected_r_i_2__0_n_0),
        .I3(rx_data_r3[0]),
        .I4(rx_data_r3[2]),
        .I5(rx_data_r3[7]),
        .O(start_of_packet_detected_r_i_1__0_n_0));
  LUT5 #(
    .INIT(32'h777FFFFF)) 
    start_of_packet_detected_r_i_2__0
       (.I0(rx_data_r3[4]),
        .I1(rx_data_r3[3]),
        .I2(rxctrl_r3[1]),
        .I3(rxctrl_r3[0]),
        .I4(rx_data_r3[5]),
        .O(start_of_packet_detected_r_i_2__0_n_0));
  FDRE start_of_packet_detected_r_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(start_of_packet_detected_r_i_1__0_n_0),
        .Q(start_of_packet_detected_r),
        .R(1'b0));
  (* ASYNC_REG *) 
  FDRE system_reset_r2_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(system_reset_r),
        .Q(system_reset_r2),
        .R(1'b0));
  (* ASYNC_REG *) 
  FDRE system_reset_r_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(gt1_rx_system_reset_c),
        .Q(system_reset_r),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hEA)) 
    track_data_r_i_1__0
       (.I0(track_data_r),
        .I1(start_of_packet_detected_r),
        .I2(begin_r),
        .O(next_track_data_c));
  FDRE track_data_r_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(next_track_data_c),
        .Q(track_data_r),
        .R(system_reset_r2));
endmodule

(* ORIG_REF_NAME = "gtx3g_GT_FRAME_CHECK" *) 
module gtx3g_bert_0_gtx3g_GT_FRAME_CHECK__xdcDup__1
   (gt0_rxpcommaalignen_in,
    DATA_COUNT_OUT,
    PATTERN_ERROR_COUNT_OUT,
    gt0_track_data_i,
    TEST_OVER_OUT,
    PATTERN_ERROR_OUT,
    TRACK_DATA_OUT,
    BLOCK_ERROR_OUT,
    GT0_TXUSRCLK_OUT,
    TEST_RESET,
    ECC_CODE_EN,
    gt1_track_data_i,
    PATTERN_MODE,
    out,
    RXDATA_OUT,
    D);
  output gt0_rxpcommaalignen_in;
  output [31:0]DATA_COUNT_OUT;
  output [31:0]PATTERN_ERROR_COUNT_OUT;
  output gt0_track_data_i;
  output TEST_OVER_OUT;
  output PATTERN_ERROR_OUT;
  output TRACK_DATA_OUT;
  output [1:0]BLOCK_ERROR_OUT;
  input GT0_TXUSRCLK_OUT;
  input TEST_RESET;
  input ECC_CODE_EN;
  input gt1_track_data_i;
  input [2:0]PATTERN_MODE;
  input out;
  input [15:0]RXDATA_OUT;
  input [1:0]D;

  wire [1:0]BLOCK_ERROR_OUT;
  wire [1:0]D;
  wire [31:0]DATA_COUNT_OUT;
  wire ECC_CODE_EN;
  wire GT0_TXUSRCLK_OUT;
  wire [31:0]PATTERN_ERROR_COUNT_OUT;
  wire PATTERN_ERROR_OUT;
  wire [2:0]PATTERN_MODE;
  wire [15:0]RXDATA_OUT;
  wire TEST_OVER_OUT;
  wire TEST_RESET;
  wire TRACK_DATA_OUT;
  wire begin_r;
  wire \block_error_reg[0]_i_1_n_0 ;
  wire \block_error_reg[0]_i_2_n_0 ;
  wire \block_error_reg[0]_i_3_n_0 ;
  wire \block_error_reg[1]_i_1_n_0 ;
  wire \block_error_reg[1]_i_2_n_0 ;
  wire \block_error_reg[1]_i_3_n_0 ;
  wire \block_error_reg[1]_i_4_n_0 ;
  wire \block_error_reg[1]_i_5_n_0 ;
  wire \block_error_reg[1]_i_6_n_0 ;
  wire \block_error_reg[1]_i_7_n_0 ;
  wire \block_error_reg[1]_i_8_n_0 ;
  wire block_word_cnt0;
  wire \block_word_cnt[0]_i_2_n_0 ;
  wire \block_word_cnt[0]_i_3_n_0 ;
  wire \block_word_cnt[1]_i_2_n_0 ;
  wire \block_word_cnt[3]_i_1__0_n_0 ;
  wire \block_word_cnt[4]_i_2__1_n_0 ;
  wire \block_word_cnt[4]_i_3_n_0 ;
  wire \block_word_cnt[4]_i_4_n_0 ;
  wire \block_word_cnt[4]_i_5_n_0 ;
  wire \block_word_cnt[7]_i_1_n_0 ;
  wire \block_word_cnt[7]_i_3_n_0 ;
  wire \block_word_cnt_reg_n_0_[0] ;
  wire \block_word_cnt_reg_n_0_[1] ;
  wire \block_word_cnt_reg_n_0_[2] ;
  wire \block_word_cnt_reg_n_0_[3] ;
  wire \block_word_cnt_reg_n_0_[4] ;
  wire \block_word_cnt_reg_n_0_[5] ;
  wire \block_word_cnt_reg_n_0_[6] ;
  wire \block_word_cnt_reg_n_0_[7] ;
  wire correct_mask_valid;
  wire correct_mask_valid_i_1_n_0;
  wire correct_mask_valid_i_2_n_0;
  wire [6:1]data;
  wire data_word_cnt;
  wire \data_word_cnt[11]_i_2_n_0 ;
  wire \data_word_cnt[11]_i_3_n_0 ;
  wire \data_word_cnt[11]_i_4_n_0 ;
  wire \data_word_cnt[11]_i_5_n_0 ;
  wire \data_word_cnt[15]_i_2_n_0 ;
  wire \data_word_cnt[15]_i_3_n_0 ;
  wire \data_word_cnt[15]_i_4_n_0 ;
  wire \data_word_cnt[15]_i_5_n_0 ;
  wire \data_word_cnt[19]_i_2_n_0 ;
  wire \data_word_cnt[19]_i_3_n_0 ;
  wire \data_word_cnt[19]_i_4_n_0 ;
  wire \data_word_cnt[19]_i_5_n_0 ;
  wire \data_word_cnt[23]_i_2_n_0 ;
  wire \data_word_cnt[23]_i_3_n_0 ;
  wire \data_word_cnt[23]_i_4_n_0 ;
  wire \data_word_cnt[23]_i_5_n_0 ;
  wire \data_word_cnt[27]_i_2_n_0 ;
  wire \data_word_cnt[27]_i_3_n_0 ;
  wire \data_word_cnt[27]_i_4_n_0 ;
  wire \data_word_cnt[27]_i_5_n_0 ;
  wire \data_word_cnt[31]_i_10_n_0 ;
  wire \data_word_cnt[31]_i_11_n_0 ;
  wire \data_word_cnt[31]_i_12_n_0 ;
  wire \data_word_cnt[31]_i_13_n_0 ;
  wire \data_word_cnt[31]_i_14_n_0 ;
  wire \data_word_cnt[31]_i_15_n_0 ;
  wire \data_word_cnt[31]_i_4_n_0 ;
  wire \data_word_cnt[31]_i_5_n_0 ;
  wire \data_word_cnt[31]_i_6_n_0 ;
  wire \data_word_cnt[31]_i_7_n_0 ;
  wire \data_word_cnt[31]_i_8_n_0 ;
  wire \data_word_cnt[31]_i_9_n_0 ;
  wire \data_word_cnt[3]_i_2_n_0 ;
  wire \data_word_cnt[3]_i_3_n_0 ;
  wire \data_word_cnt[3]_i_4_n_0 ;
  wire \data_word_cnt[3]_i_5_n_0 ;
  wire \data_word_cnt[7]_i_2_n_0 ;
  wire \data_word_cnt[7]_i_3_n_0 ;
  wire \data_word_cnt[7]_i_4_n_0 ;
  wire \data_word_cnt[7]_i_5_n_0 ;
  wire \data_word_cnt_reg[11]_i_1_n_0 ;
  wire \data_word_cnt_reg[11]_i_1_n_1 ;
  wire \data_word_cnt_reg[11]_i_1_n_2 ;
  wire \data_word_cnt_reg[11]_i_1_n_3 ;
  wire \data_word_cnt_reg[11]_i_1_n_4 ;
  wire \data_word_cnt_reg[11]_i_1_n_5 ;
  wire \data_word_cnt_reg[11]_i_1_n_6 ;
  wire \data_word_cnt_reg[11]_i_1_n_7 ;
  wire \data_word_cnt_reg[15]_i_1_n_0 ;
  wire \data_word_cnt_reg[15]_i_1_n_1 ;
  wire \data_word_cnt_reg[15]_i_1_n_2 ;
  wire \data_word_cnt_reg[15]_i_1_n_3 ;
  wire \data_word_cnt_reg[15]_i_1_n_4 ;
  wire \data_word_cnt_reg[15]_i_1_n_5 ;
  wire \data_word_cnt_reg[15]_i_1_n_6 ;
  wire \data_word_cnt_reg[15]_i_1_n_7 ;
  wire \data_word_cnt_reg[19]_i_1_n_0 ;
  wire \data_word_cnt_reg[19]_i_1_n_1 ;
  wire \data_word_cnt_reg[19]_i_1_n_2 ;
  wire \data_word_cnt_reg[19]_i_1_n_3 ;
  wire \data_word_cnt_reg[19]_i_1_n_4 ;
  wire \data_word_cnt_reg[19]_i_1_n_5 ;
  wire \data_word_cnt_reg[19]_i_1_n_6 ;
  wire \data_word_cnt_reg[19]_i_1_n_7 ;
  wire \data_word_cnt_reg[23]_i_1_n_0 ;
  wire \data_word_cnt_reg[23]_i_1_n_1 ;
  wire \data_word_cnt_reg[23]_i_1_n_2 ;
  wire \data_word_cnt_reg[23]_i_1_n_3 ;
  wire \data_word_cnt_reg[23]_i_1_n_4 ;
  wire \data_word_cnt_reg[23]_i_1_n_5 ;
  wire \data_word_cnt_reg[23]_i_1_n_6 ;
  wire \data_word_cnt_reg[23]_i_1_n_7 ;
  wire \data_word_cnt_reg[27]_i_1_n_0 ;
  wire \data_word_cnt_reg[27]_i_1_n_1 ;
  wire \data_word_cnt_reg[27]_i_1_n_2 ;
  wire \data_word_cnt_reg[27]_i_1_n_3 ;
  wire \data_word_cnt_reg[27]_i_1_n_4 ;
  wire \data_word_cnt_reg[27]_i_1_n_5 ;
  wire \data_word_cnt_reg[27]_i_1_n_6 ;
  wire \data_word_cnt_reg[27]_i_1_n_7 ;
  wire \data_word_cnt_reg[31]_i_3_n_1 ;
  wire \data_word_cnt_reg[31]_i_3_n_2 ;
  wire \data_word_cnt_reg[31]_i_3_n_3 ;
  wire \data_word_cnt_reg[31]_i_3_n_4 ;
  wire \data_word_cnt_reg[31]_i_3_n_5 ;
  wire \data_word_cnt_reg[31]_i_3_n_6 ;
  wire \data_word_cnt_reg[31]_i_3_n_7 ;
  wire \data_word_cnt_reg[3]_i_1_n_0 ;
  wire \data_word_cnt_reg[3]_i_1_n_1 ;
  wire \data_word_cnt_reg[3]_i_1_n_2 ;
  wire \data_word_cnt_reg[3]_i_1_n_3 ;
  wire \data_word_cnt_reg[3]_i_1_n_4 ;
  wire \data_word_cnt_reg[3]_i_1_n_5 ;
  wire \data_word_cnt_reg[3]_i_1_n_6 ;
  wire \data_word_cnt_reg[3]_i_1_n_7 ;
  wire \data_word_cnt_reg[7]_i_1_n_0 ;
  wire \data_word_cnt_reg[7]_i_1_n_1 ;
  wire \data_word_cnt_reg[7]_i_1_n_2 ;
  wire \data_word_cnt_reg[7]_i_1_n_3 ;
  wire \data_word_cnt_reg[7]_i_1_n_4 ;
  wire \data_word_cnt_reg[7]_i_1_n_5 ;
  wire \data_word_cnt_reg[7]_i_1_n_6 ;
  wire \data_word_cnt_reg[7]_i_1_n_7 ;
  wire data_word_valid;
  wire data_word_valid_i_1_n_0;
  wire data_word_valid_i_2_n_0;
  wire data_word_valid_i_3_n_0;
  wire data_word_valid_i_4_n_0;
  wire encoder_rst_i_1_n_0;
  wire encoder_rst_i_2_n_0;
  wire encoder_rst_i_3_n_0;
  wire encoder_rst_i_4_n_0;
  wire encoder_rst_i_5_n_0;
  wire encoder_rst_reg_n_0;
  wire gt0_rx_system_reset_c;
  wire gt0_rxpcommaalignen_in;
  wire gt0_track_data_i;
  wire gt1_track_data_i;
  wire [15:0]hor_correct_mask;
  wire [15:0]hor_correct_mask0;
  wire \hor_correct_mask[15]_i_1_n_0 ;
  wire \hor_correct_mask_reg[0]_i_1_n_0 ;
  wire \hor_correct_mask_reg[10]_i_1_n_0 ;
  wire \hor_correct_mask_reg[11]_i_1_n_0 ;
  wire \hor_correct_mask_reg[12]_i_1_n_0 ;
  wire \hor_correct_mask_reg[13]_i_1_n_0 ;
  wire \hor_correct_mask_reg[14]_i_1_n_0 ;
  wire \hor_correct_mask_reg[15]_i_1_n_0 ;
  wire \hor_correct_mask_reg[15]_i_2_n_0 ;
  wire \hor_correct_mask_reg[1]_i_1_n_0 ;
  wire \hor_correct_mask_reg[2]_i_1_n_0 ;
  wire \hor_correct_mask_reg[3]_i_1_n_0 ;
  wire \hor_correct_mask_reg[4]_i_1_n_0 ;
  wire \hor_correct_mask_reg[5]_i_1_n_0 ;
  wire \hor_correct_mask_reg[6]_i_1_n_0 ;
  wire \hor_correct_mask_reg[7]_i_1_n_0 ;
  wire \hor_correct_mask_reg[8]_i_1_n_0 ;
  wire \hor_correct_mask_reg[9]_i_1_n_0 ;
  wire \hor_correct_mask_reg_reg_n_0_[0] ;
  wire \hor_correct_mask_reg_reg_n_0_[10] ;
  wire \hor_correct_mask_reg_reg_n_0_[11] ;
  wire \hor_correct_mask_reg_reg_n_0_[12] ;
  wire \hor_correct_mask_reg_reg_n_0_[13] ;
  wire \hor_correct_mask_reg_reg_n_0_[14] ;
  wire \hor_correct_mask_reg_reg_n_0_[15] ;
  wire \hor_correct_mask_reg_reg_n_0_[1] ;
  wire \hor_correct_mask_reg_reg_n_0_[2] ;
  wire \hor_correct_mask_reg_reg_n_0_[3] ;
  wire \hor_correct_mask_reg_reg_n_0_[4] ;
  wire \hor_correct_mask_reg_reg_n_0_[5] ;
  wire \hor_correct_mask_reg_reg_n_0_[6] ;
  wire \hor_correct_mask_reg_reg_n_0_[7] ;
  wire \hor_correct_mask_reg_reg_n_0_[8] ;
  wire \hor_correct_mask_reg_reg_n_0_[9] ;
  wire link_ctr;
  wire link_ctr0_carry__0_i_1_n_0;
  wire link_ctr0_carry__0_i_2_n_0;
  wire link_ctr0_carry__0_n_3;
  wire link_ctr0_carry_i_1_n_0;
  wire link_ctr0_carry_i_2_n_0;
  wire link_ctr0_carry_i_3_n_0;
  wire link_ctr0_carry_i_4_n_0;
  wire link_ctr0_carry_n_0;
  wire link_ctr0_carry_n_1;
  wire link_ctr0_carry_n_2;
  wire link_ctr0_carry_n_3;
  wire \link_ctr[5]_i_2_n_0 ;
  wire \link_ctr[6]_i_3_n_0 ;
  wire \link_ctr[6]_i_4_n_0 ;
  wire [6:0]link_ctr_reg__0;
  wire next_begin_c;
  wire next_track_data_c;
  wire out;
  wire [6:0]p_0_in;
  wire [15:0]p_0_in1_in;
  wire [7:0]p_1_in;
  wire p_1_in5_in;
  wire pattern_check_en;
  wire pattern_check_en_i_1_n_0;
  wire pattern_check_en_i_2_n_0;
  wire pattern_check_en_i_3_n_0;
  wire pattern_check_en_i_4_n_0;
  wire pattern_error_cnt;
  wire \pattern_error_cnt[11]_i_2_n_0 ;
  wire \pattern_error_cnt[11]_i_3_n_0 ;
  wire \pattern_error_cnt[11]_i_4_n_0 ;
  wire \pattern_error_cnt[11]_i_5_n_0 ;
  wire \pattern_error_cnt[15]_i_2_n_0 ;
  wire \pattern_error_cnt[15]_i_3_n_0 ;
  wire \pattern_error_cnt[15]_i_4_n_0 ;
  wire \pattern_error_cnt[15]_i_5_n_0 ;
  wire \pattern_error_cnt[19]_i_2_n_0 ;
  wire \pattern_error_cnt[19]_i_3_n_0 ;
  wire \pattern_error_cnt[19]_i_4_n_0 ;
  wire \pattern_error_cnt[19]_i_5_n_0 ;
  wire \pattern_error_cnt[23]_i_2_n_0 ;
  wire \pattern_error_cnt[23]_i_3_n_0 ;
  wire \pattern_error_cnt[23]_i_4_n_0 ;
  wire \pattern_error_cnt[23]_i_5_n_0 ;
  wire \pattern_error_cnt[27]_i_2_n_0 ;
  wire \pattern_error_cnt[27]_i_3_n_0 ;
  wire \pattern_error_cnt[27]_i_4_n_0 ;
  wire \pattern_error_cnt[27]_i_5_n_0 ;
  wire \pattern_error_cnt[31]_i_3_n_0 ;
  wire \pattern_error_cnt[31]_i_4_n_0 ;
  wire \pattern_error_cnt[31]_i_5_n_0 ;
  wire \pattern_error_cnt[31]_i_6_n_0 ;
  wire \pattern_error_cnt[3]_i_2_n_0 ;
  wire \pattern_error_cnt[3]_i_3_n_0 ;
  wire \pattern_error_cnt[3]_i_4_n_0 ;
  wire \pattern_error_cnt[3]_i_5_n_0 ;
  wire \pattern_error_cnt[7]_i_2_n_0 ;
  wire \pattern_error_cnt[7]_i_3_n_0 ;
  wire \pattern_error_cnt[7]_i_4_n_0 ;
  wire \pattern_error_cnt[7]_i_5_n_0 ;
  wire \pattern_error_cnt_reg[11]_i_1_n_0 ;
  wire \pattern_error_cnt_reg[11]_i_1_n_1 ;
  wire \pattern_error_cnt_reg[11]_i_1_n_2 ;
  wire \pattern_error_cnt_reg[11]_i_1_n_3 ;
  wire \pattern_error_cnt_reg[11]_i_1_n_4 ;
  wire \pattern_error_cnt_reg[11]_i_1_n_5 ;
  wire \pattern_error_cnt_reg[11]_i_1_n_6 ;
  wire \pattern_error_cnt_reg[11]_i_1_n_7 ;
  wire \pattern_error_cnt_reg[15]_i_1_n_0 ;
  wire \pattern_error_cnt_reg[15]_i_1_n_1 ;
  wire \pattern_error_cnt_reg[15]_i_1_n_2 ;
  wire \pattern_error_cnt_reg[15]_i_1_n_3 ;
  wire \pattern_error_cnt_reg[15]_i_1_n_4 ;
  wire \pattern_error_cnt_reg[15]_i_1_n_5 ;
  wire \pattern_error_cnt_reg[15]_i_1_n_6 ;
  wire \pattern_error_cnt_reg[15]_i_1_n_7 ;
  wire \pattern_error_cnt_reg[19]_i_1_n_0 ;
  wire \pattern_error_cnt_reg[19]_i_1_n_1 ;
  wire \pattern_error_cnt_reg[19]_i_1_n_2 ;
  wire \pattern_error_cnt_reg[19]_i_1_n_3 ;
  wire \pattern_error_cnt_reg[19]_i_1_n_4 ;
  wire \pattern_error_cnt_reg[19]_i_1_n_5 ;
  wire \pattern_error_cnt_reg[19]_i_1_n_6 ;
  wire \pattern_error_cnt_reg[19]_i_1_n_7 ;
  wire \pattern_error_cnt_reg[23]_i_1_n_0 ;
  wire \pattern_error_cnt_reg[23]_i_1_n_1 ;
  wire \pattern_error_cnt_reg[23]_i_1_n_2 ;
  wire \pattern_error_cnt_reg[23]_i_1_n_3 ;
  wire \pattern_error_cnt_reg[23]_i_1_n_4 ;
  wire \pattern_error_cnt_reg[23]_i_1_n_5 ;
  wire \pattern_error_cnt_reg[23]_i_1_n_6 ;
  wire \pattern_error_cnt_reg[23]_i_1_n_7 ;
  wire \pattern_error_cnt_reg[27]_i_1_n_0 ;
  wire \pattern_error_cnt_reg[27]_i_1_n_1 ;
  wire \pattern_error_cnt_reg[27]_i_1_n_2 ;
  wire \pattern_error_cnt_reg[27]_i_1_n_3 ;
  wire \pattern_error_cnt_reg[27]_i_1_n_4 ;
  wire \pattern_error_cnt_reg[27]_i_1_n_5 ;
  wire \pattern_error_cnt_reg[27]_i_1_n_6 ;
  wire \pattern_error_cnt_reg[27]_i_1_n_7 ;
  wire \pattern_error_cnt_reg[31]_i_2_n_1 ;
  wire \pattern_error_cnt_reg[31]_i_2_n_2 ;
  wire \pattern_error_cnt_reg[31]_i_2_n_3 ;
  wire \pattern_error_cnt_reg[31]_i_2_n_4 ;
  wire \pattern_error_cnt_reg[31]_i_2_n_5 ;
  wire \pattern_error_cnt_reg[31]_i_2_n_6 ;
  wire \pattern_error_cnt_reg[31]_i_2_n_7 ;
  wire \pattern_error_cnt_reg[3]_i_1_n_0 ;
  wire \pattern_error_cnt_reg[3]_i_1_n_1 ;
  wire \pattern_error_cnt_reg[3]_i_1_n_2 ;
  wire \pattern_error_cnt_reg[3]_i_1_n_3 ;
  wire \pattern_error_cnt_reg[3]_i_1_n_4 ;
  wire \pattern_error_cnt_reg[3]_i_1_n_5 ;
  wire \pattern_error_cnt_reg[3]_i_1_n_6 ;
  wire \pattern_error_cnt_reg[3]_i_1_n_7 ;
  wire \pattern_error_cnt_reg[7]_i_1_n_0 ;
  wire \pattern_error_cnt_reg[7]_i_1_n_1 ;
  wire \pattern_error_cnt_reg[7]_i_1_n_2 ;
  wire \pattern_error_cnt_reg[7]_i_1_n_3 ;
  wire \pattern_error_cnt_reg[7]_i_1_n_4 ;
  wire \pattern_error_cnt_reg[7]_i_1_n_5 ;
  wire \pattern_error_cnt_reg[7]_i_1_n_6 ;
  wire \pattern_error_cnt_reg[7]_i_1_n_7 ;
  wire pattern_error_reg0_carry__0_n_2;
  wire pattern_error_reg0_carry__0_n_3;
  wire pattern_error_reg0_carry_n_0;
  wire pattern_error_reg0_carry_n_1;
  wire pattern_error_reg0_carry_n_2;
  wire pattern_error_reg0_carry_n_3;
  wire pattern_error_reg_i_1_n_0;
  wire pattern_gen_inst_2_n_0;
  wire pattern_gen_inst_2_n_1;
  wire pattern_gen_inst_2_n_2;
  wire pattern_gen_inst_2_n_3;
  wire pattern_gen_inst_2_n_4;
  wire pattern_gen_inst_2_n_5;
  wire pattern_pause_reg_i_1_n_0;
  wire pattern_pause_reg_i_2_n_0;
  wire pattern_pause_reg_i_3_n_0;
  wire pattern_pause_reg_reg_n_0;
  wire [15:0]rx_data_r;
  wire [15:0]rx_data_r2;
  wire [7:0]rx_data_r3;
  wire rx_data_r3_reg_r_n_0;
  wire rx_data_r4_reg_r_n_0;
  wire \rx_data_r5_reg[0]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[10]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[11]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[12]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[13]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[14]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[15]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[1]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[2]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[3]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[4]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[5]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[6]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[7]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ;
  wire \rx_data_r5_reg[8]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r5_reg[9]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire rx_data_r5_reg_r_n_0;
  wire \rx_data_r6_reg[0]_gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[10]_gt0_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[11]_gt0_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[12]_gt0_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[13]_gt0_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[14]_gt0_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[15]_gt0_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[1]_gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[2]_gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[3]_gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[4]_gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[5]_gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[6]_gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[7]_gt0_frame_check_rx_data_r5_reg_r_n_0 ;
  wire \rx_data_r6_reg[8]_gt0_frame_check_rx_data_r6_reg_r_n_0 ;
  wire \rx_data_r6_reg[9]_gt0_frame_check_rx_data_r6_reg_r_n_0 ;
  wire rx_data_r6_reg_gate__0_n_0;
  wire rx_data_r6_reg_gate__10_n_0;
  wire rx_data_r6_reg_gate__11_n_0;
  wire rx_data_r6_reg_gate__12_n_0;
  wire rx_data_r6_reg_gate__13_n_0;
  wire rx_data_r6_reg_gate__14_n_0;
  wire rx_data_r6_reg_gate__1_n_0;
  wire rx_data_r6_reg_gate__2_n_0;
  wire rx_data_r6_reg_gate__3_n_0;
  wire rx_data_r6_reg_gate__4_n_0;
  wire rx_data_r6_reg_gate__5_n_0;
  wire rx_data_r6_reg_gate__6_n_0;
  wire rx_data_r6_reg_gate__7_n_0;
  wire rx_data_r6_reg_gate__8_n_0;
  wire rx_data_r6_reg_gate__9_n_0;
  wire rx_data_r6_reg_gate_n_0;
  wire rx_data_r6_reg_r_n_0;
  wire [15:0]rx_data_r_track;
  wire [15:0]rx_fifo_in_reg;
  wire \rx_fifo_in_reg[15]_i_1_n_0 ;
  wire \rx_fifo_in_reg[15]_i_2_n_0 ;
  wire [15:0]rx_fifo_out;
  wire [15:0]rx_fifo_out_correct;
  wire \rx_fifo_out_correct[0]_i_1_n_0 ;
  wire \rx_fifo_out_correct[10]_i_1_n_0 ;
  wire \rx_fifo_out_correct[11]_i_1_n_0 ;
  wire \rx_fifo_out_correct[12]_i_1_n_0 ;
  wire \rx_fifo_out_correct[13]_i_1_n_0 ;
  wire \rx_fifo_out_correct[14]_i_1_n_0 ;
  wire \rx_fifo_out_correct[15]_i_1_n_0 ;
  wire \rx_fifo_out_correct[1]_i_1_n_0 ;
  wire \rx_fifo_out_correct[2]_i_1_n_0 ;
  wire \rx_fifo_out_correct[3]_i_1_n_0 ;
  wire \rx_fifo_out_correct[4]_i_1_n_0 ;
  wire \rx_fifo_out_correct[5]_i_1_n_0 ;
  wire \rx_fifo_out_correct[6]_i_1_n_0 ;
  wire \rx_fifo_out_correct[7]_i_1_n_0 ;
  wire \rx_fifo_out_correct[8]_i_1_n_0 ;
  wire \rx_fifo_out_correct[9]_i_1_n_0 ;
  wire rx_fifo_out_reg_en;
  wire rx_fifo_out_reg_en_i_1_n_0;
  wire rx_fifo_rd_en_i_1__0_n_0;
  wire rx_fifo_rd_en_reg_n_0;
  wire rx_fifo_rst;
  wire rx_fifo_valid;
  wire rx_fifo_valid_i_1_n_0;
  wire rx_fifo_valid_i_2_n_0;
  wire rx_fifo_valid_i_3_n_0;
  wire rx_fifo_valid_i_4_n_0;
  wire rx_fifo_wr_en;
  wire rx_fifo_wr_en_i_1__0_n_0;
  wire rx_fifo_wr_en_i_2_n_0;
  wire [1:0]rxctrl_r2;
  wire [1:0]rxctrl_r3;
  wire \rxctrl_r_reg_n_0_[0] ;
  wire \sel[0]_i_1_n_0 ;
  wire \sel[0]_i_2_n_0 ;
  wire \sel[0]_i_3_n_0 ;
  wire \sel[0]_i_4_n_0 ;
  wire \sel[0]_i_5_n_0 ;
  wire \sel_reg_n_0_[0] ;
  wire sm_link_i_1_n_0;
  wire sm_link_i_2_n_0;
  wire start_of_packet_detected_r;
  wire start_of_packet_detected_r_i_1_n_0;
  wire start_of_packet_detected_r_i_2_n_0;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) wire system_reset_r;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) wire system_reset_r2;
  wire test_over_reg_i_1_n_0;
  wire track_data_r;
  wire [15:0]ver_correct_mask;
  wire [15:0]ver_correct_mask0;
  wire \ver_correct_mask[15]_i_1_n_0 ;
  wire [15:0]ver_correct_mask_reg__0;
  wire [3:3]\NLW_data_word_cnt_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:1]NLW_link_ctr0_carry__0_CO_UNCONNECTED;
  wire [3:2]NLW_link_ctr0_carry__0_O_UNCONNECTED;
  wire [3:3]\NLW_pattern_error_cnt_reg[31]_i_2_CO_UNCONNECTED ;
  wire [3:0]NLW_pattern_error_reg0_carry_O_UNCONNECTED;
  wire [3:2]NLW_pattern_error_reg0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_pattern_error_reg0_carry__0_O_UNCONNECTED;
  wire NLW_rx_word_fifo_inst_1_empty_UNCONNECTED;
  wire NLW_rx_word_fifo_inst_1_full_UNCONNECTED;

  FDRE RXENPCOMMADET_OUT_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(1'b1),
        .Q(gt0_rxpcommaalignen_in),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    SYSTEM_RESET_inferred_i_1
       (.I0(out),
        .O(gt0_rx_system_reset_c));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h8)) 
    TRACK_DATA_OUT_INST_0
       (.I0(gt0_track_data_i),
        .I1(gt1_track_data_i),
        .O(TRACK_DATA_OUT));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h2)) 
    begin_r_i_1
       (.I0(begin_r),
        .I1(start_of_packet_detected_r),
        .O(next_begin_c));
  FDSE begin_r_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT6 #(
    .INIT(64'hF5F5F0F5A0A0B0A0)) 
    \block_error_reg[0]_i_1 
       (.I0(\block_error_reg[1]_i_2_n_0 ),
        .I1(\block_error_reg[1]_i_3_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_error_reg[0]_i_2_n_0 ),
        .I4(\block_error_reg[0]_i_3_n_0 ),
        .I5(BLOCK_ERROR_OUT[0]),
        .O(\block_error_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \block_error_reg[0]_i_2 
       (.I0(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .O(\block_error_reg[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \block_error_reg[0]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(encoder_rst_i_2_n_0),
        .O(\block_error_reg[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBAAABBBB8AAA8888)) 
    \block_error_reg[1]_i_1 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_error_reg[1]_i_2_n_0 ),
        .I2(\block_error_reg[1]_i_3_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_error_reg[1]_i_4_n_0 ),
        .I5(BLOCK_ERROR_OUT[1]),
        .O(\block_error_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \block_error_reg[1]_i_2 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .I4(\block_word_cnt_reg_n_0_[0] ),
        .I5(rx_fifo_valid_i_2_n_0),
        .O(\block_error_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \block_error_reg[1]_i_3 
       (.I0(\block_error_reg[1]_i_5_n_0 ),
        .I1(\block_error_reg[1]_i_6_n_0 ),
        .I2(rx_data_r_track[14]),
        .I3(rx_data_r_track[12]),
        .I4(\block_error_reg[1]_i_7_n_0 ),
        .I5(\block_error_reg[1]_i_8_n_0 ),
        .O(\block_error_reg[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0001000100010000)) 
    \block_error_reg[1]_i_4 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I4(encoder_rst_i_2_n_0),
        .I5(\block_word_cnt_reg_n_0_[0] ),
        .O(\block_error_reg[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \block_error_reg[1]_i_5 
       (.I0(rx_data_r_track[5]),
        .I1(rx_data_r_track[7]),
        .I2(rx_data_r_track[4]),
        .I3(rx_data_r_track[9]),
        .O(\block_error_reg[1]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \block_error_reg[1]_i_6 
       (.I0(rx_data_r_track[13]),
        .I1(rx_data_r_track[15]),
        .O(\block_error_reg[1]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \block_error_reg[1]_i_7 
       (.I0(rx_data_r_track[11]),
        .I1(rx_data_r_track[10]),
        .I2(rx_data_r_track[3]),
        .I3(rx_data_r_track[8]),
        .O(\block_error_reg[1]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'hFF7F)) 
    \block_error_reg[1]_i_8 
       (.I0(rx_data_r_track[1]),
        .I1(rx_data_r_track[6]),
        .I2(rx_data_r_track[0]),
        .I3(rx_data_r_track[2]),
        .O(\block_error_reg[1]_i_8_n_0 ));
  FDRE \block_error_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_error_reg[0]_i_1_n_0 ),
        .Q(BLOCK_ERROR_OUT[0]),
        .R(block_word_cnt0));
  FDRE \block_error_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_error_reg[1]_i_1_n_0 ),
        .Q(BLOCK_ERROR_OUT[1]),
        .R(block_word_cnt0));
  LUT6 #(
    .INIT(64'hB9B80000B9B8FFFF)) 
    \block_word_cnt[0]_i_1 
       (.I0(\block_word_cnt[0]_i_2_n_0 ),
        .I1(\block_word_cnt[0]_i_3_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[3] ),
        .I3(ECC_CODE_EN),
        .I4(\block_word_cnt[4]_i_4_n_0 ),
        .I5(\block_word_cnt_reg_n_0_[0] ),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'hFFFFFFDB)) 
    \block_word_cnt[0]_i_2 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'hDDD7)) 
    \block_word_cnt[0]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .O(\block_word_cnt[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hE0EFEFE0)) 
    \block_word_cnt[1]_i_1 
       (.I0(\block_word_cnt[1]_i_2_n_0 ),
        .I1(\block_word_cnt[4]_i_3_n_0 ),
        .I2(\block_word_cnt[4]_i_4_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .O(p_1_in[1]));
  LUT6 #(
    .INIT(64'h0000000000020300)) 
    \block_word_cnt[1]_i_2 
       (.I0(\block_error_reg[1]_i_3_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[0] ),
        .I5(\block_word_cnt_reg_n_0_[4] ),
        .O(\block_word_cnt[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h33CCCCC4)) 
    \block_word_cnt[2]_i_1 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \block_word_cnt[3]_i_1__0 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .O(\block_word_cnt[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF099FF99)) 
    \block_word_cnt[4]_i_1 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt[4]_i_2__1_n_0 ),
        .I2(\block_word_cnt[4]_i_3_n_0 ),
        .I3(\block_word_cnt[4]_i_4_n_0 ),
        .I4(\block_word_cnt[4]_i_5_n_0 ),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \block_word_cnt[4]_i_2__1 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[4]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000C0800)) 
    \block_word_cnt[4]_i_3 
       (.I0(ECC_CODE_EN),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[0] ),
        .I5(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h10111131)) 
    \block_word_cnt[4]_i_4 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .O(\block_word_cnt[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'hFFFFBFEF)) 
    \block_word_cnt[4]_i_5 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \block_word_cnt[5]_i_1 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(\block_word_cnt_reg_n_0_[5] ),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \block_word_cnt[6]_i_1 
       (.I0(\block_word_cnt_reg_n_0_[6] ),
        .I1(\block_word_cnt[7]_i_3_n_0 ),
        .O(p_1_in[6]));
  LUT6 #(
    .INIT(64'h5555555455555555)) 
    \block_word_cnt[7]_i_1 
       (.I0(\block_error_reg[1]_i_2_n_0 ),
        .I1(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(\block_error_reg[0]_i_3_n_0 ),
        .O(\block_word_cnt[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \block_word_cnt[7]_i_2 
       (.I0(\block_word_cnt_reg_n_0_[7] ),
        .I1(\block_word_cnt[7]_i_3_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[6] ),
        .O(p_1_in[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \block_word_cnt[7]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[5] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .I5(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[7]_i_3_n_0 ));
  FDRE \block_word_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(\block_word_cnt_reg_n_0_[0] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(\block_word_cnt_reg_n_0_[1] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(\block_word_cnt_reg_n_0_[2] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1_n_0 ),
        .D(\block_word_cnt[3]_i_1__0_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[3] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(\block_word_cnt_reg_n_0_[4] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(\block_word_cnt_reg_n_0_[5] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(\block_word_cnt_reg_n_0_[6] ),
        .R(block_word_cnt0));
  FDRE \block_word_cnt_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\block_word_cnt[7]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(\block_word_cnt_reg_n_0_[7] ),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    correct_mask_valid_i_1
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(correct_mask_valid_i_2_n_0),
        .I3(correct_mask_valid),
        .O(correct_mask_valid_i_1_n_0));
  LUT6 #(
    .INIT(64'h0020004100200040)) 
    correct_mask_valid_i_2
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .I5(encoder_rst_i_2_n_0),
        .O(correct_mask_valid_i_2_n_0));
  FDRE correct_mask_valid_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(correct_mask_valid_i_1_n_0),
        .Q(correct_mask_valid),
        .R(block_word_cnt0));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[11]_i_2 
       (.I0(DATA_COUNT_OUT[11]),
        .O(\data_word_cnt[11]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[11]_i_3 
       (.I0(DATA_COUNT_OUT[10]),
        .O(\data_word_cnt[11]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[11]_i_4 
       (.I0(DATA_COUNT_OUT[9]),
        .O(\data_word_cnt[11]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[11]_i_5 
       (.I0(DATA_COUNT_OUT[8]),
        .O(\data_word_cnt[11]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[15]_i_2 
       (.I0(DATA_COUNT_OUT[15]),
        .O(\data_word_cnt[15]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[15]_i_3 
       (.I0(DATA_COUNT_OUT[14]),
        .O(\data_word_cnt[15]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[15]_i_4 
       (.I0(DATA_COUNT_OUT[13]),
        .O(\data_word_cnt[15]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[15]_i_5 
       (.I0(DATA_COUNT_OUT[12]),
        .O(\data_word_cnt[15]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[19]_i_2 
       (.I0(DATA_COUNT_OUT[19]),
        .O(\data_word_cnt[19]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[19]_i_3 
       (.I0(DATA_COUNT_OUT[18]),
        .O(\data_word_cnt[19]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[19]_i_4 
       (.I0(DATA_COUNT_OUT[17]),
        .O(\data_word_cnt[19]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[19]_i_5 
       (.I0(DATA_COUNT_OUT[16]),
        .O(\data_word_cnt[19]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[23]_i_2 
       (.I0(DATA_COUNT_OUT[23]),
        .O(\data_word_cnt[23]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[23]_i_3 
       (.I0(DATA_COUNT_OUT[22]),
        .O(\data_word_cnt[23]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[23]_i_4 
       (.I0(DATA_COUNT_OUT[21]),
        .O(\data_word_cnt[23]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[23]_i_5 
       (.I0(DATA_COUNT_OUT[20]),
        .O(\data_word_cnt[23]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[27]_i_2 
       (.I0(DATA_COUNT_OUT[27]),
        .O(\data_word_cnt[27]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[27]_i_3 
       (.I0(DATA_COUNT_OUT[26]),
        .O(\data_word_cnt[27]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[27]_i_4 
       (.I0(DATA_COUNT_OUT[25]),
        .O(\data_word_cnt[27]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[27]_i_5 
       (.I0(DATA_COUNT_OUT[24]),
        .O(\data_word_cnt[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \data_word_cnt[31]_i_1 
       (.I0(system_reset_r2),
        .I1(TEST_RESET),
        .O(block_word_cnt0));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[31]_i_10 
       (.I0(DATA_COUNT_OUT[29]),
        .O(\data_word_cnt[31]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[31]_i_11 
       (.I0(DATA_COUNT_OUT[28]),
        .O(\data_word_cnt[31]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_word_cnt[31]_i_12 
       (.I0(DATA_COUNT_OUT[16]),
        .I1(DATA_COUNT_OUT[26]),
        .I2(DATA_COUNT_OUT[27]),
        .I3(DATA_COUNT_OUT[25]),
        .O(\data_word_cnt[31]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_word_cnt[31]_i_13 
       (.I0(DATA_COUNT_OUT[29]),
        .I1(DATA_COUNT_OUT[19]),
        .I2(DATA_COUNT_OUT[17]),
        .I3(DATA_COUNT_OUT[20]),
        .O(\data_word_cnt[31]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \data_word_cnt[31]_i_14 
       (.I0(DATA_COUNT_OUT[0]),
        .I1(DATA_COUNT_OUT[13]),
        .I2(DATA_COUNT_OUT[15]),
        .I3(DATA_COUNT_OUT[9]),
        .O(\data_word_cnt[31]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \data_word_cnt[31]_i_15 
       (.I0(DATA_COUNT_OUT[11]),
        .I1(DATA_COUNT_OUT[3]),
        .I2(DATA_COUNT_OUT[1]),
        .I3(DATA_COUNT_OUT[7]),
        .O(\data_word_cnt[31]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h40440000)) 
    \data_word_cnt[31]_i_2 
       (.I0(\data_word_cnt[31]_i_4_n_0 ),
        .I1(\data_word_cnt[31]_i_5_n_0 ),
        .I2(\data_word_cnt[31]_i_6_n_0 ),
        .I3(\data_word_cnt[31]_i_7_n_0 ),
        .I4(pattern_check_en),
        .O(data_word_cnt));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \data_word_cnt[31]_i_4 
       (.I0(DATA_COUNT_OUT[30]),
        .I1(DATA_COUNT_OUT[28]),
        .I2(DATA_COUNT_OUT[21]),
        .I3(DATA_COUNT_OUT[22]),
        .I4(\data_word_cnt[31]_i_12_n_0 ),
        .O(\data_word_cnt[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \data_word_cnt[31]_i_5 
       (.I0(DATA_COUNT_OUT[23]),
        .I1(DATA_COUNT_OUT[31]),
        .I2(DATA_COUNT_OUT[24]),
        .I3(DATA_COUNT_OUT[18]),
        .I4(\data_word_cnt[31]_i_13_n_0 ),
        .O(\data_word_cnt[31]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \data_word_cnt[31]_i_6 
       (.I0(DATA_COUNT_OUT[4]),
        .I1(DATA_COUNT_OUT[5]),
        .I2(DATA_COUNT_OUT[12]),
        .I3(DATA_COUNT_OUT[6]),
        .I4(\data_word_cnt[31]_i_14_n_0 ),
        .O(\data_word_cnt[31]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \data_word_cnt[31]_i_7 
       (.I0(DATA_COUNT_OUT[2]),
        .I1(DATA_COUNT_OUT[10]),
        .I2(DATA_COUNT_OUT[14]),
        .I3(DATA_COUNT_OUT[8]),
        .I4(\data_word_cnt[31]_i_15_n_0 ),
        .O(\data_word_cnt[31]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[31]_i_8 
       (.I0(DATA_COUNT_OUT[31]),
        .O(\data_word_cnt[31]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[31]_i_9 
       (.I0(DATA_COUNT_OUT[30]),
        .O(\data_word_cnt[31]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[3]_i_2 
       (.I0(DATA_COUNT_OUT[3]),
        .O(\data_word_cnt[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[3]_i_3 
       (.I0(DATA_COUNT_OUT[2]),
        .O(\data_word_cnt[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[3]_i_4 
       (.I0(DATA_COUNT_OUT[1]),
        .O(\data_word_cnt[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \data_word_cnt[3]_i_5 
       (.I0(DATA_COUNT_OUT[0]),
        .O(\data_word_cnt[3]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[7]_i_2 
       (.I0(DATA_COUNT_OUT[7]),
        .O(\data_word_cnt[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[7]_i_3 
       (.I0(DATA_COUNT_OUT[6]),
        .O(\data_word_cnt[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[7]_i_4 
       (.I0(DATA_COUNT_OUT[5]),
        .O(\data_word_cnt[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \data_word_cnt[7]_i_5 
       (.I0(DATA_COUNT_OUT[4]),
        .O(\data_word_cnt[7]_i_5_n_0 ));
  FDRE \data_word_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[3]_i_1_n_7 ),
        .Q(DATA_COUNT_OUT[0]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[11]_i_1_n_5 ),
        .Q(DATA_COUNT_OUT[10]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[11]_i_1_n_4 ),
        .Q(DATA_COUNT_OUT[11]),
        .R(block_word_cnt0));
  CARRY4 \data_word_cnt_reg[11]_i_1 
       (.CI(\data_word_cnt_reg[7]_i_1_n_0 ),
        .CO({\data_word_cnt_reg[11]_i_1_n_0 ,\data_word_cnt_reg[11]_i_1_n_1 ,\data_word_cnt_reg[11]_i_1_n_2 ,\data_word_cnt_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\data_word_cnt_reg[11]_i_1_n_4 ,\data_word_cnt_reg[11]_i_1_n_5 ,\data_word_cnt_reg[11]_i_1_n_6 ,\data_word_cnt_reg[11]_i_1_n_7 }),
        .S({\data_word_cnt[11]_i_2_n_0 ,\data_word_cnt[11]_i_3_n_0 ,\data_word_cnt[11]_i_4_n_0 ,\data_word_cnt[11]_i_5_n_0 }));
  FDRE \data_word_cnt_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[15]_i_1_n_7 ),
        .Q(DATA_COUNT_OUT[12]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[15]_i_1_n_6 ),
        .Q(DATA_COUNT_OUT[13]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[15]_i_1_n_5 ),
        .Q(DATA_COUNT_OUT[14]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[15]_i_1_n_4 ),
        .Q(DATA_COUNT_OUT[15]),
        .R(block_word_cnt0));
  CARRY4 \data_word_cnt_reg[15]_i_1 
       (.CI(\data_word_cnt_reg[11]_i_1_n_0 ),
        .CO({\data_word_cnt_reg[15]_i_1_n_0 ,\data_word_cnt_reg[15]_i_1_n_1 ,\data_word_cnt_reg[15]_i_1_n_2 ,\data_word_cnt_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\data_word_cnt_reg[15]_i_1_n_4 ,\data_word_cnt_reg[15]_i_1_n_5 ,\data_word_cnt_reg[15]_i_1_n_6 ,\data_word_cnt_reg[15]_i_1_n_7 }),
        .S({\data_word_cnt[15]_i_2_n_0 ,\data_word_cnt[15]_i_3_n_0 ,\data_word_cnt[15]_i_4_n_0 ,\data_word_cnt[15]_i_5_n_0 }));
  FDRE \data_word_cnt_reg[16] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[19]_i_1_n_7 ),
        .Q(DATA_COUNT_OUT[16]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[17] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[19]_i_1_n_6 ),
        .Q(DATA_COUNT_OUT[17]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[18] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[19]_i_1_n_5 ),
        .Q(DATA_COUNT_OUT[18]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[19] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[19]_i_1_n_4 ),
        .Q(DATA_COUNT_OUT[19]),
        .R(block_word_cnt0));
  CARRY4 \data_word_cnt_reg[19]_i_1 
       (.CI(\data_word_cnt_reg[15]_i_1_n_0 ),
        .CO({\data_word_cnt_reg[19]_i_1_n_0 ,\data_word_cnt_reg[19]_i_1_n_1 ,\data_word_cnt_reg[19]_i_1_n_2 ,\data_word_cnt_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\data_word_cnt_reg[19]_i_1_n_4 ,\data_word_cnt_reg[19]_i_1_n_5 ,\data_word_cnt_reg[19]_i_1_n_6 ,\data_word_cnt_reg[19]_i_1_n_7 }),
        .S({\data_word_cnt[19]_i_2_n_0 ,\data_word_cnt[19]_i_3_n_0 ,\data_word_cnt[19]_i_4_n_0 ,\data_word_cnt[19]_i_5_n_0 }));
  FDRE \data_word_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[3]_i_1_n_6 ),
        .Q(DATA_COUNT_OUT[1]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[20] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[23]_i_1_n_7 ),
        .Q(DATA_COUNT_OUT[20]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[21] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[23]_i_1_n_6 ),
        .Q(DATA_COUNT_OUT[21]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[22] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[23]_i_1_n_5 ),
        .Q(DATA_COUNT_OUT[22]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[23] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[23]_i_1_n_4 ),
        .Q(DATA_COUNT_OUT[23]),
        .R(block_word_cnt0));
  CARRY4 \data_word_cnt_reg[23]_i_1 
       (.CI(\data_word_cnt_reg[19]_i_1_n_0 ),
        .CO({\data_word_cnt_reg[23]_i_1_n_0 ,\data_word_cnt_reg[23]_i_1_n_1 ,\data_word_cnt_reg[23]_i_1_n_2 ,\data_word_cnt_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\data_word_cnt_reg[23]_i_1_n_4 ,\data_word_cnt_reg[23]_i_1_n_5 ,\data_word_cnt_reg[23]_i_1_n_6 ,\data_word_cnt_reg[23]_i_1_n_7 }),
        .S({\data_word_cnt[23]_i_2_n_0 ,\data_word_cnt[23]_i_3_n_0 ,\data_word_cnt[23]_i_4_n_0 ,\data_word_cnt[23]_i_5_n_0 }));
  FDRE \data_word_cnt_reg[24] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[27]_i_1_n_7 ),
        .Q(DATA_COUNT_OUT[24]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[25] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[27]_i_1_n_6 ),
        .Q(DATA_COUNT_OUT[25]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[26] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[27]_i_1_n_5 ),
        .Q(DATA_COUNT_OUT[26]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[27] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[27]_i_1_n_4 ),
        .Q(DATA_COUNT_OUT[27]),
        .R(block_word_cnt0));
  CARRY4 \data_word_cnt_reg[27]_i_1 
       (.CI(\data_word_cnt_reg[23]_i_1_n_0 ),
        .CO({\data_word_cnt_reg[27]_i_1_n_0 ,\data_word_cnt_reg[27]_i_1_n_1 ,\data_word_cnt_reg[27]_i_1_n_2 ,\data_word_cnt_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\data_word_cnt_reg[27]_i_1_n_4 ,\data_word_cnt_reg[27]_i_1_n_5 ,\data_word_cnt_reg[27]_i_1_n_6 ,\data_word_cnt_reg[27]_i_1_n_7 }),
        .S({\data_word_cnt[27]_i_2_n_0 ,\data_word_cnt[27]_i_3_n_0 ,\data_word_cnt[27]_i_4_n_0 ,\data_word_cnt[27]_i_5_n_0 }));
  FDRE \data_word_cnt_reg[28] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[31]_i_3_n_7 ),
        .Q(DATA_COUNT_OUT[28]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[29] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[31]_i_3_n_6 ),
        .Q(DATA_COUNT_OUT[29]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[3]_i_1_n_5 ),
        .Q(DATA_COUNT_OUT[2]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[30] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[31]_i_3_n_5 ),
        .Q(DATA_COUNT_OUT[30]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[31] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[31]_i_3_n_4 ),
        .Q(DATA_COUNT_OUT[31]),
        .R(block_word_cnt0));
  CARRY4 \data_word_cnt_reg[31]_i_3 
       (.CI(\data_word_cnt_reg[27]_i_1_n_0 ),
        .CO({\NLW_data_word_cnt_reg[31]_i_3_CO_UNCONNECTED [3],\data_word_cnt_reg[31]_i_3_n_1 ,\data_word_cnt_reg[31]_i_3_n_2 ,\data_word_cnt_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\data_word_cnt_reg[31]_i_3_n_4 ,\data_word_cnt_reg[31]_i_3_n_5 ,\data_word_cnt_reg[31]_i_3_n_6 ,\data_word_cnt_reg[31]_i_3_n_7 }),
        .S({\data_word_cnt[31]_i_8_n_0 ,\data_word_cnt[31]_i_9_n_0 ,\data_word_cnt[31]_i_10_n_0 ,\data_word_cnt[31]_i_11_n_0 }));
  FDRE \data_word_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[3]_i_1_n_4 ),
        .Q(DATA_COUNT_OUT[3]),
        .R(block_word_cnt0));
  CARRY4 \data_word_cnt_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\data_word_cnt_reg[3]_i_1_n_0 ,\data_word_cnt_reg[3]_i_1_n_1 ,\data_word_cnt_reg[3]_i_1_n_2 ,\data_word_cnt_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\data_word_cnt_reg[3]_i_1_n_4 ,\data_word_cnt_reg[3]_i_1_n_5 ,\data_word_cnt_reg[3]_i_1_n_6 ,\data_word_cnt_reg[3]_i_1_n_7 }),
        .S({\data_word_cnt[3]_i_2_n_0 ,\data_word_cnt[3]_i_3_n_0 ,\data_word_cnt[3]_i_4_n_0 ,\data_word_cnt[3]_i_5_n_0 }));
  FDRE \data_word_cnt_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[7]_i_1_n_7 ),
        .Q(DATA_COUNT_OUT[4]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[7]_i_1_n_6 ),
        .Q(DATA_COUNT_OUT[5]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[7]_i_1_n_5 ),
        .Q(DATA_COUNT_OUT[6]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[7]_i_1_n_4 ),
        .Q(DATA_COUNT_OUT[7]),
        .R(block_word_cnt0));
  CARRY4 \data_word_cnt_reg[7]_i_1 
       (.CI(\data_word_cnt_reg[3]_i_1_n_0 ),
        .CO({\data_word_cnt_reg[7]_i_1_n_0 ,\data_word_cnt_reg[7]_i_1_n_1 ,\data_word_cnt_reg[7]_i_1_n_2 ,\data_word_cnt_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\data_word_cnt_reg[7]_i_1_n_4 ,\data_word_cnt_reg[7]_i_1_n_5 ,\data_word_cnt_reg[7]_i_1_n_6 ,\data_word_cnt_reg[7]_i_1_n_7 }),
        .S({\data_word_cnt[7]_i_2_n_0 ,\data_word_cnt[7]_i_3_n_0 ,\data_word_cnt[7]_i_4_n_0 ,\data_word_cnt[7]_i_5_n_0 }));
  FDRE \data_word_cnt_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[11]_i_1_n_7 ),
        .Q(DATA_COUNT_OUT[8]),
        .R(block_word_cnt0));
  FDRE \data_word_cnt_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_cnt),
        .D(\data_word_cnt_reg[11]_i_1_n_6 ),
        .Q(DATA_COUNT_OUT[9]),
        .R(block_word_cnt0));
  LUT6 #(
    .INIT(64'h454545FF45454500)) 
    data_word_valid_i_1
       (.I0(\block_error_reg[0]_i_2_n_0 ),
        .I1(data_word_valid_i_2_n_0),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(data_word_valid_i_3_n_0),
        .I4(data_word_valid_i_4_n_0),
        .I5(data_word_valid),
        .O(data_word_valid_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    data_word_valid_i_2
       (.I0(\block_word_cnt_reg_n_0_[5] ),
        .I1(\block_word_cnt_reg_n_0_[7] ),
        .I2(\block_word_cnt_reg_n_0_[6] ),
        .I3(\block_word_cnt_reg_n_0_[3] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .I5(\block_word_cnt_reg_n_0_[4] ),
        .O(data_word_valid_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFCF0FF8)) 
    data_word_valid_i_3
       (.I0(\block_error_reg[1]_i_3_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .I5(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .O(data_word_valid_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h01110010)) 
    data_word_valid_i_4
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(rx_fifo_valid_i_2_n_0),
        .I4(encoder_rst_i_2_n_0),
        .O(data_word_valid_i_4_n_0));
  FDRE data_word_valid_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(data_word_valid_i_1_n_0),
        .Q(data_word_valid),
        .R(block_word_cnt0));
  LUT6 #(
    .INIT(64'h5F7FFF7F50400040)) 
    encoder_rst_i_1
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(encoder_rst_i_2_n_0),
        .I2(\block_error_reg[0]_i_2_n_0 ),
        .I3(encoder_rst_i_3_n_0),
        .I4(\block_error_reg[1]_i_3_n_0 ),
        .I5(encoder_rst_reg_n_0),
        .O(encoder_rst_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    encoder_rst_i_2
       (.I0(\block_error_reg[1]_i_5_n_0 ),
        .I1(\block_error_reg[1]_i_6_n_0 ),
        .I2(rx_data_r_track[14]),
        .I3(rx_data_r_track[12]),
        .I4(encoder_rst_i_4_n_0),
        .I5(encoder_rst_i_5_n_0),
        .O(encoder_rst_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    encoder_rst_i_3
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .O(encoder_rst_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    encoder_rst_i_4
       (.I0(rx_data_r_track[11]),
        .I1(rx_data_r_track[10]),
        .I2(rx_data_r_track[6]),
        .I3(rx_data_r_track[8]),
        .O(encoder_rst_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    encoder_rst_i_5
       (.I0(rx_data_r_track[2]),
        .I1(rx_data_r_track[3]),
        .I2(rx_data_r_track[1]),
        .I3(rx_data_r_track[0]),
        .O(encoder_rst_i_5_n_0));
  FDSE encoder_rst_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(encoder_rst_i_1_n_0),
        .Q(encoder_rst_reg_n_0),
        .S(block_word_cnt0));
  LUT5 #(
    .INIT(32'h00080000)) 
    \hor_correct_mask[15]_i_1 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .O(\hor_correct_mask[15]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[0]),
        .Q(hor_correct_mask[0]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[0]_i_1 
       (.I0(hor_correct_mask[0]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[1] ),
        .O(\hor_correct_mask_reg[0]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[10]),
        .Q(hor_correct_mask[10]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[10]_i_1 
       (.I0(hor_correct_mask[10]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[11] ),
        .O(\hor_correct_mask_reg[10]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[11]),
        .Q(hor_correct_mask[11]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[11]_i_1 
       (.I0(hor_correct_mask[11]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[12] ),
        .O(\hor_correct_mask_reg[11]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[12]),
        .Q(hor_correct_mask[12]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[12]_i_1 
       (.I0(hor_correct_mask[12]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[13] ),
        .O(\hor_correct_mask_reg[12]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[13]),
        .Q(hor_correct_mask[13]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[13]_i_1 
       (.I0(hor_correct_mask[13]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[14] ),
        .O(\hor_correct_mask_reg[13]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[14]),
        .Q(hor_correct_mask[14]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[14]_i_1 
       (.I0(hor_correct_mask[14]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[15] ),
        .O(\hor_correct_mask_reg[14]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[15]),
        .Q(hor_correct_mask[15]),
        .R(block_word_cnt0));
  LUT2 #(
    .INIT(4'hE)) 
    \hor_correct_mask_reg[15]_i_1 
       (.I0(correct_mask_valid),
        .I1(rx_fifo_out_reg_en),
        .O(\hor_correct_mask_reg[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \hor_correct_mask_reg[15]_i_2 
       (.I0(correct_mask_valid),
        .I1(hor_correct_mask[15]),
        .O(\hor_correct_mask_reg[15]_i_2_n_0 ));
  FDRE \hor_correct_mask_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[1]),
        .Q(hor_correct_mask[1]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[1]_i_1 
       (.I0(hor_correct_mask[1]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[2] ),
        .O(\hor_correct_mask_reg[1]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[2]),
        .Q(hor_correct_mask[2]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[2]_i_1 
       (.I0(hor_correct_mask[2]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[3] ),
        .O(\hor_correct_mask_reg[2]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[3]),
        .Q(hor_correct_mask[3]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[3]_i_1 
       (.I0(hor_correct_mask[3]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[4] ),
        .O(\hor_correct_mask_reg[3]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[4]),
        .Q(hor_correct_mask[4]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[4]_i_1 
       (.I0(hor_correct_mask[4]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[5] ),
        .O(\hor_correct_mask_reg[4]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[5]),
        .Q(hor_correct_mask[5]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[5]_i_1 
       (.I0(hor_correct_mask[5]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[6] ),
        .O(\hor_correct_mask_reg[5]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[6]),
        .Q(hor_correct_mask[6]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[6]_i_1 
       (.I0(hor_correct_mask[6]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[7] ),
        .O(\hor_correct_mask_reg[6]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[7]),
        .Q(hor_correct_mask[7]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[7]_i_1 
       (.I0(hor_correct_mask[7]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[8] ),
        .O(\hor_correct_mask_reg[7]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[8]),
        .Q(hor_correct_mask[8]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[8]_i_1 
       (.I0(hor_correct_mask[8]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[9] ),
        .O(\hor_correct_mask_reg[8]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask[15]_i_1_n_0 ),
        .D(hor_correct_mask0[9]),
        .Q(hor_correct_mask[9]),
        .R(block_word_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hor_correct_mask_reg[9]_i_1 
       (.I0(hor_correct_mask[9]),
        .I1(correct_mask_valid),
        .I2(\hor_correct_mask_reg_reg_n_0_[10] ),
        .O(\hor_correct_mask_reg[9]_i_1_n_0 ));
  FDRE \hor_correct_mask_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[0]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[0] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[10]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[10] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[11]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[11] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[12]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[12] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[13]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[13] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[14]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[14] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[15]_i_2_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[15] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[1]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[1] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[2]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[2] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[3]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[3] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[4]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[4] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[5]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[5] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[6]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[6] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[7]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[7] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[8]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[8] ),
        .R(block_word_cnt0));
  FDRE \hor_correct_mask_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\hor_correct_mask_reg[15]_i_1_n_0 ),
        .D(\hor_correct_mask_reg[9]_i_1_n_0 ),
        .Q(\hor_correct_mask_reg_reg_n_0_[9] ),
        .R(block_word_cnt0));
  CARRY4 link_ctr0_carry
       (.CI(1'b0),
        .CO({link_ctr0_carry_n_0,link_ctr0_carry_n_1,link_ctr0_carry_n_2,link_ctr0_carry_n_3}),
        .CYINIT(link_ctr_reg__0[0]),
        .DI({link_ctr_reg__0[3:2],1'b1,1'b0}),
        .O(data[4:1]),
        .S({link_ctr0_carry_i_1_n_0,link_ctr0_carry_i_2_n_0,link_ctr0_carry_i_3_n_0,link_ctr0_carry_i_4_n_0}));
  CARRY4 link_ctr0_carry__0
       (.CI(link_ctr0_carry_n_0),
        .CO({NLW_link_ctr0_carry__0_CO_UNCONNECTED[3:1],link_ctr0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,link_ctr_reg__0[4]}),
        .O({NLW_link_ctr0_carry__0_O_UNCONNECTED[3:2],data[6:5]}),
        .S({1'b0,1'b0,link_ctr0_carry__0_i_1_n_0,link_ctr0_carry__0_i_2_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    link_ctr0_carry__0_i_1
       (.I0(link_ctr_reg__0[5]),
        .I1(link_ctr_reg__0[6]),
        .O(link_ctr0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    link_ctr0_carry__0_i_2
       (.I0(link_ctr_reg__0[4]),
        .I1(link_ctr_reg__0[5]),
        .O(link_ctr0_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    link_ctr0_carry_i_1
       (.I0(link_ctr_reg__0[3]),
        .I1(link_ctr_reg__0[4]),
        .O(link_ctr0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    link_ctr0_carry_i_2
       (.I0(link_ctr_reg__0[2]),
        .I1(link_ctr_reg__0[3]),
        .O(link_ctr0_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    link_ctr0_carry_i_3
       (.I0(link_ctr_reg__0[2]),
        .O(link_ctr0_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    link_ctr0_carry_i_4
       (.I0(link_ctr_reg__0[1]),
        .O(link_ctr0_carry_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \link_ctr[0]_i_1 
       (.I0(link_ctr_reg__0[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h8BB8)) 
    \link_ctr[1]_i_1 
       (.I0(data[1]),
        .I1(gt0_track_data_i),
        .I2(link_ctr_reg__0[0]),
        .I3(link_ctr_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h8BB8B8B8)) 
    \link_ctr[2]_i_1 
       (.I0(data[2]),
        .I1(gt0_track_data_i),
        .I2(link_ctr_reg__0[2]),
        .I3(link_ctr_reg__0[0]),
        .I4(link_ctr_reg__0[1]),
        .O(p_0_in[2]));
  LUT6 #(
    .INIT(64'h8BB8B8B8B8B8B8B8)) 
    \link_ctr[3]_i_1 
       (.I0(data[3]),
        .I1(gt0_track_data_i),
        .I2(link_ctr_reg__0[3]),
        .I3(link_ctr_reg__0[2]),
        .I4(link_ctr_reg__0[0]),
        .I5(link_ctr_reg__0[1]),
        .O(p_0_in[3]));
  LUT5 #(
    .INIT(32'hB8B88BB8)) 
    \link_ctr[4]_i_1 
       (.I0(data[4]),
        .I1(gt0_track_data_i),
        .I2(link_ctr_reg__0[4]),
        .I3(link_ctr_reg__0[3]),
        .I4(\link_ctr[5]_i_2_n_0 ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'hB88BB8B8B8B8B8B8)) 
    \link_ctr[5]_i_1 
       (.I0(data[5]),
        .I1(gt0_track_data_i),
        .I2(link_ctr_reg__0[5]),
        .I3(\link_ctr[5]_i_2_n_0 ),
        .I4(link_ctr_reg__0[3]),
        .I5(link_ctr_reg__0[4]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \link_ctr[5]_i_2 
       (.I0(link_ctr_reg__0[1]),
        .I1(link_ctr_reg__0[0]),
        .I2(link_ctr_reg__0[2]),
        .O(\link_ctr[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000008AAAAAAAA)) 
    \link_ctr[6]_i_1 
       (.I0(track_data_r),
        .I1(\link_ctr[6]_i_3_n_0 ),
        .I2(link_ctr_reg__0[4]),
        .I3(link_ctr_reg__0[3]),
        .I4(link_ctr_reg__0[5]),
        .I5(link_ctr_reg__0[6]),
        .O(link_ctr));
  LUT5 #(
    .INIT(32'h8BB8B8B8)) 
    \link_ctr[6]_i_2 
       (.I0(data[6]),
        .I1(gt0_track_data_i),
        .I2(link_ctr_reg__0[6]),
        .I3(link_ctr_reg__0[5]),
        .I4(\link_ctr[6]_i_4_n_0 ),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h07)) 
    \link_ctr[6]_i_3 
       (.I0(link_ctr_reg__0[1]),
        .I1(link_ctr_reg__0[0]),
        .I2(link_ctr_reg__0[2]),
        .O(\link_ctr[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \link_ctr[6]_i_4 
       (.I0(link_ctr_reg__0[4]),
        .I1(link_ctr_reg__0[3]),
        .I2(link_ctr_reg__0[1]),
        .I3(link_ctr_reg__0[0]),
        .I4(link_ctr_reg__0[2]),
        .O(\link_ctr[6]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[0]),
        .Q(link_ctr_reg__0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[1]),
        .Q(link_ctr_reg__0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[2]),
        .Q(link_ctr_reg__0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[3]),
        .Q(link_ctr_reg__0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[4]),
        .Q(link_ctr_reg__0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[5]),
        .Q(link_ctr_reg__0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \link_ctr_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(link_ctr),
        .D(p_0_in[6]),
        .Q(link_ctr_reg__0[6]),
        .R(1'b0));
  gtx3g_bert_0_parity_encoder_45 parity_encoder_inst_2
       (.D(hor_correct_mask0),
        .GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(rx_fifo_in_reg),
        .SR(encoder_rst_reg_n_0),
        .data_word_valid(data_word_valid),
        .rx_data_r_track(rx_data_r_track),
        .\ver_correct_mask_reg[15] (ver_correct_mask0));
  LUT6 #(
    .INIT(64'hAAABBBABAAA888A8)) 
    pattern_check_en_i_1
       (.I0(pattern_check_en_i_2_n_0),
        .I1(pattern_check_en_i_3_n_0),
        .I2(pattern_check_en_i_4_n_0),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .I5(pattern_check_en),
        .O(pattern_check_en_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'hA8AAAAAA)) 
    pattern_check_en_i_2
       (.I0(rx_fifo_valid),
        .I1(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .O(pattern_check_en_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'hEBFE)) 
    pattern_check_en_i_3
       (.I0(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .O(pattern_check_en_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h2)) 
    pattern_check_en_i_4
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(rx_fifo_valid_i_2_n_0),
        .O(pattern_check_en_i_4_n_0));
  FDRE pattern_check_en_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_check_en_i_1_n_0),
        .Q(pattern_check_en),
        .R(block_word_cnt0));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[11]_i_2 
       (.I0(PATTERN_ERROR_COUNT_OUT[11]),
        .O(\pattern_error_cnt[11]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[11]_i_3 
       (.I0(PATTERN_ERROR_COUNT_OUT[10]),
        .O(\pattern_error_cnt[11]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[11]_i_4 
       (.I0(PATTERN_ERROR_COUNT_OUT[9]),
        .O(\pattern_error_cnt[11]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[11]_i_5 
       (.I0(PATTERN_ERROR_COUNT_OUT[8]),
        .O(\pattern_error_cnt[11]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[15]_i_2 
       (.I0(PATTERN_ERROR_COUNT_OUT[15]),
        .O(\pattern_error_cnt[15]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[15]_i_3 
       (.I0(PATTERN_ERROR_COUNT_OUT[14]),
        .O(\pattern_error_cnt[15]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[15]_i_4 
       (.I0(PATTERN_ERROR_COUNT_OUT[13]),
        .O(\pattern_error_cnt[15]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[15]_i_5 
       (.I0(PATTERN_ERROR_COUNT_OUT[12]),
        .O(\pattern_error_cnt[15]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[19]_i_2 
       (.I0(PATTERN_ERROR_COUNT_OUT[19]),
        .O(\pattern_error_cnt[19]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[19]_i_3 
       (.I0(PATTERN_ERROR_COUNT_OUT[18]),
        .O(\pattern_error_cnt[19]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[19]_i_4 
       (.I0(PATTERN_ERROR_COUNT_OUT[17]),
        .O(\pattern_error_cnt[19]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[19]_i_5 
       (.I0(PATTERN_ERROR_COUNT_OUT[16]),
        .O(\pattern_error_cnt[19]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[23]_i_2 
       (.I0(PATTERN_ERROR_COUNT_OUT[23]),
        .O(\pattern_error_cnt[23]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[23]_i_3 
       (.I0(PATTERN_ERROR_COUNT_OUT[22]),
        .O(\pattern_error_cnt[23]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[23]_i_4 
       (.I0(PATTERN_ERROR_COUNT_OUT[21]),
        .O(\pattern_error_cnt[23]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[23]_i_5 
       (.I0(PATTERN_ERROR_COUNT_OUT[20]),
        .O(\pattern_error_cnt[23]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[27]_i_2 
       (.I0(PATTERN_ERROR_COUNT_OUT[27]),
        .O(\pattern_error_cnt[27]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[27]_i_3 
       (.I0(PATTERN_ERROR_COUNT_OUT[26]),
        .O(\pattern_error_cnt[27]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[27]_i_4 
       (.I0(PATTERN_ERROR_COUNT_OUT[25]),
        .O(\pattern_error_cnt[27]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[27]_i_5 
       (.I0(PATTERN_ERROR_COUNT_OUT[24]),
        .O(\pattern_error_cnt[27]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \pattern_error_cnt[31]_i_1 
       (.I0(pattern_error_reg0_carry__0_n_2),
        .I1(pattern_check_en),
        .I2(TEST_OVER_OUT),
        .O(pattern_error_cnt));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[31]_i_3 
       (.I0(PATTERN_ERROR_COUNT_OUT[31]),
        .O(\pattern_error_cnt[31]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[31]_i_4 
       (.I0(PATTERN_ERROR_COUNT_OUT[30]),
        .O(\pattern_error_cnt[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[31]_i_5 
       (.I0(PATTERN_ERROR_COUNT_OUT[29]),
        .O(\pattern_error_cnt[31]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[31]_i_6 
       (.I0(PATTERN_ERROR_COUNT_OUT[28]),
        .O(\pattern_error_cnt[31]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[3]_i_2 
       (.I0(PATTERN_ERROR_COUNT_OUT[3]),
        .O(\pattern_error_cnt[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[3]_i_3 
       (.I0(PATTERN_ERROR_COUNT_OUT[2]),
        .O(\pattern_error_cnt[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[3]_i_4 
       (.I0(PATTERN_ERROR_COUNT_OUT[1]),
        .O(\pattern_error_cnt[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \pattern_error_cnt[3]_i_5 
       (.I0(PATTERN_ERROR_COUNT_OUT[0]),
        .O(\pattern_error_cnt[3]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[7]_i_2 
       (.I0(PATTERN_ERROR_COUNT_OUT[7]),
        .O(\pattern_error_cnt[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[7]_i_3 
       (.I0(PATTERN_ERROR_COUNT_OUT[6]),
        .O(\pattern_error_cnt[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[7]_i_4 
       (.I0(PATTERN_ERROR_COUNT_OUT[5]),
        .O(\pattern_error_cnt[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pattern_error_cnt[7]_i_5 
       (.I0(PATTERN_ERROR_COUNT_OUT[4]),
        .O(\pattern_error_cnt[7]_i_5_n_0 ));
  FDRE \pattern_error_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[3]_i_1_n_7 ),
        .Q(PATTERN_ERROR_COUNT_OUT[0]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[11]_i_1_n_5 ),
        .Q(PATTERN_ERROR_COUNT_OUT[10]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[11]_i_1_n_4 ),
        .Q(PATTERN_ERROR_COUNT_OUT[11]),
        .R(block_word_cnt0));
  CARRY4 \pattern_error_cnt_reg[11]_i_1 
       (.CI(\pattern_error_cnt_reg[7]_i_1_n_0 ),
        .CO({\pattern_error_cnt_reg[11]_i_1_n_0 ,\pattern_error_cnt_reg[11]_i_1_n_1 ,\pattern_error_cnt_reg[11]_i_1_n_2 ,\pattern_error_cnt_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pattern_error_cnt_reg[11]_i_1_n_4 ,\pattern_error_cnt_reg[11]_i_1_n_5 ,\pattern_error_cnt_reg[11]_i_1_n_6 ,\pattern_error_cnt_reg[11]_i_1_n_7 }),
        .S({\pattern_error_cnt[11]_i_2_n_0 ,\pattern_error_cnt[11]_i_3_n_0 ,\pattern_error_cnt[11]_i_4_n_0 ,\pattern_error_cnt[11]_i_5_n_0 }));
  FDRE \pattern_error_cnt_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[15]_i_1_n_7 ),
        .Q(PATTERN_ERROR_COUNT_OUT[12]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[15]_i_1_n_6 ),
        .Q(PATTERN_ERROR_COUNT_OUT[13]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[15]_i_1_n_5 ),
        .Q(PATTERN_ERROR_COUNT_OUT[14]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[15]_i_1_n_4 ),
        .Q(PATTERN_ERROR_COUNT_OUT[15]),
        .R(block_word_cnt0));
  CARRY4 \pattern_error_cnt_reg[15]_i_1 
       (.CI(\pattern_error_cnt_reg[11]_i_1_n_0 ),
        .CO({\pattern_error_cnt_reg[15]_i_1_n_0 ,\pattern_error_cnt_reg[15]_i_1_n_1 ,\pattern_error_cnt_reg[15]_i_1_n_2 ,\pattern_error_cnt_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pattern_error_cnt_reg[15]_i_1_n_4 ,\pattern_error_cnt_reg[15]_i_1_n_5 ,\pattern_error_cnt_reg[15]_i_1_n_6 ,\pattern_error_cnt_reg[15]_i_1_n_7 }),
        .S({\pattern_error_cnt[15]_i_2_n_0 ,\pattern_error_cnt[15]_i_3_n_0 ,\pattern_error_cnt[15]_i_4_n_0 ,\pattern_error_cnt[15]_i_5_n_0 }));
  FDRE \pattern_error_cnt_reg[16] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[19]_i_1_n_7 ),
        .Q(PATTERN_ERROR_COUNT_OUT[16]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[17] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[19]_i_1_n_6 ),
        .Q(PATTERN_ERROR_COUNT_OUT[17]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[18] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[19]_i_1_n_5 ),
        .Q(PATTERN_ERROR_COUNT_OUT[18]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[19] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[19]_i_1_n_4 ),
        .Q(PATTERN_ERROR_COUNT_OUT[19]),
        .R(block_word_cnt0));
  CARRY4 \pattern_error_cnt_reg[19]_i_1 
       (.CI(\pattern_error_cnt_reg[15]_i_1_n_0 ),
        .CO({\pattern_error_cnt_reg[19]_i_1_n_0 ,\pattern_error_cnt_reg[19]_i_1_n_1 ,\pattern_error_cnt_reg[19]_i_1_n_2 ,\pattern_error_cnt_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pattern_error_cnt_reg[19]_i_1_n_4 ,\pattern_error_cnt_reg[19]_i_1_n_5 ,\pattern_error_cnt_reg[19]_i_1_n_6 ,\pattern_error_cnt_reg[19]_i_1_n_7 }),
        .S({\pattern_error_cnt[19]_i_2_n_0 ,\pattern_error_cnt[19]_i_3_n_0 ,\pattern_error_cnt[19]_i_4_n_0 ,\pattern_error_cnt[19]_i_5_n_0 }));
  FDRE \pattern_error_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[3]_i_1_n_6 ),
        .Q(PATTERN_ERROR_COUNT_OUT[1]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[20] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[23]_i_1_n_7 ),
        .Q(PATTERN_ERROR_COUNT_OUT[20]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[21] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[23]_i_1_n_6 ),
        .Q(PATTERN_ERROR_COUNT_OUT[21]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[22] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[23]_i_1_n_5 ),
        .Q(PATTERN_ERROR_COUNT_OUT[22]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[23] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[23]_i_1_n_4 ),
        .Q(PATTERN_ERROR_COUNT_OUT[23]),
        .R(block_word_cnt0));
  CARRY4 \pattern_error_cnt_reg[23]_i_1 
       (.CI(\pattern_error_cnt_reg[19]_i_1_n_0 ),
        .CO({\pattern_error_cnt_reg[23]_i_1_n_0 ,\pattern_error_cnt_reg[23]_i_1_n_1 ,\pattern_error_cnt_reg[23]_i_1_n_2 ,\pattern_error_cnt_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pattern_error_cnt_reg[23]_i_1_n_4 ,\pattern_error_cnt_reg[23]_i_1_n_5 ,\pattern_error_cnt_reg[23]_i_1_n_6 ,\pattern_error_cnt_reg[23]_i_1_n_7 }),
        .S({\pattern_error_cnt[23]_i_2_n_0 ,\pattern_error_cnt[23]_i_3_n_0 ,\pattern_error_cnt[23]_i_4_n_0 ,\pattern_error_cnt[23]_i_5_n_0 }));
  FDRE \pattern_error_cnt_reg[24] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[27]_i_1_n_7 ),
        .Q(PATTERN_ERROR_COUNT_OUT[24]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[25] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[27]_i_1_n_6 ),
        .Q(PATTERN_ERROR_COUNT_OUT[25]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[26] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[27]_i_1_n_5 ),
        .Q(PATTERN_ERROR_COUNT_OUT[26]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[27] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[27]_i_1_n_4 ),
        .Q(PATTERN_ERROR_COUNT_OUT[27]),
        .R(block_word_cnt0));
  CARRY4 \pattern_error_cnt_reg[27]_i_1 
       (.CI(\pattern_error_cnt_reg[23]_i_1_n_0 ),
        .CO({\pattern_error_cnt_reg[27]_i_1_n_0 ,\pattern_error_cnt_reg[27]_i_1_n_1 ,\pattern_error_cnt_reg[27]_i_1_n_2 ,\pattern_error_cnt_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pattern_error_cnt_reg[27]_i_1_n_4 ,\pattern_error_cnt_reg[27]_i_1_n_5 ,\pattern_error_cnt_reg[27]_i_1_n_6 ,\pattern_error_cnt_reg[27]_i_1_n_7 }),
        .S({\pattern_error_cnt[27]_i_2_n_0 ,\pattern_error_cnt[27]_i_3_n_0 ,\pattern_error_cnt[27]_i_4_n_0 ,\pattern_error_cnt[27]_i_5_n_0 }));
  FDRE \pattern_error_cnt_reg[28] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[31]_i_2_n_7 ),
        .Q(PATTERN_ERROR_COUNT_OUT[28]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[29] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[31]_i_2_n_6 ),
        .Q(PATTERN_ERROR_COUNT_OUT[29]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[3]_i_1_n_5 ),
        .Q(PATTERN_ERROR_COUNT_OUT[2]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[30] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[31]_i_2_n_5 ),
        .Q(PATTERN_ERROR_COUNT_OUT[30]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[31] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[31]_i_2_n_4 ),
        .Q(PATTERN_ERROR_COUNT_OUT[31]),
        .R(block_word_cnt0));
  CARRY4 \pattern_error_cnt_reg[31]_i_2 
       (.CI(\pattern_error_cnt_reg[27]_i_1_n_0 ),
        .CO({\NLW_pattern_error_cnt_reg[31]_i_2_CO_UNCONNECTED [3],\pattern_error_cnt_reg[31]_i_2_n_1 ,\pattern_error_cnt_reg[31]_i_2_n_2 ,\pattern_error_cnt_reg[31]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pattern_error_cnt_reg[31]_i_2_n_4 ,\pattern_error_cnt_reg[31]_i_2_n_5 ,\pattern_error_cnt_reg[31]_i_2_n_6 ,\pattern_error_cnt_reg[31]_i_2_n_7 }),
        .S({\pattern_error_cnt[31]_i_3_n_0 ,\pattern_error_cnt[31]_i_4_n_0 ,\pattern_error_cnt[31]_i_5_n_0 ,\pattern_error_cnt[31]_i_6_n_0 }));
  FDRE \pattern_error_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[3]_i_1_n_4 ),
        .Q(PATTERN_ERROR_COUNT_OUT[3]),
        .R(block_word_cnt0));
  CARRY4 \pattern_error_cnt_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\pattern_error_cnt_reg[3]_i_1_n_0 ,\pattern_error_cnt_reg[3]_i_1_n_1 ,\pattern_error_cnt_reg[3]_i_1_n_2 ,\pattern_error_cnt_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pattern_error_cnt_reg[3]_i_1_n_4 ,\pattern_error_cnt_reg[3]_i_1_n_5 ,\pattern_error_cnt_reg[3]_i_1_n_6 ,\pattern_error_cnt_reg[3]_i_1_n_7 }),
        .S({\pattern_error_cnt[3]_i_2_n_0 ,\pattern_error_cnt[3]_i_3_n_0 ,\pattern_error_cnt[3]_i_4_n_0 ,\pattern_error_cnt[3]_i_5_n_0 }));
  FDRE \pattern_error_cnt_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[7]_i_1_n_7 ),
        .Q(PATTERN_ERROR_COUNT_OUT[4]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[7]_i_1_n_6 ),
        .Q(PATTERN_ERROR_COUNT_OUT[5]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[7]_i_1_n_5 ),
        .Q(PATTERN_ERROR_COUNT_OUT[6]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[7]_i_1_n_4 ),
        .Q(PATTERN_ERROR_COUNT_OUT[7]),
        .R(block_word_cnt0));
  CARRY4 \pattern_error_cnt_reg[7]_i_1 
       (.CI(\pattern_error_cnt_reg[3]_i_1_n_0 ),
        .CO({\pattern_error_cnt_reg[7]_i_1_n_0 ,\pattern_error_cnt_reg[7]_i_1_n_1 ,\pattern_error_cnt_reg[7]_i_1_n_2 ,\pattern_error_cnt_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pattern_error_cnt_reg[7]_i_1_n_4 ,\pattern_error_cnt_reg[7]_i_1_n_5 ,\pattern_error_cnt_reg[7]_i_1_n_6 ,\pattern_error_cnt_reg[7]_i_1_n_7 }),
        .S({\pattern_error_cnt[7]_i_2_n_0 ,\pattern_error_cnt[7]_i_3_n_0 ,\pattern_error_cnt[7]_i_4_n_0 ,\pattern_error_cnt[7]_i_5_n_0 }));
  FDRE \pattern_error_cnt_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[11]_i_1_n_7 ),
        .Q(PATTERN_ERROR_COUNT_OUT[8]),
        .R(block_word_cnt0));
  FDRE \pattern_error_cnt_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_error_cnt),
        .D(\pattern_error_cnt_reg[11]_i_1_n_6 ),
        .Q(PATTERN_ERROR_COUNT_OUT[9]),
        .R(block_word_cnt0));
  CARRY4 pattern_error_reg0_carry
       (.CI(1'b0),
        .CO({pattern_error_reg0_carry_n_0,pattern_error_reg0_carry_n_1,pattern_error_reg0_carry_n_2,pattern_error_reg0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_pattern_error_reg0_carry_O_UNCONNECTED[3:0]),
        .S({pattern_gen_inst_2_n_0,pattern_gen_inst_2_n_1,pattern_gen_inst_2_n_2,pattern_gen_inst_2_n_3}));
  CARRY4 pattern_error_reg0_carry__0
       (.CI(pattern_error_reg0_carry_n_0),
        .CO({NLW_pattern_error_reg0_carry__0_CO_UNCONNECTED[3:2],pattern_error_reg0_carry__0_n_2,pattern_error_reg0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b1,1'b1}),
        .O(NLW_pattern_error_reg0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,pattern_gen_inst_2_n_4,pattern_gen_inst_2_n_5}));
  LUT3 #(
    .INIT(8'hB8)) 
    pattern_error_reg_i_1
       (.I0(pattern_error_reg0_carry__0_n_2),
        .I1(pattern_check_en),
        .I2(PATTERN_ERROR_OUT),
        .O(pattern_error_reg_i_1_n_0));
  FDRE pattern_error_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_error_reg_i_1_n_0),
        .Q(PATTERN_ERROR_OUT),
        .R(block_word_cnt0));
  gtx3g_bert_0_pattern_gen_46 pattern_gen_inst_2
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .PATTERN_MODE(PATTERN_MODE),
        .Q(rx_fifo_out_correct),
        .S({pattern_gen_inst_2_n_0,pattern_gen_inst_2_n_1,pattern_gen_inst_2_n_2,pattern_gen_inst_2_n_3}),
        .\pattern_error_cnt_reg[0] ({pattern_gen_inst_2_n_4,pattern_gen_inst_2_n_5}),
        .pattern_pause_reg_reg(pattern_pause_reg_reg_n_0),
        .rx_fifo_rst(rx_fifo_rst));
  LUT6 #(
    .INIT(64'hFFFFFFDF000000DF)) 
    pattern_pause_reg_i_1
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(rx_fifo_valid),
        .I3(pattern_pause_reg_i_2_n_0),
        .I4(pattern_pause_reg_i_3_n_0),
        .I5(pattern_pause_reg_reg_n_0),
        .O(pattern_pause_reg_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    pattern_pause_reg_i_2
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[6] ),
        .I3(\block_word_cnt_reg_n_0_[7] ),
        .I4(\block_word_cnt_reg_n_0_[5] ),
        .O(pattern_pause_reg_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0F5F0F5CFF0CFFF)) 
    pattern_pause_reg_i_3
       (.I0(\block_error_reg[1]_i_3_n_0 ),
        .I1(rx_fifo_valid_i_2_n_0),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .I4(encoder_rst_i_2_n_0),
        .I5(\block_word_cnt_reg_n_0_[0] ),
        .O(pattern_pause_reg_i_3_n_0));
  FDSE pattern_pause_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_pause_reg_i_1_n_0),
        .Q(pattern_pause_reg_reg_n_0),
        .S(block_word_cnt0));
  FDRE \rx_data_r2_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[0]),
        .Q(rx_data_r2[0]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[10]),
        .Q(rx_data_r2[10]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[11]),
        .Q(rx_data_r2[11]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[12]),
        .Q(rx_data_r2[12]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[13]),
        .Q(rx_data_r2[13]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[14]),
        .Q(rx_data_r2[14]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[15]),
        .Q(rx_data_r2[15]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[1]),
        .Q(rx_data_r2[1]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[2]),
        .Q(rx_data_r2[2]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[3]),
        .Q(rx_data_r2[3]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[4]),
        .Q(rx_data_r2[4]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[5]),
        .Q(rx_data_r2[5]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[6]),
        .Q(rx_data_r2[6]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[7]),
        .Q(rx_data_r2[7]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[8]),
        .Q(rx_data_r2[8]),
        .R(1'b0));
  FDRE \rx_data_r2_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r[9]),
        .Q(rx_data_r2[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[0]_i_1 
       (.I0(rx_data_r2[8]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[0]),
        .O(p_0_in1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[1]_i_1 
       (.I0(rx_data_r2[9]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[1]),
        .O(p_0_in1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[2]_i_1 
       (.I0(rx_data_r2[10]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[2]),
        .O(p_0_in1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[3]_i_1 
       (.I0(rx_data_r2[11]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[3]),
        .O(p_0_in1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[4]_i_1 
       (.I0(rx_data_r2[12]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[4]),
        .O(p_0_in1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[5]_i_1 
       (.I0(rx_data_r2[13]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[5]),
        .O(p_0_in1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[6]_i_1 
       (.I0(rx_data_r2[14]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[6]),
        .O(p_0_in1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r3[7]_i_1 
       (.I0(rx_data_r2[15]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[7]),
        .O(p_0_in1_in[7]));
  FDRE \rx_data_r3_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[0]),
        .Q(rx_data_r3[0]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[1]),
        .Q(rx_data_r3[1]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[2]),
        .Q(rx_data_r3[2]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[3]),
        .Q(rx_data_r3[3]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[4]),
        .Q(rx_data_r3[4]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[5]),
        .Q(rx_data_r3[5]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[6]),
        .Q(rx_data_r3[6]),
        .R(system_reset_r2));
  FDRE \rx_data_r3_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_0_in1_in[7]),
        .Q(rx_data_r3[7]),
        .R(system_reset_r2));
  FDRE rx_data_r3_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(1'b1),
        .Q(rx_data_r3_reg_r_n_0),
        .R(system_reset_r2));
  FDRE rx_data_r4_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r3_reg_r_n_0),
        .Q(rx_data_r4_reg_r_n_0),
        .R(system_reset_r2));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[0]_srl2___gt0_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[0]_srl2___gt0_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[0]),
        .Q(\rx_data_r5_reg[0]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[10]_srl3___gt0_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[10]_srl3___gt0_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[10]),
        .Q(\rx_data_r5_reg[10]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[10]_srl3___gt0_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[2]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[10]),
        .O(p_0_in1_in[10]));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[11]_srl3___gt0_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[11]_srl3___gt0_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[11]),
        .Q(\rx_data_r5_reg[11]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[11]_srl3___gt0_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[3]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[11]),
        .O(p_0_in1_in[11]));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[12]_srl3___gt0_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[12]_srl3___gt0_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[12]),
        .Q(\rx_data_r5_reg[12]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[12]_srl3___gt0_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[4]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[12]),
        .O(p_0_in1_in[12]));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[13]_srl3___gt0_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[13]_srl3___gt0_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[13]),
        .Q(\rx_data_r5_reg[13]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[13]_srl3___gt0_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[5]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[13]),
        .O(p_0_in1_in[13]));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[14]_srl3___gt0_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[14]_srl3___gt0_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[14]),
        .Q(\rx_data_r5_reg[14]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[14]_srl3___gt0_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[6]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[14]),
        .O(p_0_in1_in[14]));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[15]_srl3___gt0_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[15]_srl3___gt0_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[15]),
        .Q(\rx_data_r5_reg[15]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[15]_srl3___gt0_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[7]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[15]),
        .O(p_0_in1_in[15]));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[1]_srl2___gt0_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[1]_srl2___gt0_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[1]),
        .Q(\rx_data_r5_reg[1]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[2]_srl2___gt0_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[2]_srl2___gt0_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[2]),
        .Q(\rx_data_r5_reg[2]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[3]_srl2___gt0_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[3]_srl2___gt0_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[3]),
        .Q(\rx_data_r5_reg[3]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[4]_srl2___gt0_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[4]_srl2___gt0_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[4]),
        .Q(\rx_data_r5_reg[4]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[5]_srl2___gt0_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[5]_srl2___gt0_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[5]),
        .Q(\rx_data_r5_reg[5]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[6]_srl2___gt0_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[6]_srl2___gt0_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[6]),
        .Q(\rx_data_r5_reg[6]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[7]_srl2___gt0_frame_check_rx_data_r4_reg_r " *) 
  SRL16E \rx_data_r5_reg[7]_srl2___gt0_frame_check_rx_data_r4_reg_r 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(rx_data_r3[7]),
        .Q(\rx_data_r5_reg[7]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[8]_srl3___gt0_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[8]_srl3___gt0_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[8]),
        .Q(\rx_data_r5_reg[8]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[8]_srl3___gt0_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[0]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[8]),
        .O(p_0_in1_in[8]));
  (* srl_bus_name = "inst/\gt0_frame_check/rx_data_r5_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/rx_data_r5_reg[9]_srl3___gt0_frame_check_rx_data_r5_reg_r " *) 
  SRL16E \rx_data_r5_reg[9]_srl3___gt0_frame_check_rx_data_r5_reg_r 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(p_0_in1_in[9]),
        .Q(\rx_data_r5_reg[9]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_data_r5_reg[9]_srl3___gt0_frame_check_rx_data_r5_reg_r_i_1 
       (.I0(rx_data_r[1]),
        .I1(\sel_reg_n_0_[0] ),
        .I2(rx_data_r2[9]),
        .O(p_0_in1_in[9]));
  FDRE rx_data_r5_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r4_reg_r_n_0),
        .Q(rx_data_r5_reg_r_n_0),
        .R(system_reset_r2));
  FDRE \rx_data_r6_reg[0]_gt0_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[0]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[0]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[10]_gt0_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[10]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[10]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[11]_gt0_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[11]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[11]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[12]_gt0_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[12]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[12]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[13]_gt0_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[13]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[13]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[14]_gt0_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[14]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[14]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[15]_gt0_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[15]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[15]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[1]_gt0_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[1]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[1]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[2]_gt0_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[2]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[2]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[3]_gt0_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[3]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[3]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[4]_gt0_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[4]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[4]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[5]_gt0_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[5]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[5]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[6]_gt0_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[6]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[6]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[7]_gt0_frame_check_rx_data_r5_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[7]_srl2___gt0_frame_check_rx_data_r4_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[7]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[8]_gt0_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[8]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[8]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  FDRE \rx_data_r6_reg[9]_gt0_frame_check_rx_data_r6_reg_r 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rx_data_r5_reg[9]_srl3___gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .Q(\rx_data_r6_reg[9]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate
       (.I0(\rx_data_r6_reg[15]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate_n_0));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__0
       (.I0(\rx_data_r6_reg[14]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__1
       (.I0(\rx_data_r6_reg[13]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__10
       (.I0(\rx_data_r6_reg[4]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__11
       (.I0(\rx_data_r6_reg[3]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__12
       (.I0(\rx_data_r6_reg[2]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__13
       (.I0(\rx_data_r6_reg[1]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__14
       (.I0(\rx_data_r6_reg[0]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__2
       (.I0(\rx_data_r6_reg[12]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__3
       (.I0(\rx_data_r6_reg[11]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__4
       (.I0(\rx_data_r6_reg[10]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__5
       (.I0(\rx_data_r6_reg[9]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__6
       (.I0(\rx_data_r6_reg[8]_gt0_frame_check_rx_data_r6_reg_r_n_0 ),
        .I1(rx_data_r6_reg_r_n_0),
        .O(rx_data_r6_reg_gate__6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__7
       (.I0(\rx_data_r6_reg[7]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__8
       (.I0(\rx_data_r6_reg[6]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_data_r6_reg_gate__9
       (.I0(\rx_data_r6_reg[5]_gt0_frame_check_rx_data_r5_reg_r_n_0 ),
        .I1(rx_data_r5_reg_r_n_0),
        .O(rx_data_r6_reg_gate__9_n_0));
  FDRE rx_data_r6_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r5_reg_r_n_0),
        .Q(rx_data_r6_reg_r_n_0),
        .R(system_reset_r2));
  FDRE \rx_data_r_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[0]),
        .Q(rx_data_r[0]),
        .R(1'b0));
  FDRE \rx_data_r_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[10]),
        .Q(rx_data_r[10]),
        .R(1'b0));
  FDRE \rx_data_r_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[11]),
        .Q(rx_data_r[11]),
        .R(1'b0));
  FDRE \rx_data_r_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[12]),
        .Q(rx_data_r[12]),
        .R(1'b0));
  FDRE \rx_data_r_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[13]),
        .Q(rx_data_r[13]),
        .R(1'b0));
  FDRE \rx_data_r_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[14]),
        .Q(rx_data_r[14]),
        .R(1'b0));
  FDRE \rx_data_r_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[15]),
        .Q(rx_data_r[15]),
        .R(1'b0));
  FDRE \rx_data_r_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[1]),
        .Q(rx_data_r[1]),
        .R(1'b0));
  FDRE \rx_data_r_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[2]),
        .Q(rx_data_r[2]),
        .R(1'b0));
  FDRE \rx_data_r_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[3]),
        .Q(rx_data_r[3]),
        .R(1'b0));
  FDRE \rx_data_r_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[4]),
        .Q(rx_data_r[4]),
        .R(1'b0));
  FDRE \rx_data_r_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[5]),
        .Q(rx_data_r[5]),
        .R(1'b0));
  FDRE \rx_data_r_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[6]),
        .Q(rx_data_r[6]),
        .R(1'b0));
  FDRE \rx_data_r_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[7]),
        .Q(rx_data_r[7]),
        .R(1'b0));
  FDRE \rx_data_r_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[8]),
        .Q(rx_data_r[8]),
        .R(1'b0));
  FDRE \rx_data_r_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(RXDATA_OUT[9]),
        .Q(rx_data_r[9]),
        .R(1'b0));
  FDRE \rx_data_r_track_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__14_n_0),
        .Q(rx_data_r_track[0]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__4_n_0),
        .Q(rx_data_r_track[10]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__3_n_0),
        .Q(rx_data_r_track[11]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__2_n_0),
        .Q(rx_data_r_track[12]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__1_n_0),
        .Q(rx_data_r_track[13]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__0_n_0),
        .Q(rx_data_r_track[14]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate_n_0),
        .Q(rx_data_r_track[15]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__13_n_0),
        .Q(rx_data_r_track[1]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__12_n_0),
        .Q(rx_data_r_track[2]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__11_n_0),
        .Q(rx_data_r_track[3]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__10_n_0),
        .Q(rx_data_r_track[4]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__9_n_0),
        .Q(rx_data_r_track[5]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__8_n_0),
        .Q(rx_data_r_track[6]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__7_n_0),
        .Q(rx_data_r_track[7]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__6_n_0),
        .Q(rx_data_r_track[8]),
        .R(system_reset_r2));
  FDRE \rx_data_r_track_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_data_r6_reg_gate__5_n_0),
        .Q(rx_data_r_track[9]),
        .R(system_reset_r2));
  LUT5 #(
    .INIT(32'hFFFFAFDA)) 
    \rx_fifo_in_reg[15]_i_1 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .O(\rx_fifo_in_reg[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \rx_fifo_in_reg[15]_i_2 
       (.I0(\block_word_cnt_reg_n_0_[5] ),
        .I1(\block_word_cnt_reg_n_0_[7] ),
        .I2(\block_word_cnt_reg_n_0_[6] ),
        .I3(\block_word_cnt_reg_n_0_[3] ),
        .O(\rx_fifo_in_reg[15]_i_2_n_0 ));
  FDRE \rx_fifo_in_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[0]),
        .Q(rx_fifo_in_reg[0]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[10]),
        .Q(rx_fifo_in_reg[10]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[11]),
        .Q(rx_fifo_in_reg[11]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[12]),
        .Q(rx_fifo_in_reg[12]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[13]),
        .Q(rx_fifo_in_reg[13]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[14]),
        .Q(rx_fifo_in_reg[14]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[15]),
        .Q(rx_fifo_in_reg[15]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[1]),
        .Q(rx_fifo_in_reg[1]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[2]),
        .Q(rx_fifo_in_reg[2]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[3]),
        .Q(rx_fifo_in_reg[3]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[4]),
        .Q(rx_fifo_in_reg[4]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[5]),
        .Q(rx_fifo_in_reg[5]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[6]),
        .Q(rx_fifo_in_reg[6]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[7]),
        .Q(rx_fifo_in_reg[7]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[8]),
        .Q(rx_fifo_in_reg[8]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_in_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\rx_fifo_in_reg[15]_i_1_n_0 ),
        .D(rx_data_r_track[9]),
        .Q(rx_fifo_in_reg[9]),
        .R(block_word_cnt0));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[0]_i_1 
       (.I0(rx_fifo_out[0]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[0]),
        .O(\rx_fifo_out_correct[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[10]_i_1 
       (.I0(rx_fifo_out[10]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[10]),
        .O(\rx_fifo_out_correct[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[11]_i_1 
       (.I0(rx_fifo_out[11]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[11]),
        .O(\rx_fifo_out_correct[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[12]_i_1 
       (.I0(rx_fifo_out[12]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[12]),
        .O(\rx_fifo_out_correct[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[13]_i_1 
       (.I0(rx_fifo_out[13]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[13]),
        .O(\rx_fifo_out_correct[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[14]_i_1 
       (.I0(rx_fifo_out[14]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[14]),
        .O(\rx_fifo_out_correct[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[15]_i_1 
       (.I0(rx_fifo_out[15]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[15]),
        .O(\rx_fifo_out_correct[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[1]_i_1 
       (.I0(rx_fifo_out[1]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[1]),
        .O(\rx_fifo_out_correct[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[2]_i_1 
       (.I0(rx_fifo_out[2]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[2]),
        .O(\rx_fifo_out_correct[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[3]_i_1 
       (.I0(rx_fifo_out[3]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[3]),
        .O(\rx_fifo_out_correct[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[4]_i_1 
       (.I0(rx_fifo_out[4]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[4]),
        .O(\rx_fifo_out_correct[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[5]_i_1 
       (.I0(rx_fifo_out[5]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[5]),
        .O(\rx_fifo_out_correct[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[6]_i_1 
       (.I0(rx_fifo_out[6]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[6]),
        .O(\rx_fifo_out_correct[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[7]_i_1 
       (.I0(rx_fifo_out[7]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[7]),
        .O(\rx_fifo_out_correct[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[8]_i_1 
       (.I0(rx_fifo_out[8]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[8]),
        .O(\rx_fifo_out_correct[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_fifo_out_correct[9]_i_1 
       (.I0(rx_fifo_out[9]),
        .I1(ECC_CODE_EN),
        .I2(\hor_correct_mask_reg_reg_n_0_[0] ),
        .I3(ver_correct_mask_reg__0[9]),
        .O(\rx_fifo_out_correct[9]_i_1_n_0 ));
  FDRE \rx_fifo_out_correct_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[0]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[0]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[10]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[10]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[11]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[11]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[12]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[12]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[13]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[13]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[14]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[14]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[15]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[15]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[1]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[1]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[2]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[2]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[3]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[3]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[4]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[4]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[5]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[5]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[6]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[6]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[7]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[7]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[8]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[8]),
        .R(block_word_cnt0));
  FDRE \rx_fifo_out_correct_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(rx_fifo_out_reg_en),
        .D(\rx_fifo_out_correct[9]_i_1_n_0 ),
        .Q(rx_fifo_out_correct[9]),
        .R(block_word_cnt0));
  LUT6 #(
    .INIT(64'hFDFFFFFFFDFF0000)) 
    rx_fifo_out_reg_en_i_1
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(data_word_valid_i_3_n_0),
        .I5(rx_fifo_out_reg_en),
        .O(rx_fifo_out_reg_en_i_1_n_0));
  FDRE rx_fifo_out_reg_en_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_fifo_out_reg_en_i_1_n_0),
        .Q(rx_fifo_out_reg_en),
        .R(block_word_cnt0));
  LUT5 #(
    .INIT(32'h888F8880)) 
    rx_fifo_rd_en_i_1__0
       (.I0(rx_fifo_valid),
        .I1(data_word_valid_i_2_n_0),
        .I2(data_word_valid_i_3_n_0),
        .I3(data_word_valid_i_4_n_0),
        .I4(rx_fifo_rd_en_reg_n_0),
        .O(rx_fifo_rd_en_i_1__0_n_0));
  FDRE rx_fifo_rd_en_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_fifo_rd_en_i_1__0_n_0),
        .Q(rx_fifo_rd_en_reg_n_0),
        .R(block_word_cnt0));
  FDRE rx_fifo_rst_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(block_word_cnt0),
        .Q(rx_fifo_rst),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00001000)) 
    rx_fifo_valid_i_1
       (.I0(rx_fifo_valid_i_2_n_0),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(pattern_pause_reg_i_2_n_0),
        .I5(rx_fifo_valid),
        .O(rx_fifo_valid_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    rx_fifo_valid_i_2
       (.I0(\block_error_reg[1]_i_6_n_0 ),
        .I1(rx_data_r_track[4]),
        .I2(rx_data_r_track[6]),
        .I3(rx_fifo_valid_i_3_n_0),
        .I4(rx_fifo_valid_i_4_n_0),
        .I5(encoder_rst_i_5_n_0),
        .O(rx_fifo_valid_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    rx_fifo_valid_i_3
       (.I0(rx_data_r_track[10]),
        .I1(rx_data_r_track[12]),
        .I2(rx_data_r_track[11]),
        .I3(rx_data_r_track[8]),
        .O(rx_fifo_valid_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    rx_fifo_valid_i_4
       (.I0(rx_data_r_track[5]),
        .I1(rx_data_r_track[7]),
        .I2(rx_data_r_track[14]),
        .I3(rx_data_r_track[9]),
        .O(rx_fifo_valid_i_4_n_0));
  FDRE rx_fifo_valid_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_fifo_valid_i_1_n_0),
        .Q(rx_fifo_valid),
        .R(block_word_cnt0));
  LUT6 #(
    .INIT(64'h5557775755544454)) 
    rx_fifo_wr_en_i_1__0
       (.I0(rx_fifo_wr_en_i_2_n_0),
        .I1(pattern_check_en_i_3_n_0),
        .I2(pattern_check_en_i_4_n_0),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .I5(rx_fifo_wr_en),
        .O(rx_fifo_wr_en_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    rx_fifo_wr_en_i_2
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .O(rx_fifo_wr_en_i_2_n_0));
  FDRE rx_fifo_wr_en_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rx_fifo_wr_en_i_1__0_n_0),
        .Q(rx_fifo_wr_en),
        .R(block_word_cnt0));
  (* CHECK_LICENSE_TYPE = "rx_word_fifo,fifo_generator_v13_1_4,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_1_4,Vivado 2017.2" *) 
  gtx3g_bert_0_rx_word_fifo__xdcDup__1 rx_word_fifo_inst_1
       (.clk(GT0_TXUSRCLK_OUT),
        .din(rx_fifo_in_reg),
        .dout(rx_fifo_out),
        .empty(NLW_rx_word_fifo_inst_1_empty_UNCONNECTED),
        .full(NLW_rx_word_fifo_inst_1_full_UNCONNECTED),
        .rd_en(rx_fifo_rd_en_reg_n_0),
        .srst(rx_fifo_rst),
        .wr_en(rx_fifo_wr_en));
  FDRE \rxctrl_r2_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\rxctrl_r_reg_n_0_[0] ),
        .Q(rxctrl_r2[0]),
        .R(system_reset_r2));
  FDRE \rxctrl_r2_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(p_1_in5_in),
        .Q(rxctrl_r2[1]),
        .R(system_reset_r2));
  FDRE \rxctrl_r3_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rxctrl_r2[0]),
        .Q(rxctrl_r3[0]),
        .R(system_reset_r2));
  FDRE \rxctrl_r3_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(rxctrl_r2[1]),
        .Q(rxctrl_r3[1]),
        .R(system_reset_r2));
  FDRE \rxctrl_r_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[0]),
        .Q(\rxctrl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \rxctrl_r_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(D[1]),
        .Q(p_1_in5_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000AEAE00AE)) 
    \sel[0]_i_1 
       (.I0(\sel_reg_n_0_[0] ),
        .I1(\sel[0]_i_2_n_0 ),
        .I2(\sel[0]_i_3_n_0 ),
        .I3(\sel[0]_i_4_n_0 ),
        .I4(\sel[0]_i_5_n_0 ),
        .I5(system_reset_r2),
        .O(\sel[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h4000)) 
    \sel[0]_i_2 
       (.I0(rx_data_r[14]),
        .I1(begin_r),
        .I2(rx_data_r[13]),
        .I3(rx_data_r[11]),
        .O(\sel[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFDFFFFFFFFFFF)) 
    \sel[0]_i_3 
       (.I0(rx_data_r[10]),
        .I1(rx_data_r[9]),
        .I2(rx_data_r[15]),
        .I3(rx_data_r[12]),
        .I4(rx_data_r[8]),
        .I5(p_1_in5_in),
        .O(\sel[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \sel[0]_i_4 
       (.I0(rx_data_r[7]),
        .I1(\rxctrl_r_reg_n_0_[0] ),
        .I2(rx_data_r[5]),
        .I3(begin_r),
        .O(\sel[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFDFFFFFFFFFF)) 
    \sel[0]_i_5 
       (.I0(rx_data_r[4]),
        .I1(rx_data_r[0]),
        .I2(rx_data_r[1]),
        .I3(rx_data_r[2]),
        .I4(rx_data_r[6]),
        .I5(rx_data_r[3]),
        .O(\sel[0]_i_5_n_0 ));
  FDRE \sel_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\sel[0]_i_1_n_0 ),
        .Q(\sel_reg_n_0_[0] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hA8)) 
    sm_link_i_1
       (.I0(track_data_r),
        .I1(gt0_track_data_i),
        .I2(sm_link_i_2_n_0),
        .O(sm_link_i_1_n_0));
  LUT5 #(
    .INIT(32'hAAA8AAAA)) 
    sm_link_i_2
       (.I0(link_ctr_reg__0[6]),
        .I1(link_ctr_reg__0[5]),
        .I2(link_ctr_reg__0[3]),
        .I3(link_ctr_reg__0[4]),
        .I4(\link_ctr[6]_i_3_n_0 ),
        .O(sm_link_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_link_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(sm_link_i_1_n_0),
        .Q(gt0_track_data_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    start_of_packet_detected_r_i_1
       (.I0(rx_data_r3[1]),
        .I1(rx_data_r3[6]),
        .I2(start_of_packet_detected_r_i_2_n_0),
        .I3(rx_data_r3[0]),
        .I4(rx_data_r3[2]),
        .I5(rx_data_r3[7]),
        .O(start_of_packet_detected_r_i_1_n_0));
  LUT5 #(
    .INIT(32'h777FFFFF)) 
    start_of_packet_detected_r_i_2
       (.I0(rx_data_r3[4]),
        .I1(rx_data_r3[3]),
        .I2(rxctrl_r3[1]),
        .I3(rxctrl_r3[0]),
        .I4(rx_data_r3[5]),
        .O(start_of_packet_detected_r_i_2_n_0));
  FDRE start_of_packet_detected_r_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(start_of_packet_detected_r_i_1_n_0),
        .Q(start_of_packet_detected_r),
        .R(1'b0));
  (* ASYNC_REG *) 
  FDRE system_reset_r2_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(system_reset_r),
        .Q(system_reset_r2),
        .R(1'b0));
  (* ASYNC_REG *) 
  FDRE system_reset_r_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(gt0_rx_system_reset_c),
        .Q(system_reset_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFBB0000)) 
    test_over_reg_i_1
       (.I0(\data_word_cnt[31]_i_4_n_0 ),
        .I1(\data_word_cnt[31]_i_5_n_0 ),
        .I2(\data_word_cnt[31]_i_6_n_0 ),
        .I3(\data_word_cnt[31]_i_7_n_0 ),
        .I4(pattern_check_en),
        .I5(TEST_OVER_OUT),
        .O(test_over_reg_i_1_n_0));
  FDRE test_over_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(test_over_reg_i_1_n_0),
        .Q(TEST_OVER_OUT),
        .R(block_word_cnt0));
  LUT3 #(
    .INIT(8'hEA)) 
    track_data_r_i_1
       (.I0(track_data_r),
        .I1(start_of_packet_detected_r),
        .I2(begin_r),
        .O(next_track_data_c));
  FDRE track_data_r_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(next_track_data_c),
        .Q(track_data_r),
        .R(system_reset_r2));
  LUT5 #(
    .INIT(32'h00000400)) 
    \ver_correct_mask[15]_i_1 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\rx_fifo_in_reg[15]_i_2_n_0 ),
        .O(\ver_correct_mask[15]_i_1_n_0 ));
  FDRE \ver_correct_mask_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[0]),
        .Q(ver_correct_mask[0]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[10]),
        .Q(ver_correct_mask[10]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[11]),
        .Q(ver_correct_mask[11]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[12]),
        .Q(ver_correct_mask[12]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[13]),
        .Q(ver_correct_mask[13]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[14]),
        .Q(ver_correct_mask[14]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[15]),
        .Q(ver_correct_mask[15]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[1]),
        .Q(ver_correct_mask[1]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[2]),
        .Q(ver_correct_mask[2]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[3]),
        .Q(ver_correct_mask[3]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[4]),
        .Q(ver_correct_mask[4]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[5]),
        .Q(ver_correct_mask[5]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[6]),
        .Q(ver_correct_mask[6]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[7]),
        .Q(ver_correct_mask[7]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[8]),
        .Q(ver_correct_mask[8]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\ver_correct_mask[15]_i_1_n_0 ),
        .D(ver_correct_mask0[9]),
        .Q(ver_correct_mask[9]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[0]),
        .Q(ver_correct_mask_reg__0[0]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[10]),
        .Q(ver_correct_mask_reg__0[10]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[11]),
        .Q(ver_correct_mask_reg__0[11]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[12]),
        .Q(ver_correct_mask_reg__0[12]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[13]),
        .Q(ver_correct_mask_reg__0[13]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[14]),
        .Q(ver_correct_mask_reg__0[14]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[15]),
        .Q(ver_correct_mask_reg__0[15]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[1]),
        .Q(ver_correct_mask_reg__0[1]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[2]),
        .Q(ver_correct_mask_reg__0[2]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[3]),
        .Q(ver_correct_mask_reg__0[3]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[4]),
        .Q(ver_correct_mask_reg__0[4]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[5]),
        .Q(ver_correct_mask_reg__0[5]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[6]),
        .Q(ver_correct_mask_reg__0[6]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[7]),
        .Q(ver_correct_mask_reg__0[7]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[8]),
        .Q(ver_correct_mask_reg__0[8]),
        .R(block_word_cnt0));
  FDRE \ver_correct_mask_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(correct_mask_valid),
        .D(ver_correct_mask[9]),
        .Q(ver_correct_mask_reg__0[9]),
        .R(block_word_cnt0));
endmodule

(* ORIG_REF_NAME = "gtx3g_GT_FRAME_GEN" *) 
module gtx3g_bert_0_gtx3g_GT_FRAME_GEN
   (gt0_txcharisk_in,
    Q,
    GT0_TXUSRCLK_OUT,
    TEST_RESET,
    ECC_CODE_EN,
    PATTERN_MODE,
    out);
  output [0:0]gt0_txcharisk_in;
  output [15:0]Q;
  input GT0_TXUSRCLK_OUT;
  input TEST_RESET;
  input ECC_CODE_EN;
  input [2:0]PATTERN_MODE;
  input out;

  wire ECC_CODE_EN;
  wire GT0_TXUSRCLK_OUT;
  wire [2:0]PATTERN_MODE;
  wire [15:0]Q;
  wire TEST_RESET;
  wire [15:0]bit_pointer;
  wire \bit_pointer[10]_i_1_n_0 ;
  wire \bit_pointer[11]_i_1_n_0 ;
  wire \bit_pointer[12]_i_1_n_0 ;
  wire \bit_pointer[13]_i_1_n_0 ;
  wire \bit_pointer[14]_i_1_n_0 ;
  wire \bit_pointer[15]_i_1_n_0 ;
  wire \bit_pointer[1]_i_1_n_0 ;
  wire \bit_pointer[2]_i_1_n_0 ;
  wire \bit_pointer[3]_i_1_n_0 ;
  wire \bit_pointer[4]_i_1_n_0 ;
  wire \bit_pointer[5]_i_1_n_0 ;
  wire \bit_pointer[6]_i_1_n_0 ;
  wire \bit_pointer[7]_i_1_n_0 ;
  wire \bit_pointer[8]_i_1_n_0 ;
  wire \bit_pointer[9]_i_1_n_0 ;
  wire \block_word_cnt[0]_i_1__1_n_0 ;
  wire \block_word_cnt[1]_i_1__1_n_0 ;
  wire \block_word_cnt[1]_i_2__1_n_0 ;
  wire \block_word_cnt[1]_i_3__0_n_0 ;
  wire \block_word_cnt[1]_i_4__1_n_0 ;
  wire \block_word_cnt[1]_i_5_n_0 ;
  wire \block_word_cnt[1]_i_6__0_n_0 ;
  wire \block_word_cnt[1]_i_7__0_n_0 ;
  wire \block_word_cnt[2]_i_1__1_n_0 ;
  wire \block_word_cnt[2]_i_2_n_0 ;
  wire \block_word_cnt[2]_i_3_n_0 ;
  wire \block_word_cnt[3]_i_1__1_n_0 ;
  wire \block_word_cnt[4]_i_2_n_0 ;
  wire \block_word_cnt[4]_i_3__1_n_0 ;
  wire \block_word_cnt[4]_i_4__0_n_0 ;
  wire \block_word_cnt[5]_i_1__0_n_0 ;
  wire \block_word_cnt[6]_i_1__1_n_0 ;
  wire \block_word_cnt[6]_i_2_n_0 ;
  wire \block_word_cnt[7]_i_2__0_n_0 ;
  wire \block_word_cnt[7]_i_3__0_n_0 ;
  wire \block_word_cnt_reg[4]_i_1__0_n_0 ;
  wire \block_word_cnt_reg_n_0_[0] ;
  wire \block_word_cnt_reg_n_0_[1] ;
  wire \block_word_cnt_reg_n_0_[2] ;
  wire \block_word_cnt_reg_n_0_[3] ;
  wire \block_word_cnt_reg_n_0_[4] ;
  wire \block_word_cnt_reg_n_0_[5] ;
  wire \block_word_cnt_reg_n_0_[6] ;
  wire \block_word_cnt_reg_n_0_[7] ;
  wire clear;
  wire data_word_valid;
  wire data_word_valid_i_1__0_n_0;
  wire encoder_rst_reg;
  wire encoder_rst_reg_i_1_n_0;
  wire error_insertion_inst_1_n_0;
  wire error_insertion_inst_1_n_1;
  wire error_insertion_inst_1_n_10;
  wire error_insertion_inst_1_n_11;
  wire error_insertion_inst_1_n_12;
  wire error_insertion_inst_1_n_13;
  wire error_insertion_inst_1_n_14;
  wire error_insertion_inst_1_n_15;
  wire error_insertion_inst_1_n_2;
  wire error_insertion_inst_1_n_3;
  wire error_insertion_inst_1_n_4;
  wire error_insertion_inst_1_n_5;
  wire error_insertion_inst_1_n_6;
  wire error_insertion_inst_1_n_7;
  wire error_insertion_inst_1_n_8;
  wire error_insertion_inst_1_n_9;
  wire error_insertion_rst_reg;
  wire error_insertion_rst_reg_i_1_n_0;
  wire gt0_tx_system_reset_c;
  wire [0:0]gt0_txcharisk_in;
  wire out;
  wire parity_encoder_inst_1_n_0;
  wire parity_encoder_inst_1_n_1;
  wire parity_encoder_inst_1_n_10;
  wire parity_encoder_inst_1_n_11;
  wire parity_encoder_inst_1_n_12;
  wire parity_encoder_inst_1_n_13;
  wire parity_encoder_inst_1_n_14;
  wire parity_encoder_inst_1_n_15;
  wire parity_encoder_inst_1_n_2;
  wire parity_encoder_inst_1_n_3;
  wire parity_encoder_inst_1_n_4;
  wire parity_encoder_inst_1_n_5;
  wire parity_encoder_inst_1_n_6;
  wire parity_encoder_inst_1_n_7;
  wire parity_encoder_inst_1_n_8;
  wire parity_encoder_inst_1_n_9;
  wire pattern_gen_inst_1_n_0;
  wire pattern_gen_inst_1_n_1;
  wire pattern_gen_inst_1_n_17;
  wire pattern_gen_inst_1_n_18;
  wire pattern_gen_inst_1_n_19;
  wire pattern_gen_inst_1_n_2;
  wire pattern_gen_inst_1_n_20;
  wire pattern_gen_inst_1_n_3;
  wire pattern_gen_inst_1_n_4;
  wire pattern_gen_inst_1_n_5;
  wire pattern_gen_inst_1_n_6;
  wire pattern_gen_inst_1_n_7;
  wire pattern_gen_inst_1_n_8;
  wire pattern_gen_inst_1_n_9;
  wire pattern_pause_reg;
  wire pattern_pause_reg_i_1__0_n_0;
  wire pattern_pause_reg_i_2__0_n_0;
  wire pattern_rst_reg;
  wire [15:5]pattern_word;
  wire sel;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) wire system_reset_r;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) wire system_reset_r2;
  wire \test_init_cnt[0]_i_3_n_0 ;
  wire \test_init_cnt[0]_i_4_n_0 ;
  wire \test_init_cnt[0]_i_5_n_0 ;
  wire \test_init_cnt[0]_i_6_n_0 ;
  wire \test_init_cnt[0]_i_7_n_0 ;
  wire \test_init_cnt[0]_i_8__0_n_0 ;
  wire \test_init_cnt[0]_i_9_n_0 ;
  wire \test_init_cnt[12]_i_2_n_0 ;
  wire \test_init_cnt[12]_i_3_n_0 ;
  wire \test_init_cnt[12]_i_4_n_0 ;
  wire \test_init_cnt[12]_i_5_n_0 ;
  wire \test_init_cnt[4]_i_2_n_0 ;
  wire \test_init_cnt[4]_i_3_n_0 ;
  wire \test_init_cnt[4]_i_4_n_0 ;
  wire \test_init_cnt[4]_i_5_n_0 ;
  wire \test_init_cnt[8]_i_2_n_0 ;
  wire \test_init_cnt[8]_i_3_n_0 ;
  wire \test_init_cnt[8]_i_4_n_0 ;
  wire \test_init_cnt[8]_i_5_n_0 ;
  wire [15:0]test_init_cnt_reg;
  wire \test_init_cnt_reg[0]_i_2_n_0 ;
  wire \test_init_cnt_reg[0]_i_2_n_1 ;
  wire \test_init_cnt_reg[0]_i_2_n_2 ;
  wire \test_init_cnt_reg[0]_i_2_n_3 ;
  wire \test_init_cnt_reg[0]_i_2_n_4 ;
  wire \test_init_cnt_reg[0]_i_2_n_5 ;
  wire \test_init_cnt_reg[0]_i_2_n_6 ;
  wire \test_init_cnt_reg[0]_i_2_n_7 ;
  wire \test_init_cnt_reg[12]_i_1_n_1 ;
  wire \test_init_cnt_reg[12]_i_1_n_2 ;
  wire \test_init_cnt_reg[12]_i_1_n_3 ;
  wire \test_init_cnt_reg[12]_i_1_n_4 ;
  wire \test_init_cnt_reg[12]_i_1_n_5 ;
  wire \test_init_cnt_reg[12]_i_1_n_6 ;
  wire \test_init_cnt_reg[12]_i_1_n_7 ;
  wire \test_init_cnt_reg[4]_i_1_n_0 ;
  wire \test_init_cnt_reg[4]_i_1_n_1 ;
  wire \test_init_cnt_reg[4]_i_1_n_2 ;
  wire \test_init_cnt_reg[4]_i_1_n_3 ;
  wire \test_init_cnt_reg[4]_i_1_n_4 ;
  wire \test_init_cnt_reg[4]_i_1_n_5 ;
  wire \test_init_cnt_reg[4]_i_1_n_6 ;
  wire \test_init_cnt_reg[4]_i_1_n_7 ;
  wire \test_init_cnt_reg[8]_i_1_n_0 ;
  wire \test_init_cnt_reg[8]_i_1_n_1 ;
  wire \test_init_cnt_reg[8]_i_1_n_2 ;
  wire \test_init_cnt_reg[8]_i_1_n_3 ;
  wire \test_init_cnt_reg[8]_i_1_n_4 ;
  wire \test_init_cnt_reg[8]_i_1_n_5 ;
  wire \test_init_cnt_reg[8]_i_1_n_6 ;
  wire \test_init_cnt_reg[8]_i_1_n_7 ;
  wire [15:0]tx_data_reg;
  wire \tx_data_reg[0]_i_4_n_0 ;
  wire \tx_data_reg[11]_i_2__0_n_0 ;
  wire \tx_data_reg[11]_i_4_n_0 ;
  wire \tx_data_reg[11]_i_5_n_0 ;
  wire \tx_data_reg[14]_i_2_n_0 ;
  wire \tx_data_reg[14]_i_3_n_0 ;
  wire \tx_data_reg[15]_i_2_n_0 ;
  wire \tx_data_reg[15]_i_3_n_0 ;
  wire \tx_data_reg[15]_i_5_n_0 ;
  wire \tx_data_reg[1]_i_2__0_n_0 ;
  wire \tx_data_reg[1]_i_3_n_0 ;
  wire \tx_data_reg[2]_i_4_n_0 ;
  wire \tx_data_reg[3]_i_2_n_0 ;
  wire \tx_data_reg[3]_i_3_n_0 ;
  wire \tx_data_reg[3]_i_5_n_0 ;
  wire \tx_data_reg[4]_i_3_n_0 ;
  wire \tx_data_reg[9]_i_2_n_0 ;
  wire \tx_data_reg[9]_i_3_n_0 ;
  wire \tx_data_reg[9]_i_5_n_0 ;
  wire txctrl_reg0;
  wire \txctrl_reg[0]_i_2_n_0 ;
  wire \txctrl_reg_reg_n_0_[0] ;
  wire \word_cnt[0]_i_2_n_0 ;
  wire \word_cnt[0]_i_3_n_0 ;
  wire \word_cnt[0]_i_4_n_0 ;
  wire \word_cnt[0]_i_5_n_0 ;
  wire \word_cnt[12]_i_2_n_0 ;
  wire \word_cnt[12]_i_3_n_0 ;
  wire \word_cnt[12]_i_4_n_0 ;
  wire \word_cnt[12]_i_5_n_0 ;
  wire \word_cnt[16]_i_2_n_0 ;
  wire \word_cnt[16]_i_3_n_0 ;
  wire \word_cnt[16]_i_4_n_0 ;
  wire \word_cnt[16]_i_5_n_0 ;
  wire \word_cnt[20]_i_2_n_0 ;
  wire \word_cnt[20]_i_3_n_0 ;
  wire \word_cnt[20]_i_4_n_0 ;
  wire \word_cnt[20]_i_5_n_0 ;
  wire \word_cnt[24]_i_2_n_0 ;
  wire \word_cnt[24]_i_3_n_0 ;
  wire \word_cnt[24]_i_4_n_0 ;
  wire \word_cnt[24]_i_5_n_0 ;
  wire \word_cnt[28]_i_2_n_0 ;
  wire \word_cnt[28]_i_3_n_0 ;
  wire \word_cnt[28]_i_4_n_0 ;
  wire \word_cnt[28]_i_5_n_0 ;
  wire \word_cnt[4]_i_2_n_0 ;
  wire \word_cnt[4]_i_3_n_0 ;
  wire \word_cnt[4]_i_4_n_0 ;
  wire \word_cnt[4]_i_5_n_0 ;
  wire \word_cnt[8]_i_2_n_0 ;
  wire \word_cnt[8]_i_3_n_0 ;
  wire \word_cnt[8]_i_4_n_0 ;
  wire \word_cnt[8]_i_5_n_0 ;
  wire [31:0]word_cnt_reg;
  wire \word_cnt_reg[0]_i_1_n_0 ;
  wire \word_cnt_reg[0]_i_1_n_1 ;
  wire \word_cnt_reg[0]_i_1_n_2 ;
  wire \word_cnt_reg[0]_i_1_n_3 ;
  wire \word_cnt_reg[0]_i_1_n_4 ;
  wire \word_cnt_reg[0]_i_1_n_5 ;
  wire \word_cnt_reg[0]_i_1_n_6 ;
  wire \word_cnt_reg[0]_i_1_n_7 ;
  wire \word_cnt_reg[12]_i_1_n_0 ;
  wire \word_cnt_reg[12]_i_1_n_1 ;
  wire \word_cnt_reg[12]_i_1_n_2 ;
  wire \word_cnt_reg[12]_i_1_n_3 ;
  wire \word_cnt_reg[12]_i_1_n_4 ;
  wire \word_cnt_reg[12]_i_1_n_5 ;
  wire \word_cnt_reg[12]_i_1_n_6 ;
  wire \word_cnt_reg[12]_i_1_n_7 ;
  wire \word_cnt_reg[16]_i_1_n_0 ;
  wire \word_cnt_reg[16]_i_1_n_1 ;
  wire \word_cnt_reg[16]_i_1_n_2 ;
  wire \word_cnt_reg[16]_i_1_n_3 ;
  wire \word_cnt_reg[16]_i_1_n_4 ;
  wire \word_cnt_reg[16]_i_1_n_5 ;
  wire \word_cnt_reg[16]_i_1_n_6 ;
  wire \word_cnt_reg[16]_i_1_n_7 ;
  wire \word_cnt_reg[20]_i_1_n_0 ;
  wire \word_cnt_reg[20]_i_1_n_1 ;
  wire \word_cnt_reg[20]_i_1_n_2 ;
  wire \word_cnt_reg[20]_i_1_n_3 ;
  wire \word_cnt_reg[20]_i_1_n_4 ;
  wire \word_cnt_reg[20]_i_1_n_5 ;
  wire \word_cnt_reg[20]_i_1_n_6 ;
  wire \word_cnt_reg[20]_i_1_n_7 ;
  wire \word_cnt_reg[24]_i_1_n_0 ;
  wire \word_cnt_reg[24]_i_1_n_1 ;
  wire \word_cnt_reg[24]_i_1_n_2 ;
  wire \word_cnt_reg[24]_i_1_n_3 ;
  wire \word_cnt_reg[24]_i_1_n_4 ;
  wire \word_cnt_reg[24]_i_1_n_5 ;
  wire \word_cnt_reg[24]_i_1_n_6 ;
  wire \word_cnt_reg[24]_i_1_n_7 ;
  wire \word_cnt_reg[28]_i_1_n_1 ;
  wire \word_cnt_reg[28]_i_1_n_2 ;
  wire \word_cnt_reg[28]_i_1_n_3 ;
  wire \word_cnt_reg[28]_i_1_n_4 ;
  wire \word_cnt_reg[28]_i_1_n_5 ;
  wire \word_cnt_reg[28]_i_1_n_6 ;
  wire \word_cnt_reg[28]_i_1_n_7 ;
  wire \word_cnt_reg[4]_i_1_n_0 ;
  wire \word_cnt_reg[4]_i_1_n_1 ;
  wire \word_cnt_reg[4]_i_1_n_2 ;
  wire \word_cnt_reg[4]_i_1_n_3 ;
  wire \word_cnt_reg[4]_i_1_n_4 ;
  wire \word_cnt_reg[4]_i_1_n_5 ;
  wire \word_cnt_reg[4]_i_1_n_6 ;
  wire \word_cnt_reg[4]_i_1_n_7 ;
  wire \word_cnt_reg[8]_i_1_n_0 ;
  wire \word_cnt_reg[8]_i_1_n_1 ;
  wire \word_cnt_reg[8]_i_1_n_2 ;
  wire \word_cnt_reg[8]_i_1_n_3 ;
  wire \word_cnt_reg[8]_i_1_n_4 ;
  wire \word_cnt_reg[8]_i_1_n_5 ;
  wire \word_cnt_reg[8]_i_1_n_6 ;
  wire \word_cnt_reg[8]_i_1_n_7 ;
  wire [3:3]\NLW_test_init_cnt_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_word_cnt_reg[28]_i_1_CO_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    SYSTEM_RESET_inferred_i_1__0
       (.I0(out),
        .O(gt0_tx_system_reset_c));
  FDRE \TXCTRL_OUT_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\txctrl_reg_reg_n_0_[0] ),
        .Q(gt0_txcharisk_in),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_15),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_5),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_4),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_3),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_2),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_1),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_0),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_14),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_13),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_12),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_11),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_10),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_9),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_8),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_7),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_6),
        .Q(Q[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[10]_i_1 
       (.I0(bit_pointer[9]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[11]_i_1 
       (.I0(bit_pointer[10]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[12]_i_1 
       (.I0(bit_pointer[11]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[13]_i_1 
       (.I0(bit_pointer[12]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[14]_i_1 
       (.I0(bit_pointer[13]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[15]_i_1 
       (.I0(bit_pointer[14]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[1]_i_1 
       (.I0(bit_pointer[0]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[2]_i_1 
       (.I0(bit_pointer[1]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[3]_i_1 
       (.I0(bit_pointer[2]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[4]_i_1 
       (.I0(bit_pointer[3]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[5]_i_1 
       (.I0(bit_pointer[4]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[6]_i_1 
       (.I0(bit_pointer[5]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[7]_i_1 
       (.I0(bit_pointer[6]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[8]_i_1 
       (.I0(bit_pointer[7]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[9]_i_1 
       (.I0(bit_pointer[8]),
        .I1(bit_pointer[15]),
        .O(\bit_pointer[9]_i_1_n_0 ));
  FDSE \bit_pointer_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(bit_pointer[15]),
        .Q(bit_pointer[0]),
        .S(clear));
  FDRE \bit_pointer_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[10]_i_1_n_0 ),
        .Q(bit_pointer[10]),
        .R(clear));
  FDRE \bit_pointer_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[11]_i_1_n_0 ),
        .Q(bit_pointer[11]),
        .R(clear));
  FDRE \bit_pointer_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[12]_i_1_n_0 ),
        .Q(bit_pointer[12]),
        .R(clear));
  FDRE \bit_pointer_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[13]_i_1_n_0 ),
        .Q(bit_pointer[13]),
        .R(clear));
  FDRE \bit_pointer_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[14]_i_1_n_0 ),
        .Q(bit_pointer[14]),
        .R(clear));
  FDRE \bit_pointer_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[15]_i_1_n_0 ),
        .Q(bit_pointer[15]),
        .R(clear));
  FDRE \bit_pointer_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[1]_i_1_n_0 ),
        .Q(bit_pointer[1]),
        .R(clear));
  FDRE \bit_pointer_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[2]_i_1_n_0 ),
        .Q(bit_pointer[2]),
        .R(clear));
  FDRE \bit_pointer_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[3]_i_1_n_0 ),
        .Q(bit_pointer[3]),
        .R(clear));
  FDRE \bit_pointer_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[4]_i_1_n_0 ),
        .Q(bit_pointer[4]),
        .R(clear));
  FDRE \bit_pointer_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[5]_i_1_n_0 ),
        .Q(bit_pointer[5]),
        .R(clear));
  FDRE \bit_pointer_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[6]_i_1_n_0 ),
        .Q(bit_pointer[6]),
        .R(clear));
  FDRE \bit_pointer_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[7]_i_1_n_0 ),
        .Q(bit_pointer[7]),
        .R(clear));
  FDRE \bit_pointer_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[8]_i_1_n_0 ),
        .Q(bit_pointer[8]),
        .R(clear));
  FDRE \bit_pointer_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[9]_i_1_n_0 ),
        .Q(bit_pointer[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'hCF00CCCC55555555)) 
    \block_word_cnt[0]_i_1__1 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt[1]_i_3__0_n_0 ),
        .I2(ECC_CODE_EN),
        .I3(\block_word_cnt[1]_i_5_n_0 ),
        .I4(\block_word_cnt[1]_i_4__1_n_0 ),
        .I5(\block_word_cnt[4]_i_2_n_0 ),
        .O(\block_word_cnt[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hC0BFFFFFC0BF0000)) 
    \block_word_cnt[1]_i_1__1 
       (.I0(\block_word_cnt[1]_i_2__1_n_0 ),
        .I1(\block_word_cnt[1]_i_3__0_n_0 ),
        .I2(\block_word_cnt[1]_i_4__1_n_0 ),
        .I3(\block_word_cnt[1]_i_5_n_0 ),
        .I4(\block_word_cnt[4]_i_2_n_0 ),
        .I5(\block_word_cnt[1]_i_6__0_n_0 ),
        .O(\block_word_cnt[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \block_word_cnt[1]_i_2__1 
       (.I0(\txctrl_reg[0]_i_2_n_0 ),
        .I1(\block_word_cnt[1]_i_7__0_n_0 ),
        .I2(test_init_cnt_reg[7]),
        .I3(test_init_cnt_reg[9]),
        .I4(test_init_cnt_reg[15]),
        .I5(test_init_cnt_reg[10]),
        .O(\block_word_cnt[1]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT5 #(
    .INIT(32'hEFCFFFEF)) 
    \block_word_cnt[1]_i_3__0 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .O(\block_word_cnt[1]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'hFBFBFBEF)) 
    \block_word_cnt[1]_i_4__1 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(\block_word_cnt[1]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'h0440)) 
    \block_word_cnt[1]_i_5 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .O(\block_word_cnt[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \block_word_cnt[1]_i_6__0 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .O(\block_word_cnt[1]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \block_word_cnt[1]_i_7__0 
       (.I0(test_init_cnt_reg[8]),
        .I1(test_init_cnt_reg[14]),
        .I2(test_init_cnt_reg[4]),
        .I3(test_init_cnt_reg[13]),
        .I4(\test_init_cnt[0]_i_8__0_n_0 ),
        .O(\block_word_cnt[1]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h404F4F404F404F40)) 
    \block_word_cnt[2]_i_1__1 
       (.I0(\block_word_cnt[2]_i_2_n_0 ),
        .I1(\block_word_cnt[2]_i_3_n_0 ),
        .I2(\block_word_cnt[4]_i_2_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[0] ),
        .I5(\block_word_cnt_reg_n_0_[1] ),
        .O(\block_word_cnt[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF70FFFFF)) 
    \block_word_cnt[2]_i_2 
       (.I0(ECC_CODE_EN),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \block_word_cnt[2]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \block_word_cnt[3]_i_1__1 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .O(\block_word_cnt[3]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h22A80222)) 
    \block_word_cnt[4]_i_2 
       (.I0(\tx_data_reg[15]_i_2_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .O(\block_word_cnt[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \block_word_cnt[4]_i_3__1 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(\block_word_cnt[4]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000360000001600)) 
    \block_word_cnt[4]_i_4__0 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .I4(\block_word_cnt_reg_n_0_[3] ),
        .I5(ECC_CODE_EN),
        .O(\block_word_cnt[4]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \block_word_cnt[5]_i_1__0 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(\block_word_cnt_reg_n_0_[5] ),
        .O(\block_word_cnt[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hA6AAAAAAAAAAAAAA)) 
    \block_word_cnt[6]_i_1__1 
       (.I0(\block_word_cnt_reg_n_0_[6] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt[6]_i_2_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(\block_word_cnt_reg_n_0_[5] ),
        .O(\block_word_cnt[6]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \block_word_cnt[6]_i_2 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .O(\block_word_cnt[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \block_word_cnt[7]_i_1__1 
       (.I0(system_reset_r2),
        .I1(TEST_RESET),
        .O(clear));
  LUT3 #(
    .INIT(8'h6A)) 
    \block_word_cnt[7]_i_2__0 
       (.I0(\block_word_cnt_reg_n_0_[7] ),
        .I1(\block_word_cnt[7]_i_3__0_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[6] ),
        .O(\block_word_cnt[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \block_word_cnt[7]_i_3__0 
       (.I0(\block_word_cnt_reg_n_0_[5] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[0] ),
        .I5(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[7]_i_3__0_n_0 ));
  FDRE \block_word_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[0]_i_1__1_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[0] ),
        .R(clear));
  FDRE \block_word_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[1]_i_1__1_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[1] ),
        .R(clear));
  FDRE \block_word_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[2]_i_1__1_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[2] ),
        .R(clear));
  FDRE \block_word_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[3]_i_1__1_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[3] ),
        .R(clear));
  FDRE \block_word_cnt_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt_reg[4]_i_1__0_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[4] ),
        .R(clear));
  MUXF7 \block_word_cnt_reg[4]_i_1__0 
       (.I0(\block_word_cnt[4]_i_3__1_n_0 ),
        .I1(\block_word_cnt[4]_i_4__0_n_0 ),
        .O(\block_word_cnt_reg[4]_i_1__0_n_0 ),
        .S(\block_word_cnt[4]_i_2_n_0 ));
  FDRE \block_word_cnt_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[5]_i_1__0_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[5] ),
        .R(clear));
  FDRE \block_word_cnt_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[6]_i_1__1_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[6] ),
        .R(clear));
  FDRE \block_word_cnt_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[7]_i_2__0_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[7] ),
        .R(clear));
  LUT3 #(
    .INIT(8'hD1)) 
    data_word_valid_i_1__0
       (.I0(\tx_data_reg[14]_i_2_n_0 ),
        .I1(sel),
        .I2(data_word_valid),
        .O(data_word_valid_i_1__0_n_0));
  FDRE data_word_valid_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(data_word_valid_i_1__0_n_0),
        .Q(data_word_valid),
        .R(clear));
  LUT6 #(
    .INIT(64'hFFFF33FF00003200)) 
    encoder_rst_reg_i_1
       (.I0(\block_word_cnt[1]_i_2__1_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\tx_data_reg[9]_i_3_n_0 ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .I5(encoder_rst_reg),
        .O(encoder_rst_reg_i_1_n_0));
  FDSE encoder_rst_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(encoder_rst_reg_i_1_n_0),
        .Q(encoder_rst_reg),
        .S(clear));
  gtx3g_bert_0_error_insertion_34 error_insertion_inst_1
       (.D({error_insertion_inst_1_n_0,error_insertion_inst_1_n_1,error_insertion_inst_1_n_2,error_insertion_inst_1_n_3,error_insertion_inst_1_n_4,error_insertion_inst_1_n_5,error_insertion_inst_1_n_6,error_insertion_inst_1_n_7,error_insertion_inst_1_n_8,error_insertion_inst_1_n_9,error_insertion_inst_1_n_10,error_insertion_inst_1_n_11,error_insertion_inst_1_n_12,error_insertion_inst_1_n_13,error_insertion_inst_1_n_14,error_insertion_inst_1_n_15}),
        .GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(tx_data_reg),
        .TEST_RESET(TEST_RESET),
        .\bit_pointer_reg[15] (bit_pointer),
        .error_insertion_rst_reg(error_insertion_rst_reg),
        .out(system_reset_r2),
        .\txctrl_reg_reg[0] (\txctrl_reg_reg_n_0_[0] ),
        .word_cnt_reg(word_cnt_reg));
  LUT6 #(
    .INIT(64'hAAAAAAA8AAAAAAAA)) 
    error_insertion_rst_reg_i_1
       (.I0(error_insertion_rst_reg),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\tx_data_reg[11]_i_2__0_n_0 ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(\block_word_cnt[1]_i_2__1_n_0 ),
        .O(error_insertion_rst_reg_i_1_n_0));
  FDSE error_insertion_rst_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_rst_reg_i_1_n_0),
        .Q(error_insertion_rst_reg),
        .S(clear));
  gtx3g_bert_0_parity_encoder_35 parity_encoder_inst_1
       (.D({parity_encoder_inst_1_n_0,parity_encoder_inst_1_n_1,parity_encoder_inst_1_n_2,parity_encoder_inst_1_n_3,parity_encoder_inst_1_n_4,parity_encoder_inst_1_n_5}),
        .GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(tx_data_reg),
        .SR(encoder_rst_reg),
        .\block_word_cnt_reg[0] (pattern_gen_inst_1_n_19),
        .\block_word_cnt_reg[1] (\tx_data_reg[11]_i_5_n_0 ),
        .\block_word_cnt_reg[2] (\tx_data_reg[11]_i_2__0_n_0 ),
        .\block_word_cnt_reg[2]_0 (\tx_data_reg[11]_i_4_n_0 ),
        .\block_word_cnt_reg[3] (\tx_data_reg[15]_i_2_n_0 ),
        .\block_word_cnt_reg[4] (\tx_data_reg[15]_i_3_n_0 ),
        .\block_word_cnt_reg[4]_0 ({\block_word_cnt_reg_n_0_[4] ,\block_word_cnt_reg_n_0_[2] ,\block_word_cnt_reg_n_0_[1] ,\block_word_cnt_reg_n_0_[0] }),
        .\block_word_cnt_reg[4]_1 (\tx_data_reg[1]_i_2__0_n_0 ),
        .\block_word_cnt_reg[4]_2 (\tx_data_reg[1]_i_3_n_0 ),
        .\block_word_cnt_reg[4]_3 (pattern_gen_inst_1_n_17),
        .\block_word_cnt_reg[4]_4 (\tx_data_reg[0]_i_4_n_0 ),
        .\block_word_cnt_reg[4]_5 (\tx_data_reg[9]_i_5_n_0 ),
        .\block_word_cnt_reg[4]_6 (\tx_data_reg[14]_i_2_n_0 ),
        .data_word_valid(data_word_valid),
        .\pattern_reg_reg[0] (pattern_gen_inst_1_n_20),
        .\pattern_reg_reg[12] (pattern_gen_inst_1_n_18),
        .\pattern_reg_reg[15] ({pattern_word[15],pattern_word[11:7],pattern_word[5]}),
        .test_init_cnt_reg({test_init_cnt_reg[15],test_init_cnt_reg[12:10],test_init_cnt_reg[0]}),
        .\tx_data_reg_reg[13] (parity_encoder_inst_1_n_14),
        .\tx_data_reg_reg[14] (parity_encoder_inst_1_n_15),
        .\tx_data_reg_reg[2] (parity_encoder_inst_1_n_10),
        .\tx_data_reg_reg[3] (parity_encoder_inst_1_n_11),
        .\tx_data_reg_reg[4] (parity_encoder_inst_1_n_12),
        .\tx_data_reg_reg[5] (parity_encoder_inst_1_n_6),
        .\tx_data_reg_reg[6] (parity_encoder_inst_1_n_13),
        .\tx_data_reg_reg[7] (parity_encoder_inst_1_n_7),
        .\tx_data_reg_reg[8] (parity_encoder_inst_1_n_8),
        .\tx_data_reg_reg[9] (parity_encoder_inst_1_n_9));
  gtx3g_bert_0_pattern_gen_36 pattern_gen_inst_1
       (.D({pattern_gen_inst_1_n_0,pattern_gen_inst_1_n_1,pattern_gen_inst_1_n_2,pattern_gen_inst_1_n_3,pattern_gen_inst_1_n_4,pattern_gen_inst_1_n_5,pattern_gen_inst_1_n_6,pattern_gen_inst_1_n_7,pattern_gen_inst_1_n_8,pattern_gen_inst_1_n_9}),
        .GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .PATTERN_MODE(PATTERN_MODE),
        .Q({pattern_word[15],pattern_word[11:7],pattern_word[5]}),
        .\block_word_cnt_reg[1] (\tx_data_reg[2]_i_4_n_0 ),
        .\block_word_cnt_reg[1]_0 (\block_word_cnt[6]_i_2_n_0 ),
        .\block_word_cnt_reg[1]_1 (\tx_data_reg[9]_i_3_n_0 ),
        .\block_word_cnt_reg[2] (\tx_data_reg[4]_i_3_n_0 ),
        .\block_word_cnt_reg[2]_0 (\tx_data_reg[9]_i_2_n_0 ),
        .\block_word_cnt_reg[2]_1 (\tx_data_reg[14]_i_3_n_0 ),
        .\block_word_cnt_reg[2]_2 (\tx_data_reg[11]_i_2__0_n_0 ),
        .\block_word_cnt_reg[2]_3 (\tx_data_reg[3]_i_2_n_0 ),
        .\block_word_cnt_reg[3] (\tx_data_reg[15]_i_2_n_0 ),
        .\block_word_cnt_reg[4] ({\block_word_cnt_reg_n_0_[4] ,\block_word_cnt_reg_n_0_[2] ,\block_word_cnt_reg_n_0_[1] ,\block_word_cnt_reg_n_0_[0] }),
        .\block_word_cnt_reg[4]_0 (\tx_data_reg[15]_i_3_n_0 ),
        .\block_word_cnt_reg[4]_1 (\tx_data_reg[14]_i_2_n_0 ),
        .\block_word_cnt_reg[4]_2 (\tx_data_reg[3]_i_3_n_0 ),
        .\hor_parity_word_reg_reg[3] (parity_encoder_inst_1_n_11),
        .\hor_parity_word_reg_reg[6] (parity_encoder_inst_1_n_13),
        .\hor_parity_word_reg_reg[8] (parity_encoder_inst_1_n_8),
        .pattern_pause_reg(pattern_pause_reg),
        .\pattern_reg_reg[5]_0 (parity_encoder_inst_1_n_6),
        .\pattern_reg_reg[7]_0 (parity_encoder_inst_1_n_7),
        .\pattern_reg_reg[9]_0 (parity_encoder_inst_1_n_9),
        .pattern_rst_reg(pattern_rst_reg),
        .test_init_cnt_reg({test_init_cnt_reg[14:13],test_init_cnt_reg[9:4],test_init_cnt_reg[1]}),
        .test_init_cnt_reg_3__s_port_(\txctrl_reg[0]_i_2_n_0 ),
        .\tx_data_reg_reg[0] (pattern_gen_inst_1_n_20),
        .\tx_data_reg_reg[12] (pattern_gen_inst_1_n_18),
        .\tx_data_reg_reg[1] (pattern_gen_inst_1_n_17),
        .\tx_data_reg_reg[1]_0 (pattern_gen_inst_1_n_19),
        .\ver_parity_word_reg_reg[13] (parity_encoder_inst_1_n_14),
        .\ver_parity_word_reg_reg[14] (parity_encoder_inst_1_n_15),
        .\ver_parity_word_reg_reg[2] (parity_encoder_inst_1_n_10),
        .\ver_parity_word_reg_reg[4] (parity_encoder_inst_1_n_12));
  LUT4 #(
    .INIT(16'hF808)) 
    pattern_pause_reg_i_1__0
       (.I0(pattern_pause_reg_i_2__0_n_0),
        .I1(\block_word_cnt[4]_i_2_n_0 ),
        .I2(sel),
        .I3(pattern_pause_reg),
        .O(pattern_pause_reg_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'h04044440)) 
    pattern_pause_reg_i_2__0
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(pattern_pause_reg_i_2__0_n_0));
  FDSE pattern_pause_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_pause_reg_i_1__0_n_0),
        .Q(pattern_pause_reg),
        .S(clear));
  FDRE pattern_rst_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(clear),
        .Q(pattern_rst_reg),
        .R(1'b0));
  (* ASYNC_REG *) 
  FDRE system_reset_r2_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(system_reset_r),
        .Q(system_reset_r2),
        .R(1'b0));
  (* ASYNC_REG *) 
  FDRE system_reset_r_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(gt0_tx_system_reset_c),
        .Q(system_reset_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000001101)) 
    \test_init_cnt[0]_i_1 
       (.I0(\tx_data_reg[11]_i_2__0_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\txctrl_reg[0]_i_2_n_0 ),
        .I3(\test_init_cnt[0]_i_3_n_0 ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .I5(\block_word_cnt_reg_n_0_[0] ),
        .O(sel));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \test_init_cnt[0]_i_3 
       (.I0(test_init_cnt_reg[10]),
        .I1(test_init_cnt_reg[15]),
        .I2(test_init_cnt_reg[9]),
        .I3(test_init_cnt_reg[7]),
        .I4(\test_init_cnt[0]_i_8__0_n_0 ),
        .I5(\test_init_cnt[0]_i_9_n_0 ),
        .O(\test_init_cnt[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[0]_i_4 
       (.I0(test_init_cnt_reg[3]),
        .O(\test_init_cnt[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[0]_i_5 
       (.I0(test_init_cnt_reg[2]),
        .O(\test_init_cnt[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[0]_i_6 
       (.I0(test_init_cnt_reg[1]),
        .O(\test_init_cnt[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[0]_i_7 
       (.I0(test_init_cnt_reg[0]),
        .O(\test_init_cnt[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \test_init_cnt[0]_i_8__0 
       (.I0(test_init_cnt_reg[12]),
        .I1(test_init_cnt_reg[6]),
        .I2(test_init_cnt_reg[5]),
        .I3(test_init_cnt_reg[11]),
        .O(\test_init_cnt[0]_i_8__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \test_init_cnt[0]_i_9 
       (.I0(test_init_cnt_reg[13]),
        .I1(test_init_cnt_reg[4]),
        .I2(test_init_cnt_reg[14]),
        .I3(test_init_cnt_reg[8]),
        .O(\test_init_cnt[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[12]_i_2 
       (.I0(test_init_cnt_reg[15]),
        .O(\test_init_cnt[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[12]_i_3 
       (.I0(test_init_cnt_reg[14]),
        .O(\test_init_cnt[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[12]_i_4 
       (.I0(test_init_cnt_reg[13]),
        .O(\test_init_cnt[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[12]_i_5 
       (.I0(test_init_cnt_reg[12]),
        .O(\test_init_cnt[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[4]_i_2 
       (.I0(test_init_cnt_reg[7]),
        .O(\test_init_cnt[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[4]_i_3 
       (.I0(test_init_cnt_reg[6]),
        .O(\test_init_cnt[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[4]_i_4 
       (.I0(test_init_cnt_reg[5]),
        .O(\test_init_cnt[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[4]_i_5 
       (.I0(test_init_cnt_reg[4]),
        .O(\test_init_cnt[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[8]_i_2 
       (.I0(test_init_cnt_reg[11]),
        .O(\test_init_cnt[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[8]_i_3 
       (.I0(test_init_cnt_reg[10]),
        .O(\test_init_cnt[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[8]_i_4 
       (.I0(test_init_cnt_reg[9]),
        .O(\test_init_cnt[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[8]_i_5 
       (.I0(test_init_cnt_reg[8]),
        .O(\test_init_cnt[8]_i_5_n_0 ));
  FDRE \test_init_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[0]_i_2_n_7 ),
        .Q(test_init_cnt_reg[0]),
        .R(clear));
  CARRY4 \test_init_cnt_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\test_init_cnt_reg[0]_i_2_n_0 ,\test_init_cnt_reg[0]_i_2_n_1 ,\test_init_cnt_reg[0]_i_2_n_2 ,\test_init_cnt_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\test_init_cnt_reg[0]_i_2_n_4 ,\test_init_cnt_reg[0]_i_2_n_5 ,\test_init_cnt_reg[0]_i_2_n_6 ,\test_init_cnt_reg[0]_i_2_n_7 }),
        .S({\test_init_cnt[0]_i_4_n_0 ,\test_init_cnt[0]_i_5_n_0 ,\test_init_cnt[0]_i_6_n_0 ,\test_init_cnt[0]_i_7_n_0 }));
  FDRE \test_init_cnt_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[8]_i_1_n_5 ),
        .Q(test_init_cnt_reg[10]),
        .R(clear));
  FDRE \test_init_cnt_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[8]_i_1_n_4 ),
        .Q(test_init_cnt_reg[11]),
        .R(clear));
  FDRE \test_init_cnt_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[12]_i_1_n_7 ),
        .Q(test_init_cnt_reg[12]),
        .R(clear));
  CARRY4 \test_init_cnt_reg[12]_i_1 
       (.CI(\test_init_cnt_reg[8]_i_1_n_0 ),
        .CO({\NLW_test_init_cnt_reg[12]_i_1_CO_UNCONNECTED [3],\test_init_cnt_reg[12]_i_1_n_1 ,\test_init_cnt_reg[12]_i_1_n_2 ,\test_init_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\test_init_cnt_reg[12]_i_1_n_4 ,\test_init_cnt_reg[12]_i_1_n_5 ,\test_init_cnt_reg[12]_i_1_n_6 ,\test_init_cnt_reg[12]_i_1_n_7 }),
        .S({\test_init_cnt[12]_i_2_n_0 ,\test_init_cnt[12]_i_3_n_0 ,\test_init_cnt[12]_i_4_n_0 ,\test_init_cnt[12]_i_5_n_0 }));
  FDRE \test_init_cnt_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[12]_i_1_n_6 ),
        .Q(test_init_cnt_reg[13]),
        .R(clear));
  FDRE \test_init_cnt_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[12]_i_1_n_5 ),
        .Q(test_init_cnt_reg[14]),
        .R(clear));
  FDRE \test_init_cnt_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[12]_i_1_n_4 ),
        .Q(test_init_cnt_reg[15]),
        .R(clear));
  FDRE \test_init_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[0]_i_2_n_6 ),
        .Q(test_init_cnt_reg[1]),
        .R(clear));
  FDRE \test_init_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[0]_i_2_n_5 ),
        .Q(test_init_cnt_reg[2]),
        .R(clear));
  FDRE \test_init_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[0]_i_2_n_4 ),
        .Q(test_init_cnt_reg[3]),
        .R(clear));
  FDRE \test_init_cnt_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[4]_i_1_n_7 ),
        .Q(test_init_cnt_reg[4]),
        .R(clear));
  CARRY4 \test_init_cnt_reg[4]_i_1 
       (.CI(\test_init_cnt_reg[0]_i_2_n_0 ),
        .CO({\test_init_cnt_reg[4]_i_1_n_0 ,\test_init_cnt_reg[4]_i_1_n_1 ,\test_init_cnt_reg[4]_i_1_n_2 ,\test_init_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\test_init_cnt_reg[4]_i_1_n_4 ,\test_init_cnt_reg[4]_i_1_n_5 ,\test_init_cnt_reg[4]_i_1_n_6 ,\test_init_cnt_reg[4]_i_1_n_7 }),
        .S({\test_init_cnt[4]_i_2_n_0 ,\test_init_cnt[4]_i_3_n_0 ,\test_init_cnt[4]_i_4_n_0 ,\test_init_cnt[4]_i_5_n_0 }));
  FDRE \test_init_cnt_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[4]_i_1_n_6 ),
        .Q(test_init_cnt_reg[5]),
        .R(clear));
  FDSE \test_init_cnt_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[4]_i_1_n_5 ),
        .Q(test_init_cnt_reg[6]),
        .S(clear));
  FDRE \test_init_cnt_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[4]_i_1_n_4 ),
        .Q(test_init_cnt_reg[7]),
        .R(clear));
  FDRE \test_init_cnt_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[8]_i_1_n_7 ),
        .Q(test_init_cnt_reg[8]),
        .R(clear));
  CARRY4 \test_init_cnt_reg[8]_i_1 
       (.CI(\test_init_cnt_reg[4]_i_1_n_0 ),
        .CO({\test_init_cnt_reg[8]_i_1_n_0 ,\test_init_cnt_reg[8]_i_1_n_1 ,\test_init_cnt_reg[8]_i_1_n_2 ,\test_init_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\test_init_cnt_reg[8]_i_1_n_4 ,\test_init_cnt_reg[8]_i_1_n_5 ,\test_init_cnt_reg[8]_i_1_n_6 ,\test_init_cnt_reg[8]_i_1_n_7 }),
        .S({\test_init_cnt[8]_i_2_n_0 ,\test_init_cnt[8]_i_3_n_0 ,\test_init_cnt[8]_i_4_n_0 ,\test_init_cnt[8]_i_5_n_0 }));
  FDRE \test_init_cnt_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(sel),
        .D(\test_init_cnt_reg[8]_i_1_n_6 ),
        .Q(test_init_cnt_reg[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \tx_data_reg[0]_i_4 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[6] ),
        .I3(\block_word_cnt_reg_n_0_[7] ),
        .I4(\block_word_cnt_reg_n_0_[5] ),
        .I5(\block_word_cnt_reg_n_0_[2] ),
        .O(\tx_data_reg[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \tx_data_reg[11]_i_2__0 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[5] ),
        .I2(\block_word_cnt_reg_n_0_[7] ),
        .I3(\block_word_cnt_reg_n_0_[6] ),
        .I4(\block_word_cnt_reg_n_0_[3] ),
        .O(\tx_data_reg[11]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT5 #(
    .INIT(32'h00028282)) 
    \tx_data_reg[11]_i_4 
       (.I0(\tx_data_reg[15]_i_2_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .O(\tx_data_reg[11]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \tx_data_reg[11]_i_5 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\tx_data_reg[15]_i_2_n_0 ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(\tx_data_reg[11]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h00888222)) 
    \tx_data_reg[14]_i_2 
       (.I0(\tx_data_reg[15]_i_2_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(\tx_data_reg[14]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \tx_data_reg[14]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\tx_data_reg[15]_i_3_n_0 ),
        .O(\tx_data_reg[14]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \tx_data_reg[15]_i_2 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[6] ),
        .I2(\block_word_cnt_reg_n_0_[7] ),
        .I3(\block_word_cnt_reg_n_0_[5] ),
        .O(\tx_data_reg[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAAB)) 
    \tx_data_reg[15]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(test_init_cnt_reg[3]),
        .I2(test_init_cnt_reg[1]),
        .I3(test_init_cnt_reg[0]),
        .I4(test_init_cnt_reg[2]),
        .I5(\tx_data_reg[15]_i_5_n_0 ),
        .O(\tx_data_reg[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_data_reg[15]_i_5 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .O(\tx_data_reg[15]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    \tx_data_reg[1]_i_2__0 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .O(\tx_data_reg[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \tx_data_reg[1]_i_3 
       (.I0(\tx_data_reg[15]_i_2_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .O(\tx_data_reg[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hABABABABABABABAA)) 
    \tx_data_reg[2]_i_4 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(test_init_cnt_reg[2]),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(test_init_cnt_reg[3]),
        .I4(test_init_cnt_reg[0]),
        .I5(test_init_cnt_reg[1]),
        .O(\tx_data_reg[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAAA)) 
    \tx_data_reg[3]_i_2 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .I4(test_init_cnt_reg[3]),
        .I5(\tx_data_reg[3]_i_5_n_0 ),
        .O(\tx_data_reg[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h95)) 
    \tx_data_reg[3]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .O(\tx_data_reg[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \tx_data_reg[3]_i_5 
       (.I0(test_init_cnt_reg[2]),
        .I1(test_init_cnt_reg[0]),
        .I2(test_init_cnt_reg[1]),
        .O(\tx_data_reg[3]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    \tx_data_reg[4]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .O(\tx_data_reg[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'hEAAA)) 
    \tx_data_reg[9]_i_2 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .O(\tx_data_reg[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'h002A)) 
    \tx_data_reg[9]_i_3 
       (.I0(\tx_data_reg[15]_i_2_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .O(\tx_data_reg[9]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'h08AA)) 
    \tx_data_reg[9]_i_5 
       (.I0(\tx_data_reg[15]_i_2_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .O(\tx_data_reg[9]_i_5_n_0 ));
  FDRE \tx_data_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_5),
        .Q(tx_data_reg[0]),
        .R(clear));
  FDRE \tx_data_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_3),
        .Q(tx_data_reg[10]),
        .R(clear));
  FDRE \tx_data_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_2),
        .Q(tx_data_reg[11]),
        .R(clear));
  FDRE \tx_data_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_1),
        .Q(tx_data_reg[12]),
        .R(clear));
  FDRE \tx_data_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_1),
        .Q(tx_data_reg[13]),
        .R(clear));
  FDRE \tx_data_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_0),
        .Q(tx_data_reg[14]),
        .R(clear));
  FDRE \tx_data_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_0),
        .Q(tx_data_reg[15]),
        .R(clear));
  FDRE \tx_data_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_4),
        .Q(tx_data_reg[1]),
        .R(clear));
  FDRE \tx_data_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_9),
        .Q(tx_data_reg[2]),
        .R(clear));
  FDRE \tx_data_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_8),
        .Q(tx_data_reg[3]),
        .R(clear));
  FDRE \tx_data_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_7),
        .Q(tx_data_reg[4]),
        .R(clear));
  FDRE \tx_data_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_6),
        .Q(tx_data_reg[5]),
        .R(clear));
  FDRE \tx_data_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_5),
        .Q(tx_data_reg[6]),
        .R(clear));
  FDRE \tx_data_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_4),
        .Q(tx_data_reg[7]),
        .R(clear));
  FDRE \tx_data_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_3),
        .Q(tx_data_reg[8]),
        .R(clear));
  FDRE \tx_data_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_2),
        .Q(tx_data_reg[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000C33200000000)) 
    \txctrl_reg[0]_i_1 
       (.I0(\txctrl_reg[0]_i_2_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .I5(\tx_data_reg[15]_i_2_n_0 ),
        .O(txctrl_reg0));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \txctrl_reg[0]_i_2 
       (.I0(test_init_cnt_reg[3]),
        .I1(test_init_cnt_reg[1]),
        .I2(test_init_cnt_reg[0]),
        .I3(test_init_cnt_reg[2]),
        .O(\txctrl_reg[0]_i_2_n_0 ));
  FDRE \txctrl_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(txctrl_reg0),
        .Q(\txctrl_reg_reg_n_0_[0] ),
        .R(clear));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[0]_i_2 
       (.I0(word_cnt_reg[3]),
        .O(\word_cnt[0]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[0]_i_3 
       (.I0(word_cnt_reg[2]),
        .O(\word_cnt[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[0]_i_4 
       (.I0(word_cnt_reg[1]),
        .O(\word_cnt[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \word_cnt[0]_i_5 
       (.I0(word_cnt_reg[0]),
        .O(\word_cnt[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[12]_i_2 
       (.I0(word_cnt_reg[15]),
        .O(\word_cnt[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[12]_i_3 
       (.I0(word_cnt_reg[14]),
        .O(\word_cnt[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[12]_i_4 
       (.I0(word_cnt_reg[13]),
        .O(\word_cnt[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[12]_i_5 
       (.I0(word_cnt_reg[12]),
        .O(\word_cnt[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[16]_i_2 
       (.I0(word_cnt_reg[19]),
        .O(\word_cnt[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[16]_i_3 
       (.I0(word_cnt_reg[18]),
        .O(\word_cnt[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[16]_i_4 
       (.I0(word_cnt_reg[17]),
        .O(\word_cnt[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[16]_i_5 
       (.I0(word_cnt_reg[16]),
        .O(\word_cnt[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[20]_i_2 
       (.I0(word_cnt_reg[23]),
        .O(\word_cnt[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[20]_i_3 
       (.I0(word_cnt_reg[22]),
        .O(\word_cnt[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[20]_i_4 
       (.I0(word_cnt_reg[21]),
        .O(\word_cnt[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[20]_i_5 
       (.I0(word_cnt_reg[20]),
        .O(\word_cnt[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[24]_i_2 
       (.I0(word_cnt_reg[27]),
        .O(\word_cnt[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[24]_i_3 
       (.I0(word_cnt_reg[26]),
        .O(\word_cnt[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[24]_i_4 
       (.I0(word_cnt_reg[25]),
        .O(\word_cnt[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[24]_i_5 
       (.I0(word_cnt_reg[24]),
        .O(\word_cnt[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[28]_i_2 
       (.I0(word_cnt_reg[31]),
        .O(\word_cnt[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[28]_i_3 
       (.I0(word_cnt_reg[30]),
        .O(\word_cnt[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[28]_i_4 
       (.I0(word_cnt_reg[29]),
        .O(\word_cnt[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[28]_i_5 
       (.I0(word_cnt_reg[28]),
        .O(\word_cnt[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[4]_i_2 
       (.I0(word_cnt_reg[7]),
        .O(\word_cnt[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[4]_i_3 
       (.I0(word_cnt_reg[6]),
        .O(\word_cnt[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[4]_i_4 
       (.I0(word_cnt_reg[5]),
        .O(\word_cnt[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[4]_i_5 
       (.I0(word_cnt_reg[4]),
        .O(\word_cnt[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[8]_i_2 
       (.I0(word_cnt_reg[11]),
        .O(\word_cnt[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[8]_i_3 
       (.I0(word_cnt_reg[10]),
        .O(\word_cnt[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[8]_i_4 
       (.I0(word_cnt_reg[9]),
        .O(\word_cnt[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[8]_i_5 
       (.I0(word_cnt_reg[8]),
        .O(\word_cnt[8]_i_5_n_0 ));
  FDRE \word_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[0]_i_1_n_7 ),
        .Q(word_cnt_reg[0]),
        .R(clear));
  CARRY4 \word_cnt_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\word_cnt_reg[0]_i_1_n_0 ,\word_cnt_reg[0]_i_1_n_1 ,\word_cnt_reg[0]_i_1_n_2 ,\word_cnt_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\word_cnt_reg[0]_i_1_n_4 ,\word_cnt_reg[0]_i_1_n_5 ,\word_cnt_reg[0]_i_1_n_6 ,\word_cnt_reg[0]_i_1_n_7 }),
        .S({\word_cnt[0]_i_2_n_0 ,\word_cnt[0]_i_3_n_0 ,\word_cnt[0]_i_4_n_0 ,\word_cnt[0]_i_5_n_0 }));
  FDRE \word_cnt_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[8]_i_1_n_5 ),
        .Q(word_cnt_reg[10]),
        .R(clear));
  FDRE \word_cnt_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[8]_i_1_n_4 ),
        .Q(word_cnt_reg[11]),
        .R(clear));
  FDRE \word_cnt_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[12]_i_1_n_7 ),
        .Q(word_cnt_reg[12]),
        .R(clear));
  CARRY4 \word_cnt_reg[12]_i_1 
       (.CI(\word_cnt_reg[8]_i_1_n_0 ),
        .CO({\word_cnt_reg[12]_i_1_n_0 ,\word_cnt_reg[12]_i_1_n_1 ,\word_cnt_reg[12]_i_1_n_2 ,\word_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[12]_i_1_n_4 ,\word_cnt_reg[12]_i_1_n_5 ,\word_cnt_reg[12]_i_1_n_6 ,\word_cnt_reg[12]_i_1_n_7 }),
        .S({\word_cnt[12]_i_2_n_0 ,\word_cnt[12]_i_3_n_0 ,\word_cnt[12]_i_4_n_0 ,\word_cnt[12]_i_5_n_0 }));
  FDRE \word_cnt_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[12]_i_1_n_6 ),
        .Q(word_cnt_reg[13]),
        .R(clear));
  FDRE \word_cnt_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[12]_i_1_n_5 ),
        .Q(word_cnt_reg[14]),
        .R(clear));
  FDRE \word_cnt_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[12]_i_1_n_4 ),
        .Q(word_cnt_reg[15]),
        .R(clear));
  FDRE \word_cnt_reg[16] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[16]_i_1_n_7 ),
        .Q(word_cnt_reg[16]),
        .R(clear));
  CARRY4 \word_cnt_reg[16]_i_1 
       (.CI(\word_cnt_reg[12]_i_1_n_0 ),
        .CO({\word_cnt_reg[16]_i_1_n_0 ,\word_cnt_reg[16]_i_1_n_1 ,\word_cnt_reg[16]_i_1_n_2 ,\word_cnt_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[16]_i_1_n_4 ,\word_cnt_reg[16]_i_1_n_5 ,\word_cnt_reg[16]_i_1_n_6 ,\word_cnt_reg[16]_i_1_n_7 }),
        .S({\word_cnt[16]_i_2_n_0 ,\word_cnt[16]_i_3_n_0 ,\word_cnt[16]_i_4_n_0 ,\word_cnt[16]_i_5_n_0 }));
  FDRE \word_cnt_reg[17] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[16]_i_1_n_6 ),
        .Q(word_cnt_reg[17]),
        .R(clear));
  FDRE \word_cnt_reg[18] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[16]_i_1_n_5 ),
        .Q(word_cnt_reg[18]),
        .R(clear));
  FDRE \word_cnt_reg[19] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[16]_i_1_n_4 ),
        .Q(word_cnt_reg[19]),
        .R(clear));
  FDRE \word_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[0]_i_1_n_6 ),
        .Q(word_cnt_reg[1]),
        .R(clear));
  FDRE \word_cnt_reg[20] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[20]_i_1_n_7 ),
        .Q(word_cnt_reg[20]),
        .R(clear));
  CARRY4 \word_cnt_reg[20]_i_1 
       (.CI(\word_cnt_reg[16]_i_1_n_0 ),
        .CO({\word_cnt_reg[20]_i_1_n_0 ,\word_cnt_reg[20]_i_1_n_1 ,\word_cnt_reg[20]_i_1_n_2 ,\word_cnt_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[20]_i_1_n_4 ,\word_cnt_reg[20]_i_1_n_5 ,\word_cnt_reg[20]_i_1_n_6 ,\word_cnt_reg[20]_i_1_n_7 }),
        .S({\word_cnt[20]_i_2_n_0 ,\word_cnt[20]_i_3_n_0 ,\word_cnt[20]_i_4_n_0 ,\word_cnt[20]_i_5_n_0 }));
  FDRE \word_cnt_reg[21] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[20]_i_1_n_6 ),
        .Q(word_cnt_reg[21]),
        .R(clear));
  FDRE \word_cnt_reg[22] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[20]_i_1_n_5 ),
        .Q(word_cnt_reg[22]),
        .R(clear));
  FDRE \word_cnt_reg[23] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[20]_i_1_n_4 ),
        .Q(word_cnt_reg[23]),
        .R(clear));
  FDRE \word_cnt_reg[24] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[24]_i_1_n_7 ),
        .Q(word_cnt_reg[24]),
        .R(clear));
  CARRY4 \word_cnt_reg[24]_i_1 
       (.CI(\word_cnt_reg[20]_i_1_n_0 ),
        .CO({\word_cnt_reg[24]_i_1_n_0 ,\word_cnt_reg[24]_i_1_n_1 ,\word_cnt_reg[24]_i_1_n_2 ,\word_cnt_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[24]_i_1_n_4 ,\word_cnt_reg[24]_i_1_n_5 ,\word_cnt_reg[24]_i_1_n_6 ,\word_cnt_reg[24]_i_1_n_7 }),
        .S({\word_cnt[24]_i_2_n_0 ,\word_cnt[24]_i_3_n_0 ,\word_cnt[24]_i_4_n_0 ,\word_cnt[24]_i_5_n_0 }));
  FDRE \word_cnt_reg[25] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[24]_i_1_n_6 ),
        .Q(word_cnt_reg[25]),
        .R(clear));
  FDRE \word_cnt_reg[26] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[24]_i_1_n_5 ),
        .Q(word_cnt_reg[26]),
        .R(clear));
  FDRE \word_cnt_reg[27] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[24]_i_1_n_4 ),
        .Q(word_cnt_reg[27]),
        .R(clear));
  FDRE \word_cnt_reg[28] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[28]_i_1_n_7 ),
        .Q(word_cnt_reg[28]),
        .R(clear));
  CARRY4 \word_cnt_reg[28]_i_1 
       (.CI(\word_cnt_reg[24]_i_1_n_0 ),
        .CO({\NLW_word_cnt_reg[28]_i_1_CO_UNCONNECTED [3],\word_cnt_reg[28]_i_1_n_1 ,\word_cnt_reg[28]_i_1_n_2 ,\word_cnt_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[28]_i_1_n_4 ,\word_cnt_reg[28]_i_1_n_5 ,\word_cnt_reg[28]_i_1_n_6 ,\word_cnt_reg[28]_i_1_n_7 }),
        .S({\word_cnt[28]_i_2_n_0 ,\word_cnt[28]_i_3_n_0 ,\word_cnt[28]_i_4_n_0 ,\word_cnt[28]_i_5_n_0 }));
  FDRE \word_cnt_reg[29] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[28]_i_1_n_6 ),
        .Q(word_cnt_reg[29]),
        .R(clear));
  FDRE \word_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[0]_i_1_n_5 ),
        .Q(word_cnt_reg[2]),
        .R(clear));
  FDRE \word_cnt_reg[30] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[28]_i_1_n_5 ),
        .Q(word_cnt_reg[30]),
        .R(clear));
  FDRE \word_cnt_reg[31] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[28]_i_1_n_4 ),
        .Q(word_cnt_reg[31]),
        .R(clear));
  FDRE \word_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[0]_i_1_n_4 ),
        .Q(word_cnt_reg[3]),
        .R(clear));
  FDRE \word_cnt_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[4]_i_1_n_7 ),
        .Q(word_cnt_reg[4]),
        .R(clear));
  CARRY4 \word_cnt_reg[4]_i_1 
       (.CI(\word_cnt_reg[0]_i_1_n_0 ),
        .CO({\word_cnt_reg[4]_i_1_n_0 ,\word_cnt_reg[4]_i_1_n_1 ,\word_cnt_reg[4]_i_1_n_2 ,\word_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[4]_i_1_n_4 ,\word_cnt_reg[4]_i_1_n_5 ,\word_cnt_reg[4]_i_1_n_6 ,\word_cnt_reg[4]_i_1_n_7 }),
        .S({\word_cnt[4]_i_2_n_0 ,\word_cnt[4]_i_3_n_0 ,\word_cnt[4]_i_4_n_0 ,\word_cnt[4]_i_5_n_0 }));
  FDRE \word_cnt_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[4]_i_1_n_6 ),
        .Q(word_cnt_reg[5]),
        .R(clear));
  FDRE \word_cnt_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[4]_i_1_n_5 ),
        .Q(word_cnt_reg[6]),
        .R(clear));
  FDRE \word_cnt_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[4]_i_1_n_4 ),
        .Q(word_cnt_reg[7]),
        .R(clear));
  FDRE \word_cnt_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[8]_i_1_n_7 ),
        .Q(word_cnt_reg[8]),
        .R(clear));
  CARRY4 \word_cnt_reg[8]_i_1 
       (.CI(\word_cnt_reg[4]_i_1_n_0 ),
        .CO({\word_cnt_reg[8]_i_1_n_0 ,\word_cnt_reg[8]_i_1_n_1 ,\word_cnt_reg[8]_i_1_n_2 ,\word_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[8]_i_1_n_4 ,\word_cnt_reg[8]_i_1_n_5 ,\word_cnt_reg[8]_i_1_n_6 ,\word_cnt_reg[8]_i_1_n_7 }),
        .S({\word_cnt[8]_i_2_n_0 ,\word_cnt[8]_i_3_n_0 ,\word_cnt[8]_i_4_n_0 ,\word_cnt[8]_i_5_n_0 }));
  FDRE \word_cnt_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[8]_i_1_n_6 ),
        .Q(word_cnt_reg[9]),
        .R(clear));
endmodule

(* ORIG_REF_NAME = "gtx3g_GT_FRAME_GEN" *) 
module gtx3g_bert_0_gtx3g_GT_FRAME_GEN_0
   (gt1_txcharisk_in,
    Q,
    GT0_TXUSRCLK_OUT,
    TEST_RESET,
    ECC_CODE_EN,
    PATTERN_MODE,
    out);
  output [0:0]gt1_txcharisk_in;
  output [15:0]Q;
  input GT0_TXUSRCLK_OUT;
  input TEST_RESET;
  input ECC_CODE_EN;
  input [2:0]PATTERN_MODE;
  input out;

  wire ECC_CODE_EN;
  wire GT0_TXUSRCLK_OUT;
  wire [2:0]PATTERN_MODE;
  wire [15:0]Q;
  wire TEST_RESET;
  wire \bit_pointer[10]_i_1__0_n_0 ;
  wire \bit_pointer[11]_i_1__0_n_0 ;
  wire \bit_pointer[12]_i_1__0_n_0 ;
  wire \bit_pointer[13]_i_1__0_n_0 ;
  wire \bit_pointer[14]_i_1__0_n_0 ;
  wire \bit_pointer[15]_i_1__0_n_0 ;
  wire \bit_pointer[1]_i_1__0_n_0 ;
  wire \bit_pointer[2]_i_1__0_n_0 ;
  wire \bit_pointer[3]_i_1__0_n_0 ;
  wire \bit_pointer[4]_i_1__0_n_0 ;
  wire \bit_pointer[5]_i_1__0_n_0 ;
  wire \bit_pointer[6]_i_1__0_n_0 ;
  wire \bit_pointer[7]_i_1__0_n_0 ;
  wire \bit_pointer[8]_i_1__0_n_0 ;
  wire \bit_pointer[9]_i_1__0_n_0 ;
  wire \bit_pointer_reg_n_0_[0] ;
  wire \bit_pointer_reg_n_0_[10] ;
  wire \bit_pointer_reg_n_0_[11] ;
  wire \bit_pointer_reg_n_0_[12] ;
  wire \bit_pointer_reg_n_0_[13] ;
  wire \bit_pointer_reg_n_0_[14] ;
  wire \bit_pointer_reg_n_0_[15] ;
  wire \bit_pointer_reg_n_0_[1] ;
  wire \bit_pointer_reg_n_0_[2] ;
  wire \bit_pointer_reg_n_0_[3] ;
  wire \bit_pointer_reg_n_0_[4] ;
  wire \bit_pointer_reg_n_0_[5] ;
  wire \bit_pointer_reg_n_0_[6] ;
  wire \bit_pointer_reg_n_0_[7] ;
  wire \bit_pointer_reg_n_0_[8] ;
  wire \bit_pointer_reg_n_0_[9] ;
  wire \block_word_cnt[0]_i_1__2_n_0 ;
  wire \block_word_cnt[0]_i_2__1_n_0 ;
  wire \block_word_cnt[0]_i_3__1_n_0 ;
  wire \block_word_cnt[1]_i_1__2_n_0 ;
  wire \block_word_cnt[1]_i_2__2_n_0 ;
  wire \block_word_cnt[1]_i_3__1_n_0 ;
  wire \block_word_cnt[1]_i_4_n_0 ;
  wire \block_word_cnt[1]_i_5__0_n_0 ;
  wire \block_word_cnt[1]_i_6__1_n_0 ;
  wire \block_word_cnt[2]_i_1__2_n_0 ;
  wire \block_word_cnt[2]_i_2__0_n_0 ;
  wire \block_word_cnt[2]_i_3__0_n_0 ;
  wire \block_word_cnt[3]_i_1__2_n_0 ;
  wire \block_word_cnt[4]_i_2__0_n_0 ;
  wire \block_word_cnt[4]_i_3__2_n_0 ;
  wire \block_word_cnt[4]_i_4__1_n_0 ;
  wire \block_word_cnt[5]_i_1__1_n_0 ;
  wire \block_word_cnt[6]_i_1__2_n_0 ;
  wire \block_word_cnt[7]_i_1__2_n_0 ;
  wire \block_word_cnt[7]_i_2__1_n_0 ;
  wire \block_word_cnt[7]_i_3__1_n_0 ;
  wire \block_word_cnt_reg[4]_i_1__1_n_0 ;
  wire \block_word_cnt_reg_n_0_[0] ;
  wire \block_word_cnt_reg_n_0_[1] ;
  wire \block_word_cnt_reg_n_0_[2] ;
  wire \block_word_cnt_reg_n_0_[3] ;
  wire \block_word_cnt_reg_n_0_[4] ;
  wire \block_word_cnt_reg_n_0_[5] ;
  wire \block_word_cnt_reg_n_0_[6] ;
  wire \block_word_cnt_reg_n_0_[7] ;
  wire data_word_valid;
  wire data_word_valid_i_1__1_n_0;
  wire encoder_rst_reg;
  wire encoder_rst_reg_i_1__0_n_0;
  wire error_insertion_inst_1_n_0;
  wire error_insertion_inst_1_n_1;
  wire error_insertion_inst_1_n_10;
  wire error_insertion_inst_1_n_11;
  wire error_insertion_inst_1_n_12;
  wire error_insertion_inst_1_n_13;
  wire error_insertion_inst_1_n_14;
  wire error_insertion_inst_1_n_15;
  wire error_insertion_inst_1_n_2;
  wire error_insertion_inst_1_n_3;
  wire error_insertion_inst_1_n_4;
  wire error_insertion_inst_1_n_5;
  wire error_insertion_inst_1_n_6;
  wire error_insertion_inst_1_n_7;
  wire error_insertion_inst_1_n_8;
  wire error_insertion_inst_1_n_9;
  wire error_insertion_rst_reg;
  wire error_insertion_rst_reg_i_1__0_n_0;
  wire gt1_tx_system_reset_c;
  wire [0:0]gt1_txcharisk_in;
  wire out;
  wire parity_encoder_inst_1_n_0;
  wire parity_encoder_inst_1_n_1;
  wire parity_encoder_inst_1_n_10;
  wire parity_encoder_inst_1_n_11;
  wire parity_encoder_inst_1_n_12;
  wire parity_encoder_inst_1_n_13;
  wire parity_encoder_inst_1_n_14;
  wire parity_encoder_inst_1_n_15;
  wire parity_encoder_inst_1_n_2;
  wire parity_encoder_inst_1_n_3;
  wire parity_encoder_inst_1_n_4;
  wire parity_encoder_inst_1_n_5;
  wire parity_encoder_inst_1_n_6;
  wire parity_encoder_inst_1_n_7;
  wire parity_encoder_inst_1_n_8;
  wire parity_encoder_inst_1_n_9;
  wire pattern_gen_inst_1_n_0;
  wire pattern_gen_inst_1_n_1;
  wire pattern_gen_inst_1_n_10;
  wire pattern_gen_inst_1_n_19;
  wire pattern_gen_inst_1_n_2;
  wire pattern_gen_inst_1_n_20;
  wire pattern_gen_inst_1_n_3;
  wire pattern_gen_inst_1_n_4;
  wire pattern_gen_inst_1_n_5;
  wire pattern_gen_inst_1_n_6;
  wire pattern_gen_inst_1_n_7;
  wire pattern_gen_inst_1_n_8;
  wire pattern_gen_inst_1_n_9;
  wire pattern_pause_reg;
  wire pattern_pause_reg_i_1__1_n_0;
  wire pattern_pause_reg_i_2__1_n_0;
  wire pattern_rst_reg;
  wire [10:0]pattern_word;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) wire system_reset_r;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) wire system_reset_r2;
  wire \test_init_cnt[0]_i_10_n_0 ;
  wire \test_init_cnt[0]_i_1__0_n_0 ;
  wire \test_init_cnt[0]_i_3__0_n_0 ;
  wire \test_init_cnt[0]_i_4__0_n_0 ;
  wire \test_init_cnt[0]_i_5__0_n_0 ;
  wire \test_init_cnt[0]_i_6__0_n_0 ;
  wire \test_init_cnt[0]_i_7__0_n_0 ;
  wire \test_init_cnt[0]_i_8_n_0 ;
  wire \test_init_cnt[0]_i_9__0_n_0 ;
  wire \test_init_cnt[12]_i_2__0_n_0 ;
  wire \test_init_cnt[12]_i_3__0_n_0 ;
  wire \test_init_cnt[12]_i_4__0_n_0 ;
  wire \test_init_cnt[12]_i_5__0_n_0 ;
  wire \test_init_cnt[4]_i_2__0_n_0 ;
  wire \test_init_cnt[4]_i_3__0_n_0 ;
  wire \test_init_cnt[4]_i_4__0_n_0 ;
  wire \test_init_cnt[4]_i_5__0_n_0 ;
  wire \test_init_cnt[8]_i_2__0_n_0 ;
  wire \test_init_cnt[8]_i_3__0_n_0 ;
  wire \test_init_cnt[8]_i_4__0_n_0 ;
  wire \test_init_cnt[8]_i_5__0_n_0 ;
  wire [15:0]test_init_cnt_reg;
  wire \test_init_cnt_reg[0]_i_2__0_n_0 ;
  wire \test_init_cnt_reg[0]_i_2__0_n_1 ;
  wire \test_init_cnt_reg[0]_i_2__0_n_2 ;
  wire \test_init_cnt_reg[0]_i_2__0_n_3 ;
  wire \test_init_cnt_reg[0]_i_2__0_n_4 ;
  wire \test_init_cnt_reg[0]_i_2__0_n_5 ;
  wire \test_init_cnt_reg[0]_i_2__0_n_6 ;
  wire \test_init_cnt_reg[0]_i_2__0_n_7 ;
  wire \test_init_cnt_reg[12]_i_1__0_n_1 ;
  wire \test_init_cnt_reg[12]_i_1__0_n_2 ;
  wire \test_init_cnt_reg[12]_i_1__0_n_3 ;
  wire \test_init_cnt_reg[12]_i_1__0_n_4 ;
  wire \test_init_cnt_reg[12]_i_1__0_n_5 ;
  wire \test_init_cnt_reg[12]_i_1__0_n_6 ;
  wire \test_init_cnt_reg[12]_i_1__0_n_7 ;
  wire \test_init_cnt_reg[4]_i_1__0_n_0 ;
  wire \test_init_cnt_reg[4]_i_1__0_n_1 ;
  wire \test_init_cnt_reg[4]_i_1__0_n_2 ;
  wire \test_init_cnt_reg[4]_i_1__0_n_3 ;
  wire \test_init_cnt_reg[4]_i_1__0_n_4 ;
  wire \test_init_cnt_reg[4]_i_1__0_n_5 ;
  wire \test_init_cnt_reg[4]_i_1__0_n_6 ;
  wire \test_init_cnt_reg[4]_i_1__0_n_7 ;
  wire \test_init_cnt_reg[8]_i_1__0_n_0 ;
  wire \test_init_cnt_reg[8]_i_1__0_n_1 ;
  wire \test_init_cnt_reg[8]_i_1__0_n_2 ;
  wire \test_init_cnt_reg[8]_i_1__0_n_3 ;
  wire \test_init_cnt_reg[8]_i_1__0_n_4 ;
  wire \test_init_cnt_reg[8]_i_1__0_n_5 ;
  wire \test_init_cnt_reg[8]_i_1__0_n_6 ;
  wire \test_init_cnt_reg[8]_i_1__0_n_7 ;
  wire [15:0]tx_data_reg;
  wire \tx_data_reg[0]_i_3__0_n_0 ;
  wire \tx_data_reg[10]_i_3_n_0 ;
  wire \tx_data_reg[10]_i_4_n_0 ;
  wire \tx_data_reg[11]_i_3__0_n_0 ;
  wire \tx_data_reg[11]_i_4__0_n_0 ;
  wire \tx_data_reg[11]_i_5__0_n_0 ;
  wire \tx_data_reg[12]_i_2__0_n_0 ;
  wire \tx_data_reg[12]_i_3__0_n_0 ;
  wire \tx_data_reg[12]_i_5_n_0 ;
  wire \tx_data_reg[15]_i_2__0_n_0 ;
  wire \tx_data_reg[15]_i_3__0_n_0 ;
  wire \tx_data_reg[15]_i_5__0_n_0 ;
  wire \tx_data_reg[2]_i_3__0_n_0 ;
  wire \tx_data_reg[2]_i_5_n_0 ;
  wire \tx_data_reg[3]_i_3__0_n_0 ;
  wire \tx_data_reg[3]_i_4__0_n_0 ;
  wire \tx_data_reg[3]_i_5__0_n_0 ;
  wire \tx_data_reg[4]_i_3__0_n_0 ;
  wire \tx_data_reg[4]_i_5_n_0 ;
  wire \tx_data_reg[6]_i_2__0_n_0 ;
  wire \tx_data_reg[8]_i_4_n_0 ;
  wire \tx_data_reg[8]_i_5_n_0 ;
  wire \txctrl_reg[0]_i_1__0_n_0 ;
  wire \txctrl_reg_reg_n_0_[0] ;
  wire \word_cnt[0]_i_2__0_n_0 ;
  wire \word_cnt[0]_i_3__0_n_0 ;
  wire \word_cnt[0]_i_4__0_n_0 ;
  wire \word_cnt[0]_i_5__0_n_0 ;
  wire \word_cnt[12]_i_2__0_n_0 ;
  wire \word_cnt[12]_i_3__0_n_0 ;
  wire \word_cnt[12]_i_4__0_n_0 ;
  wire \word_cnt[12]_i_5__0_n_0 ;
  wire \word_cnt[16]_i_2__0_n_0 ;
  wire \word_cnt[16]_i_3__0_n_0 ;
  wire \word_cnt[16]_i_4__0_n_0 ;
  wire \word_cnt[16]_i_5__0_n_0 ;
  wire \word_cnt[20]_i_2__0_n_0 ;
  wire \word_cnt[20]_i_3__0_n_0 ;
  wire \word_cnt[20]_i_4__0_n_0 ;
  wire \word_cnt[20]_i_5__0_n_0 ;
  wire \word_cnt[24]_i_2__0_n_0 ;
  wire \word_cnt[24]_i_3__0_n_0 ;
  wire \word_cnt[24]_i_4__0_n_0 ;
  wire \word_cnt[24]_i_5__0_n_0 ;
  wire \word_cnt[28]_i_2__0_n_0 ;
  wire \word_cnt[28]_i_3__0_n_0 ;
  wire \word_cnt[28]_i_4__0_n_0 ;
  wire \word_cnt[28]_i_5__0_n_0 ;
  wire \word_cnt[4]_i_2__0_n_0 ;
  wire \word_cnt[4]_i_3__0_n_0 ;
  wire \word_cnt[4]_i_4__0_n_0 ;
  wire \word_cnt[4]_i_5__0_n_0 ;
  wire \word_cnt[8]_i_2__0_n_0 ;
  wire \word_cnt[8]_i_3__0_n_0 ;
  wire \word_cnt[8]_i_4__0_n_0 ;
  wire \word_cnt[8]_i_5__0_n_0 ;
  wire [31:0]word_cnt_reg;
  wire \word_cnt_reg[0]_i_1__0_n_0 ;
  wire \word_cnt_reg[0]_i_1__0_n_1 ;
  wire \word_cnt_reg[0]_i_1__0_n_2 ;
  wire \word_cnt_reg[0]_i_1__0_n_3 ;
  wire \word_cnt_reg[0]_i_1__0_n_4 ;
  wire \word_cnt_reg[0]_i_1__0_n_5 ;
  wire \word_cnt_reg[0]_i_1__0_n_6 ;
  wire \word_cnt_reg[0]_i_1__0_n_7 ;
  wire \word_cnt_reg[12]_i_1__0_n_0 ;
  wire \word_cnt_reg[12]_i_1__0_n_1 ;
  wire \word_cnt_reg[12]_i_1__0_n_2 ;
  wire \word_cnt_reg[12]_i_1__0_n_3 ;
  wire \word_cnt_reg[12]_i_1__0_n_4 ;
  wire \word_cnt_reg[12]_i_1__0_n_5 ;
  wire \word_cnt_reg[12]_i_1__0_n_6 ;
  wire \word_cnt_reg[12]_i_1__0_n_7 ;
  wire \word_cnt_reg[16]_i_1__0_n_0 ;
  wire \word_cnt_reg[16]_i_1__0_n_1 ;
  wire \word_cnt_reg[16]_i_1__0_n_2 ;
  wire \word_cnt_reg[16]_i_1__0_n_3 ;
  wire \word_cnt_reg[16]_i_1__0_n_4 ;
  wire \word_cnt_reg[16]_i_1__0_n_5 ;
  wire \word_cnt_reg[16]_i_1__0_n_6 ;
  wire \word_cnt_reg[16]_i_1__0_n_7 ;
  wire \word_cnt_reg[20]_i_1__0_n_0 ;
  wire \word_cnt_reg[20]_i_1__0_n_1 ;
  wire \word_cnt_reg[20]_i_1__0_n_2 ;
  wire \word_cnt_reg[20]_i_1__0_n_3 ;
  wire \word_cnt_reg[20]_i_1__0_n_4 ;
  wire \word_cnt_reg[20]_i_1__0_n_5 ;
  wire \word_cnt_reg[20]_i_1__0_n_6 ;
  wire \word_cnt_reg[20]_i_1__0_n_7 ;
  wire \word_cnt_reg[24]_i_1__0_n_0 ;
  wire \word_cnt_reg[24]_i_1__0_n_1 ;
  wire \word_cnt_reg[24]_i_1__0_n_2 ;
  wire \word_cnt_reg[24]_i_1__0_n_3 ;
  wire \word_cnt_reg[24]_i_1__0_n_4 ;
  wire \word_cnt_reg[24]_i_1__0_n_5 ;
  wire \word_cnt_reg[24]_i_1__0_n_6 ;
  wire \word_cnt_reg[24]_i_1__0_n_7 ;
  wire \word_cnt_reg[28]_i_1__0_n_1 ;
  wire \word_cnt_reg[28]_i_1__0_n_2 ;
  wire \word_cnt_reg[28]_i_1__0_n_3 ;
  wire \word_cnt_reg[28]_i_1__0_n_4 ;
  wire \word_cnt_reg[28]_i_1__0_n_5 ;
  wire \word_cnt_reg[28]_i_1__0_n_6 ;
  wire \word_cnt_reg[28]_i_1__0_n_7 ;
  wire \word_cnt_reg[4]_i_1__0_n_0 ;
  wire \word_cnt_reg[4]_i_1__0_n_1 ;
  wire \word_cnt_reg[4]_i_1__0_n_2 ;
  wire \word_cnt_reg[4]_i_1__0_n_3 ;
  wire \word_cnt_reg[4]_i_1__0_n_4 ;
  wire \word_cnt_reg[4]_i_1__0_n_5 ;
  wire \word_cnt_reg[4]_i_1__0_n_6 ;
  wire \word_cnt_reg[4]_i_1__0_n_7 ;
  wire \word_cnt_reg[8]_i_1__0_n_0 ;
  wire \word_cnt_reg[8]_i_1__0_n_1 ;
  wire \word_cnt_reg[8]_i_1__0_n_2 ;
  wire \word_cnt_reg[8]_i_1__0_n_3 ;
  wire \word_cnt_reg[8]_i_1__0_n_4 ;
  wire \word_cnt_reg[8]_i_1__0_n_5 ;
  wire \word_cnt_reg[8]_i_1__0_n_6 ;
  wire \word_cnt_reg[8]_i_1__0_n_7 ;
  wire [3:3]\NLW_test_init_cnt_reg[12]_i_1__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_word_cnt_reg[28]_i_1__0_CO_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    SYSTEM_RESET_inferred_i_1__1
       (.I0(out),
        .O(gt1_tx_system_reset_c));
  FDRE \TXCTRL_OUT_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\txctrl_reg_reg_n_0_[0] ),
        .Q(gt1_txcharisk_in),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_15),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_5),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_4),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_3),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_2),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_1),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_0),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_14),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_13),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_12),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_11),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_10),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_9),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_8),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_7),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \TX_DATA_OUT_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_inst_1_n_6),
        .Q(Q[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[10]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[9] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[10]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[11]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[10] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[11]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[12]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[11] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[12]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[13]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[12] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[13]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[14]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[13] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[14]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[15]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[14] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[15]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[1]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[0] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[2]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[1] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[3]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[2] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[4]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[3] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[5]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[4] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[6]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[5] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[6]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[7]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[6] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[8]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[7] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[8]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \bit_pointer[9]_i_1__0 
       (.I0(\bit_pointer_reg_n_0_[8] ),
        .I1(\bit_pointer_reg_n_0_[15] ),
        .O(\bit_pointer[9]_i_1__0_n_0 ));
  FDSE \bit_pointer_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer_reg_n_0_[15] ),
        .Q(\bit_pointer_reg_n_0_[0] ),
        .S(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[10]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[10] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[11]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[11] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[12]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[12] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[13]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[13] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[14]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[14] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[15]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[15] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[1]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[1] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[2]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[2] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[3]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[3] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[4]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[4] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[5]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[5] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[6]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[6] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[7]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[7] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[8]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[8] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \bit_pointer_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\bit_pointer[9]_i_1__0_n_0 ),
        .Q(\bit_pointer_reg_n_0_[9] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hCF00CCCC55555555)) 
    \block_word_cnt[0]_i_1__2 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt[0]_i_2__1_n_0 ),
        .I2(ECC_CODE_EN),
        .I3(\block_word_cnt[1]_i_3__1_n_0 ),
        .I4(\block_word_cnt[0]_i_3__1_n_0 ),
        .I5(\block_word_cnt[4]_i_2__0_n_0 ),
        .O(\block_word_cnt[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'hEFCFFFEF)) 
    \block_word_cnt[0]_i_2__1 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .O(\block_word_cnt[0]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hFBFBFBEF)) 
    \block_word_cnt[0]_i_3__1 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(\block_word_cnt[0]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h0FFF66660FF06666)) 
    \block_word_cnt[1]_i_1__2 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt[1]_i_2__2_n_0 ),
        .I3(\block_word_cnt[1]_i_3__1_n_0 ),
        .I4(\block_word_cnt[4]_i_2__0_n_0 ),
        .I5(\block_word_cnt[1]_i_4_n_0 ),
        .O(\block_word_cnt[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h00004E14)) 
    \block_word_cnt[1]_i_2__2 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .I4(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[1]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'h0220)) 
    \block_word_cnt[1]_i_3__1 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .O(\block_word_cnt[1]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \block_word_cnt[1]_i_4 
       (.I0(\block_word_cnt[1]_i_5__0_n_0 ),
        .I1(\block_word_cnt[1]_i_6__1_n_0 ),
        .I2(test_init_cnt_reg[9]),
        .I3(test_init_cnt_reg[10]),
        .I4(test_init_cnt_reg[7]),
        .I5(test_init_cnt_reg[8]),
        .O(\block_word_cnt[1]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \block_word_cnt[1]_i_5__0 
       (.I0(test_init_cnt_reg[3]),
        .I1(test_init_cnt_reg[1]),
        .I2(test_init_cnt_reg[0]),
        .I3(test_init_cnt_reg[2]),
        .O(\block_word_cnt[1]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \block_word_cnt[1]_i_6__1 
       (.I0(test_init_cnt_reg[6]),
        .I1(test_init_cnt_reg[12]),
        .I2(test_init_cnt_reg[5]),
        .I3(test_init_cnt_reg[4]),
        .I4(\test_init_cnt[0]_i_9__0_n_0 ),
        .O(\block_word_cnt[1]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'h00FF00006A6A6A6A)) 
    \block_word_cnt[2]_i_1__2 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt[2]_i_2__0_n_0 ),
        .I4(\block_word_cnt[2]_i_3__0_n_0 ),
        .I5(\block_word_cnt[4]_i_2__0_n_0 ),
        .O(\block_word_cnt[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF70FFFFFFFFF)) 
    \block_word_cnt[2]_i_2__0 
       (.I0(ECC_CODE_EN),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[3] ),
        .I5(\block_word_cnt_reg_n_0_[4] ),
        .O(\block_word_cnt[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \block_word_cnt[2]_i_3__0 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[2]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \block_word_cnt[3]_i_1__2 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .O(\block_word_cnt[3]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h22A80222)) 
    \block_word_cnt[4]_i_2__0 
       (.I0(\tx_data_reg[15]_i_5__0_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .O(\block_word_cnt[4]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \block_word_cnt[4]_i_3__2 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[3] ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[0] ),
        .O(\block_word_cnt[4]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h0036000000160000)) 
    \block_word_cnt[4]_i_4__1 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[3] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(ECC_CODE_EN),
        .O(\block_word_cnt[4]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \block_word_cnt[5]_i_1__1 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(\block_word_cnt_reg_n_0_[5] ),
        .O(\block_word_cnt[5]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \block_word_cnt[6]_i_1__2 
       (.I0(\block_word_cnt_reg_n_0_[6] ),
        .I1(\block_word_cnt[7]_i_3__1_n_0 ),
        .O(\block_word_cnt[6]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \block_word_cnt[7]_i_1__2 
       (.I0(system_reset_r2),
        .I1(TEST_RESET),
        .O(\block_word_cnt[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \block_word_cnt[7]_i_2__1 
       (.I0(\block_word_cnt_reg_n_0_[7] ),
        .I1(\block_word_cnt[7]_i_3__1_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[6] ),
        .O(\block_word_cnt[7]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \block_word_cnt[7]_i_3__1 
       (.I0(\block_word_cnt_reg_n_0_[5] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .I5(\block_word_cnt_reg_n_0_[3] ),
        .O(\block_word_cnt[7]_i_3__1_n_0 ));
  FDRE \block_word_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[0]_i_1__2_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[0] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \block_word_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[1]_i_1__2_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[1] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \block_word_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[2]_i_1__2_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[2] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \block_word_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[3]_i_1__2_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[3] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \block_word_cnt_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt_reg[4]_i_1__1_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[4] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  MUXF7 \block_word_cnt_reg[4]_i_1__1 
       (.I0(\block_word_cnt[4]_i_3__2_n_0 ),
        .I1(\block_word_cnt[4]_i_4__1_n_0 ),
        .O(\block_word_cnt_reg[4]_i_1__1_n_0 ),
        .S(\block_word_cnt[4]_i_2__0_n_0 ));
  FDRE \block_word_cnt_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[5]_i_1__1_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[5] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \block_word_cnt_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[6]_i_1__2_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[6] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \block_word_cnt_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[7]_i_2__1_n_0 ),
        .Q(\block_word_cnt_reg_n_0_[7] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hD1)) 
    data_word_valid_i_1__1
       (.I0(\tx_data_reg[15]_i_2__0_n_0 ),
        .I1(\test_init_cnt[0]_i_1__0_n_0 ),
        .I2(data_word_valid),
        .O(data_word_valid_i_1__1_n_0));
  FDRE data_word_valid_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(data_word_valid_i_1__1_n_0),
        .Q(data_word_valid),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'hFFF30032)) 
    encoder_rst_reg_i_1__0
       (.I0(\block_word_cnt[1]_i_4_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\tx_data_reg[10]_i_4_n_0 ),
        .I4(encoder_rst_reg),
        .O(encoder_rst_reg_i_1__0_n_0));
  FDSE encoder_rst_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(encoder_rst_reg_i_1__0_n_0),
        .Q(encoder_rst_reg),
        .S(\block_word_cnt[7]_i_1__2_n_0 ));
  gtx3g_bert_0_error_insertion error_insertion_inst_1
       (.D({error_insertion_inst_1_n_0,error_insertion_inst_1_n_1,error_insertion_inst_1_n_2,error_insertion_inst_1_n_3,error_insertion_inst_1_n_4,error_insertion_inst_1_n_5,error_insertion_inst_1_n_6,error_insertion_inst_1_n_7,error_insertion_inst_1_n_8,error_insertion_inst_1_n_9,error_insertion_inst_1_n_10,error_insertion_inst_1_n_11,error_insertion_inst_1_n_12,error_insertion_inst_1_n_13,error_insertion_inst_1_n_14,error_insertion_inst_1_n_15}),
        .GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(tx_data_reg),
        .TEST_RESET(TEST_RESET),
        .\bit_pointer_reg[15] ({\bit_pointer_reg_n_0_[15] ,\bit_pointer_reg_n_0_[14] ,\bit_pointer_reg_n_0_[13] ,\bit_pointer_reg_n_0_[12] ,\bit_pointer_reg_n_0_[11] ,\bit_pointer_reg_n_0_[10] ,\bit_pointer_reg_n_0_[9] ,\bit_pointer_reg_n_0_[8] ,\bit_pointer_reg_n_0_[7] ,\bit_pointer_reg_n_0_[6] ,\bit_pointer_reg_n_0_[5] ,\bit_pointer_reg_n_0_[4] ,\bit_pointer_reg_n_0_[3] ,\bit_pointer_reg_n_0_[2] ,\bit_pointer_reg_n_0_[1] ,\bit_pointer_reg_n_0_[0] }),
        .error_insertion_rst_reg(error_insertion_rst_reg),
        .out(system_reset_r2),
        .\txctrl_reg_reg[0] (\txctrl_reg_reg_n_0_[0] ),
        .word_cnt_reg(word_cnt_reg));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'hAAA8AAAA)) 
    error_insertion_rst_reg_i_1__0
       (.I0(error_insertion_rst_reg),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\tx_data_reg[10]_i_4_n_0 ),
        .I4(\block_word_cnt[1]_i_4_n_0 ),
        .O(error_insertion_rst_reg_i_1__0_n_0));
  FDSE error_insertion_rst_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(error_insertion_rst_reg_i_1__0_n_0),
        .Q(error_insertion_rst_reg),
        .S(\block_word_cnt[7]_i_1__2_n_0 ));
  gtx3g_bert_0_parity_encoder parity_encoder_inst_1
       (.D({parity_encoder_inst_1_n_0,parity_encoder_inst_1_n_1,parity_encoder_inst_1_n_2,parity_encoder_inst_1_n_3,parity_encoder_inst_1_n_4}),
        .GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(tx_data_reg),
        .SR(encoder_rst_reg),
        .\block_word_cnt_reg[0] (\tx_data_reg[6]_i_2__0_n_0 ),
        .\block_word_cnt_reg[0]_0 (\tx_data_reg[0]_i_3__0_n_0 ),
        .\block_word_cnt_reg[0]_1 (\tx_data_reg[10]_i_3_n_0 ),
        .\block_word_cnt_reg[2] (pattern_gen_inst_1_n_20),
        .\block_word_cnt_reg[2]_0 (\tx_data_reg[12]_i_2__0_n_0 ),
        .\block_word_cnt_reg[2]_1 (\tx_data_reg[12]_i_3__0_n_0 ),
        .\block_word_cnt_reg[2]_2 (\tx_data_reg[12]_i_5_n_0 ),
        .\block_word_cnt_reg[3] (\tx_data_reg[15]_i_5__0_n_0 ),
        .\block_word_cnt_reg[4] ({\block_word_cnt_reg_n_0_[4] ,\block_word_cnt_reg_n_0_[2] ,\block_word_cnt_reg_n_0_[1] ,\block_word_cnt_reg_n_0_[0] }),
        .\block_word_cnt_reg[4]_0 (\tx_data_reg[3]_i_3__0_n_0 ),
        .\block_word_cnt_reg[4]_1 (\tx_data_reg[11]_i_3__0_n_0 ),
        .\block_word_cnt_reg[4]_2 (\tx_data_reg[11]_i_4__0_n_0 ),
        .\block_word_cnt_reg[4]_3 (\tx_data_reg[11]_i_5__0_n_0 ),
        .\block_word_cnt_reg[4]_4 (\tx_data_reg[10]_i_4_n_0 ),
        .\block_word_cnt_reg[4]_5 (\tx_data_reg[4]_i_3__0_n_0 ),
        .\block_word_cnt_reg[4]_6 (\tx_data_reg[15]_i_3__0_n_0 ),
        .\block_word_cnt_reg[4]_7 (\tx_data_reg[8]_i_5_n_0 ),
        .data_word_valid(data_word_valid),
        .\pattern_reg_reg[10] ({pattern_word[10:7],pattern_word[5],pattern_word[3],pattern_word[1:0]}),
        .\pattern_reg_reg[1] (pattern_gen_inst_1_n_19),
        .test_init_cnt_reg({test_init_cnt_reg[12],test_init_cnt_reg[10],test_init_cnt_reg[1:0]}),
        .\test_init_cnt_reg_1__s_port_] (\tx_data_reg[3]_i_4__0_n_0 ),
        .\tx_data_reg_reg[12] (parity_encoder_inst_1_n_8),
        .\tx_data_reg_reg[13] (parity_encoder_inst_1_n_13),
        .\tx_data_reg_reg[14] (parity_encoder_inst_1_n_14),
        .\tx_data_reg_reg[15] (parity_encoder_inst_1_n_15),
        .\tx_data_reg_reg[2] (parity_encoder_inst_1_n_9),
        .\tx_data_reg_reg[4] (parity_encoder_inst_1_n_10),
        .\tx_data_reg_reg[5] (parity_encoder_inst_1_n_5),
        .\tx_data_reg_reg[6] (parity_encoder_inst_1_n_11),
        .\tx_data_reg_reg[7] (parity_encoder_inst_1_n_6),
        .\tx_data_reg_reg[8] (parity_encoder_inst_1_n_12),
        .\tx_data_reg_reg[9] (parity_encoder_inst_1_n_7));
  gtx3g_bert_0_pattern_gen pattern_gen_inst_1
       (.D({pattern_gen_inst_1_n_0,pattern_gen_inst_1_n_1,pattern_gen_inst_1_n_2,pattern_gen_inst_1_n_3,pattern_gen_inst_1_n_4,pattern_gen_inst_1_n_5,pattern_gen_inst_1_n_6,pattern_gen_inst_1_n_7,pattern_gen_inst_1_n_8,pattern_gen_inst_1_n_9,pattern_gen_inst_1_n_10}),
        .GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .PATTERN_MODE(PATTERN_MODE),
        .Q({pattern_word[10:7],pattern_word[5],pattern_word[3],pattern_word[1:0]}),
        .\block_word_cnt_reg[0] (\tx_data_reg[8]_i_4_n_0 ),
        .\block_word_cnt_reg[0]_0 (\tx_data_reg[6]_i_2__0_n_0 ),
        .\block_word_cnt_reg[0]_1 (\tx_data_reg[10]_i_3_n_0 ),
        .\block_word_cnt_reg[0]_2 (\tx_data_reg[15]_i_2__0_n_0 ),
        .\block_word_cnt_reg[1] (\tx_data_reg[4]_i_5_n_0 ),
        .\block_word_cnt_reg[1]_0 (\tx_data_reg[2]_i_5_n_0 ),
        .\block_word_cnt_reg[2] (\tx_data_reg[2]_i_3__0_n_0 ),
        .\block_word_cnt_reg[2]_0 (parity_encoder_inst_1_n_11),
        .\block_word_cnt_reg[2]_1 (\tx_data_reg[12]_i_2__0_n_0 ),
        .\block_word_cnt_reg[2]_2 (\tx_data_reg[12]_i_3__0_n_0 ),
        .\block_word_cnt_reg[3] (\tx_data_reg[15]_i_5__0_n_0 ),
        .\block_word_cnt_reg[4] ({\block_word_cnt_reg_n_0_[4] ,\block_word_cnt_reg_n_0_[2] ,\block_word_cnt_reg_n_0_[1] ,\block_word_cnt_reg_n_0_[0] }),
        .\block_word_cnt_reg[4]_0 (\tx_data_reg[4]_i_3__0_n_0 ),
        .\block_word_cnt_reg[4]_1 (\tx_data_reg[15]_i_3__0_n_0 ),
        .\hor_parity_word_reg_reg[2] (parity_encoder_inst_1_n_9),
        .pattern_pause_reg(pattern_pause_reg),
        .\pattern_reg_reg[5]_0 (parity_encoder_inst_1_n_5),
        .\pattern_reg_reg[7]_0 (parity_encoder_inst_1_n_6),
        .\pattern_reg_reg[8]_0 (parity_encoder_inst_1_n_12),
        .\pattern_reg_reg[9]_0 (parity_encoder_inst_1_n_7),
        .pattern_rst_reg(pattern_rst_reg),
        .test_init_cnt_reg({test_init_cnt_reg[15:13],test_init_cnt_reg[9:4]}),
        .\test_init_cnt_reg[12] (parity_encoder_inst_1_n_8),
        .test_init_cnt_reg_3__s_port_(\block_word_cnt[1]_i_5__0_n_0 ),
        .\tx_data_reg_reg[11] (pattern_gen_inst_1_n_20),
        .\tx_data_reg_reg[1] (pattern_gen_inst_1_n_19),
        .\ver_parity_word_reg_reg[13] (parity_encoder_inst_1_n_13),
        .\ver_parity_word_reg_reg[14] (parity_encoder_inst_1_n_14),
        .\ver_parity_word_reg_reg[15] (parity_encoder_inst_1_n_15),
        .\ver_parity_word_reg_reg[4] (parity_encoder_inst_1_n_10));
  LUT4 #(
    .INIT(16'hF808)) 
    pattern_pause_reg_i_1__1
       (.I0(pattern_pause_reg_i_2__1_n_0),
        .I1(\block_word_cnt[4]_i_2__0_n_0 ),
        .I2(\test_init_cnt[0]_i_1__0_n_0 ),
        .I3(pattern_pause_reg),
        .O(pattern_pause_reg_i_1__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'h04044440)) 
    pattern_pause_reg_i_2__1
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(pattern_pause_reg_i_2__1_n_0));
  FDSE pattern_pause_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_pause_reg_i_1__1_n_0),
        .Q(pattern_pause_reg),
        .S(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE pattern_rst_reg_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\block_word_cnt[7]_i_1__2_n_0 ),
        .Q(pattern_rst_reg),
        .R(1'b0));
  (* ASYNC_REG *) 
  FDRE system_reset_r2_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(system_reset_r),
        .Q(system_reset_r2),
        .R(1'b0));
  (* ASYNC_REG *) 
  FDRE system_reset_r_reg
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(gt1_tx_system_reset_c),
        .Q(system_reset_r),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \test_init_cnt[0]_i_10 
       (.I0(test_init_cnt_reg[4]),
        .I1(test_init_cnt_reg[5]),
        .I2(test_init_cnt_reg[12]),
        .I3(test_init_cnt_reg[6]),
        .O(\test_init_cnt[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \test_init_cnt[0]_i_1__0 
       (.I0(\test_init_cnt[0]_i_3__0_n_0 ),
        .I1(test_init_cnt_reg[3]),
        .I2(test_init_cnt_reg[1]),
        .I3(test_init_cnt_reg[0]),
        .I4(test_init_cnt_reg[2]),
        .I5(\test_init_cnt[0]_i_4__0_n_0 ),
        .O(\test_init_cnt[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \test_init_cnt[0]_i_3__0 
       (.I0(test_init_cnt_reg[8]),
        .I1(test_init_cnt_reg[7]),
        .I2(test_init_cnt_reg[10]),
        .I3(test_init_cnt_reg[9]),
        .I4(\test_init_cnt[0]_i_9__0_n_0 ),
        .I5(\test_init_cnt[0]_i_10_n_0 ),
        .O(\test_init_cnt[0]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \test_init_cnt[0]_i_4__0 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\tx_data_reg[15]_i_5__0_n_0 ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .O(\test_init_cnt[0]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[0]_i_5__0 
       (.I0(test_init_cnt_reg[3]),
        .O(\test_init_cnt[0]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[0]_i_6__0 
       (.I0(test_init_cnt_reg[2]),
        .O(\test_init_cnt[0]_i_6__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[0]_i_7__0 
       (.I0(test_init_cnt_reg[1]),
        .O(\test_init_cnt[0]_i_7__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[0]_i_8 
       (.I0(test_init_cnt_reg[0]),
        .O(\test_init_cnt[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \test_init_cnt[0]_i_9__0 
       (.I0(test_init_cnt_reg[14]),
        .I1(test_init_cnt_reg[13]),
        .I2(test_init_cnt_reg[15]),
        .I3(test_init_cnt_reg[11]),
        .O(\test_init_cnt[0]_i_9__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[12]_i_2__0 
       (.I0(test_init_cnt_reg[15]),
        .O(\test_init_cnt[12]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[12]_i_3__0 
       (.I0(test_init_cnt_reg[14]),
        .O(\test_init_cnt[12]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[12]_i_4__0 
       (.I0(test_init_cnt_reg[13]),
        .O(\test_init_cnt[12]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[12]_i_5__0 
       (.I0(test_init_cnt_reg[12]),
        .O(\test_init_cnt[12]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[4]_i_2__0 
       (.I0(test_init_cnt_reg[7]),
        .O(\test_init_cnt[4]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[4]_i_3__0 
       (.I0(test_init_cnt_reg[6]),
        .O(\test_init_cnt[4]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[4]_i_4__0 
       (.I0(test_init_cnt_reg[5]),
        .O(\test_init_cnt[4]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[4]_i_5__0 
       (.I0(test_init_cnt_reg[4]),
        .O(\test_init_cnt[4]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[8]_i_2__0 
       (.I0(test_init_cnt_reg[11]),
        .O(\test_init_cnt[8]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[8]_i_3__0 
       (.I0(test_init_cnt_reg[10]),
        .O(\test_init_cnt[8]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[8]_i_4__0 
       (.I0(test_init_cnt_reg[9]),
        .O(\test_init_cnt[8]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \test_init_cnt[8]_i_5__0 
       (.I0(test_init_cnt_reg[8]),
        .O(\test_init_cnt[8]_i_5__0_n_0 ));
  FDRE \test_init_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[0]_i_2__0_n_7 ),
        .Q(test_init_cnt_reg[0]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \test_init_cnt_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\test_init_cnt_reg[0]_i_2__0_n_0 ,\test_init_cnt_reg[0]_i_2__0_n_1 ,\test_init_cnt_reg[0]_i_2__0_n_2 ,\test_init_cnt_reg[0]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\test_init_cnt_reg[0]_i_2__0_n_4 ,\test_init_cnt_reg[0]_i_2__0_n_5 ,\test_init_cnt_reg[0]_i_2__0_n_6 ,\test_init_cnt_reg[0]_i_2__0_n_7 }),
        .S({\test_init_cnt[0]_i_5__0_n_0 ,\test_init_cnt[0]_i_6__0_n_0 ,\test_init_cnt[0]_i_7__0_n_0 ,\test_init_cnt[0]_i_8_n_0 }));
  FDRE \test_init_cnt_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[8]_i_1__0_n_5 ),
        .Q(test_init_cnt_reg[10]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \test_init_cnt_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[8]_i_1__0_n_4 ),
        .Q(test_init_cnt_reg[11]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \test_init_cnt_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[12]_i_1__0_n_7 ),
        .Q(test_init_cnt_reg[12]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \test_init_cnt_reg[12]_i_1__0 
       (.CI(\test_init_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\NLW_test_init_cnt_reg[12]_i_1__0_CO_UNCONNECTED [3],\test_init_cnt_reg[12]_i_1__0_n_1 ,\test_init_cnt_reg[12]_i_1__0_n_2 ,\test_init_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\test_init_cnt_reg[12]_i_1__0_n_4 ,\test_init_cnt_reg[12]_i_1__0_n_5 ,\test_init_cnt_reg[12]_i_1__0_n_6 ,\test_init_cnt_reg[12]_i_1__0_n_7 }),
        .S({\test_init_cnt[12]_i_2__0_n_0 ,\test_init_cnt[12]_i_3__0_n_0 ,\test_init_cnt[12]_i_4__0_n_0 ,\test_init_cnt[12]_i_5__0_n_0 }));
  FDRE \test_init_cnt_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[12]_i_1__0_n_6 ),
        .Q(test_init_cnt_reg[13]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \test_init_cnt_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[12]_i_1__0_n_5 ),
        .Q(test_init_cnt_reg[14]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \test_init_cnt_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[12]_i_1__0_n_4 ),
        .Q(test_init_cnt_reg[15]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \test_init_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[0]_i_2__0_n_6 ),
        .Q(test_init_cnt_reg[1]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \test_init_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[0]_i_2__0_n_5 ),
        .Q(test_init_cnt_reg[2]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \test_init_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[0]_i_2__0_n_4 ),
        .Q(test_init_cnt_reg[3]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \test_init_cnt_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[4]_i_1__0_n_7 ),
        .Q(test_init_cnt_reg[4]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \test_init_cnt_reg[4]_i_1__0 
       (.CI(\test_init_cnt_reg[0]_i_2__0_n_0 ),
        .CO({\test_init_cnt_reg[4]_i_1__0_n_0 ,\test_init_cnt_reg[4]_i_1__0_n_1 ,\test_init_cnt_reg[4]_i_1__0_n_2 ,\test_init_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\test_init_cnt_reg[4]_i_1__0_n_4 ,\test_init_cnt_reg[4]_i_1__0_n_5 ,\test_init_cnt_reg[4]_i_1__0_n_6 ,\test_init_cnt_reg[4]_i_1__0_n_7 }),
        .S({\test_init_cnt[4]_i_2__0_n_0 ,\test_init_cnt[4]_i_3__0_n_0 ,\test_init_cnt[4]_i_4__0_n_0 ,\test_init_cnt[4]_i_5__0_n_0 }));
  FDRE \test_init_cnt_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[4]_i_1__0_n_6 ),
        .Q(test_init_cnt_reg[5]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDSE \test_init_cnt_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[4]_i_1__0_n_5 ),
        .Q(test_init_cnt_reg[6]),
        .S(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \test_init_cnt_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[4]_i_1__0_n_4 ),
        .Q(test_init_cnt_reg[7]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \test_init_cnt_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[8]_i_1__0_n_7 ),
        .Q(test_init_cnt_reg[8]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \test_init_cnt_reg[8]_i_1__0 
       (.CI(\test_init_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\test_init_cnt_reg[8]_i_1__0_n_0 ,\test_init_cnt_reg[8]_i_1__0_n_1 ,\test_init_cnt_reg[8]_i_1__0_n_2 ,\test_init_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\test_init_cnt_reg[8]_i_1__0_n_4 ,\test_init_cnt_reg[8]_i_1__0_n_5 ,\test_init_cnt_reg[8]_i_1__0_n_6 ,\test_init_cnt_reg[8]_i_1__0_n_7 }),
        .S({\test_init_cnt[8]_i_2__0_n_0 ,\test_init_cnt[8]_i_3__0_n_0 ,\test_init_cnt[8]_i_4__0_n_0 ,\test_init_cnt[8]_i_5__0_n_0 }));
  FDRE \test_init_cnt_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\test_init_cnt[0]_i_1__0_n_0 ),
        .D(\test_init_cnt_reg[8]_i_1__0_n_6 ),
        .Q(test_init_cnt_reg[9]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'hFFFB)) 
    \tx_data_reg[0]_i_3__0 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\tx_data_reg[15]_i_5__0_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[2] ),
        .I3(\block_word_cnt_reg_n_0_[4] ),
        .O(\tx_data_reg[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEEEEEF)) 
    \tx_data_reg[10]_i_3 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(test_init_cnt_reg[2]),
        .I3(test_init_cnt_reg[0]),
        .I4(test_init_cnt_reg[1]),
        .I5(test_init_cnt_reg[3]),
        .O(\tx_data_reg[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \tx_data_reg[10]_i_4 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[5] ),
        .I3(\block_word_cnt_reg_n_0_[7] ),
        .I4(\block_word_cnt_reg_n_0_[6] ),
        .I5(\block_word_cnt_reg_n_0_[3] ),
        .O(\tx_data_reg[10]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    \tx_data_reg[11]_i_3__0 
       (.I0(\tx_data_reg[10]_i_3_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(test_init_cnt_reg[11]),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .I4(\tx_data_reg[15]_i_5__0_n_0 ),
        .O(\tx_data_reg[11]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \tx_data_reg[11]_i_4__0 
       (.I0(\tx_data_reg[15]_i_5__0_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .O(\tx_data_reg[11]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    \tx_data_reg[11]_i_5__0 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .O(\tx_data_reg[11]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'h00028282)) 
    \tx_data_reg[12]_i_2__0 
       (.I0(\tx_data_reg[15]_i_5__0_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[0] ),
        .I4(\block_word_cnt_reg_n_0_[1] ),
        .O(\tx_data_reg[12]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \tx_data_reg[12]_i_3__0 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\tx_data_reg[15]_i_5__0_n_0 ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[0] ),
        .O(\tx_data_reg[12]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \tx_data_reg[12]_i_5 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .O(\tx_data_reg[12]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h30008700)) 
    \tx_data_reg[15]_i_2__0 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\tx_data_reg[15]_i_5__0_n_0 ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(\tx_data_reg[15]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \tx_data_reg[15]_i_3__0 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[2] ),
        .I2(\tx_data_reg[10]_i_3_n_0 ),
        .O(\tx_data_reg[15]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \tx_data_reg[15]_i_5__0 
       (.I0(\block_word_cnt_reg_n_0_[3] ),
        .I1(\block_word_cnt_reg_n_0_[6] ),
        .I2(\block_word_cnt_reg_n_0_[7] ),
        .I3(\block_word_cnt_reg_n_0_[5] ),
        .O(\tx_data_reg[15]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    \tx_data_reg[2]_i_3__0 
       (.I0(\block_word_cnt_reg_n_0_[2] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .O(\tx_data_reg[2]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hABABABABABABABAA)) 
    \tx_data_reg[2]_i_5 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(test_init_cnt_reg[2]),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(test_init_cnt_reg[3]),
        .I4(test_init_cnt_reg[0]),
        .I5(test_init_cnt_reg[1]),
        .O(\tx_data_reg[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h95)) 
    \tx_data_reg[3]_i_3__0 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .O(\tx_data_reg[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000FE)) 
    \tx_data_reg[3]_i_4__0 
       (.I0(test_init_cnt_reg[1]),
        .I1(test_init_cnt_reg[0]),
        .I2(test_init_cnt_reg[2]),
        .I3(test_init_cnt_reg[3]),
        .I4(\block_word_cnt_reg_n_0_[4] ),
        .I5(\tx_data_reg[3]_i_5__0_n_0 ),
        .O(\tx_data_reg[3]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_data_reg[3]_i_5__0 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .O(\tx_data_reg[3]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'h08AA)) 
    \tx_data_reg[4]_i_3__0 
       (.I0(\tx_data_reg[15]_i_5__0_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[1] ),
        .I3(\block_word_cnt_reg_n_0_[2] ),
        .O(\tx_data_reg[4]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_data_reg[4]_i_5 
       (.I0(\block_word_cnt_reg_n_0_[1] ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .O(\tx_data_reg[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT5 #(
    .INIT(32'h00A0800A)) 
    \tx_data_reg[6]_i_2__0 
       (.I0(\tx_data_reg[15]_i_5__0_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[0] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .O(\tx_data_reg[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h8F)) 
    \tx_data_reg[8]_i_4 
       (.I0(\block_word_cnt_reg_n_0_[0] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .I2(\block_word_cnt_reg_n_0_[4] ),
        .O(\tx_data_reg[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_data_reg[8]_i_5 
       (.I0(\block_word_cnt_reg_n_0_[4] ),
        .I1(\block_word_cnt_reg_n_0_[1] ),
        .O(\tx_data_reg[8]_i_5_n_0 ));
  FDRE \tx_data_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_4),
        .Q(tx_data_reg[0]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_1),
        .Q(tx_data_reg[10]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_0),
        .Q(tx_data_reg[11]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_3),
        .Q(tx_data_reg[12]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_2),
        .Q(tx_data_reg[13]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_1),
        .Q(tx_data_reg[14]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_0),
        .Q(tx_data_reg[15]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_3),
        .Q(tx_data_reg[1]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_10),
        .Q(tx_data_reg[2]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(parity_encoder_inst_1_n_2),
        .Q(tx_data_reg[3]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_9),
        .Q(tx_data_reg[4]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_8),
        .Q(tx_data_reg[5]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_7),
        .Q(tx_data_reg[6]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_6),
        .Q(tx_data_reg[7]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_5),
        .Q(tx_data_reg[8]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \tx_data_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_gen_inst_1_n_4),
        .Q(tx_data_reg[9]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000822200000000)) 
    \txctrl_reg[0]_i_1__0 
       (.I0(\tx_data_reg[10]_i_3_n_0 ),
        .I1(\block_word_cnt_reg_n_0_[4] ),
        .I2(\block_word_cnt_reg_n_0_[0] ),
        .I3(\block_word_cnt_reg_n_0_[1] ),
        .I4(\block_word_cnt_reg_n_0_[2] ),
        .I5(\tx_data_reg[15]_i_5__0_n_0 ),
        .O(\txctrl_reg[0]_i_1__0_n_0 ));
  FDRE \txctrl_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\txctrl_reg[0]_i_1__0_n_0 ),
        .Q(\txctrl_reg_reg_n_0_[0] ),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[0]_i_2__0 
       (.I0(word_cnt_reg[3]),
        .O(\word_cnt[0]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[0]_i_3__0 
       (.I0(word_cnt_reg[2]),
        .O(\word_cnt[0]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[0]_i_4__0 
       (.I0(word_cnt_reg[1]),
        .O(\word_cnt[0]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \word_cnt[0]_i_5__0 
       (.I0(word_cnt_reg[0]),
        .O(\word_cnt[0]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[12]_i_2__0 
       (.I0(word_cnt_reg[15]),
        .O(\word_cnt[12]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[12]_i_3__0 
       (.I0(word_cnt_reg[14]),
        .O(\word_cnt[12]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[12]_i_4__0 
       (.I0(word_cnt_reg[13]),
        .O(\word_cnt[12]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[12]_i_5__0 
       (.I0(word_cnt_reg[12]),
        .O(\word_cnt[12]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[16]_i_2__0 
       (.I0(word_cnt_reg[19]),
        .O(\word_cnt[16]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[16]_i_3__0 
       (.I0(word_cnt_reg[18]),
        .O(\word_cnt[16]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[16]_i_4__0 
       (.I0(word_cnt_reg[17]),
        .O(\word_cnt[16]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[16]_i_5__0 
       (.I0(word_cnt_reg[16]),
        .O(\word_cnt[16]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[20]_i_2__0 
       (.I0(word_cnt_reg[23]),
        .O(\word_cnt[20]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[20]_i_3__0 
       (.I0(word_cnt_reg[22]),
        .O(\word_cnt[20]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[20]_i_4__0 
       (.I0(word_cnt_reg[21]),
        .O(\word_cnt[20]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[20]_i_5__0 
       (.I0(word_cnt_reg[20]),
        .O(\word_cnt[20]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[24]_i_2__0 
       (.I0(word_cnt_reg[27]),
        .O(\word_cnt[24]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[24]_i_3__0 
       (.I0(word_cnt_reg[26]),
        .O(\word_cnt[24]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[24]_i_4__0 
       (.I0(word_cnt_reg[25]),
        .O(\word_cnt[24]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[24]_i_5__0 
       (.I0(word_cnt_reg[24]),
        .O(\word_cnt[24]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[28]_i_2__0 
       (.I0(word_cnt_reg[31]),
        .O(\word_cnt[28]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[28]_i_3__0 
       (.I0(word_cnt_reg[30]),
        .O(\word_cnt[28]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[28]_i_4__0 
       (.I0(word_cnt_reg[29]),
        .O(\word_cnt[28]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[28]_i_5__0 
       (.I0(word_cnt_reg[28]),
        .O(\word_cnt[28]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[4]_i_2__0 
       (.I0(word_cnt_reg[7]),
        .O(\word_cnt[4]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[4]_i_3__0 
       (.I0(word_cnt_reg[6]),
        .O(\word_cnt[4]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[4]_i_4__0 
       (.I0(word_cnt_reg[5]),
        .O(\word_cnt[4]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[4]_i_5__0 
       (.I0(word_cnt_reg[4]),
        .O(\word_cnt[4]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[8]_i_2__0 
       (.I0(word_cnt_reg[11]),
        .O(\word_cnt[8]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[8]_i_3__0 
       (.I0(word_cnt_reg[10]),
        .O(\word_cnt[8]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[8]_i_4__0 
       (.I0(word_cnt_reg[9]),
        .O(\word_cnt[8]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \word_cnt[8]_i_5__0 
       (.I0(word_cnt_reg[8]),
        .O(\word_cnt[8]_i_5__0_n_0 ));
  FDRE \word_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[0]_i_1__0_n_7 ),
        .Q(word_cnt_reg[0]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \word_cnt_reg[0]_i_1__0 
       (.CI(1'b0),
        .CO({\word_cnt_reg[0]_i_1__0_n_0 ,\word_cnt_reg[0]_i_1__0_n_1 ,\word_cnt_reg[0]_i_1__0_n_2 ,\word_cnt_reg[0]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\word_cnt_reg[0]_i_1__0_n_4 ,\word_cnt_reg[0]_i_1__0_n_5 ,\word_cnt_reg[0]_i_1__0_n_6 ,\word_cnt_reg[0]_i_1__0_n_7 }),
        .S({\word_cnt[0]_i_2__0_n_0 ,\word_cnt[0]_i_3__0_n_0 ,\word_cnt[0]_i_4__0_n_0 ,\word_cnt[0]_i_5__0_n_0 }));
  FDRE \word_cnt_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[8]_i_1__0_n_5 ),
        .Q(word_cnt_reg[10]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[8]_i_1__0_n_4 ),
        .Q(word_cnt_reg[11]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[12]_i_1__0_n_7 ),
        .Q(word_cnt_reg[12]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \word_cnt_reg[12]_i_1__0 
       (.CI(\word_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\word_cnt_reg[12]_i_1__0_n_0 ,\word_cnt_reg[12]_i_1__0_n_1 ,\word_cnt_reg[12]_i_1__0_n_2 ,\word_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[12]_i_1__0_n_4 ,\word_cnt_reg[12]_i_1__0_n_5 ,\word_cnt_reg[12]_i_1__0_n_6 ,\word_cnt_reg[12]_i_1__0_n_7 }),
        .S({\word_cnt[12]_i_2__0_n_0 ,\word_cnt[12]_i_3__0_n_0 ,\word_cnt[12]_i_4__0_n_0 ,\word_cnt[12]_i_5__0_n_0 }));
  FDRE \word_cnt_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[12]_i_1__0_n_6 ),
        .Q(word_cnt_reg[13]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[12]_i_1__0_n_5 ),
        .Q(word_cnt_reg[14]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[12]_i_1__0_n_4 ),
        .Q(word_cnt_reg[15]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[16] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[16]_i_1__0_n_7 ),
        .Q(word_cnt_reg[16]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \word_cnt_reg[16]_i_1__0 
       (.CI(\word_cnt_reg[12]_i_1__0_n_0 ),
        .CO({\word_cnt_reg[16]_i_1__0_n_0 ,\word_cnt_reg[16]_i_1__0_n_1 ,\word_cnt_reg[16]_i_1__0_n_2 ,\word_cnt_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[16]_i_1__0_n_4 ,\word_cnt_reg[16]_i_1__0_n_5 ,\word_cnt_reg[16]_i_1__0_n_6 ,\word_cnt_reg[16]_i_1__0_n_7 }),
        .S({\word_cnt[16]_i_2__0_n_0 ,\word_cnt[16]_i_3__0_n_0 ,\word_cnt[16]_i_4__0_n_0 ,\word_cnt[16]_i_5__0_n_0 }));
  FDRE \word_cnt_reg[17] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[16]_i_1__0_n_6 ),
        .Q(word_cnt_reg[17]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[18] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[16]_i_1__0_n_5 ),
        .Q(word_cnt_reg[18]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[19] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[16]_i_1__0_n_4 ),
        .Q(word_cnt_reg[19]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[0]_i_1__0_n_6 ),
        .Q(word_cnt_reg[1]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[20] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[20]_i_1__0_n_7 ),
        .Q(word_cnt_reg[20]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \word_cnt_reg[20]_i_1__0 
       (.CI(\word_cnt_reg[16]_i_1__0_n_0 ),
        .CO({\word_cnt_reg[20]_i_1__0_n_0 ,\word_cnt_reg[20]_i_1__0_n_1 ,\word_cnt_reg[20]_i_1__0_n_2 ,\word_cnt_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[20]_i_1__0_n_4 ,\word_cnt_reg[20]_i_1__0_n_5 ,\word_cnt_reg[20]_i_1__0_n_6 ,\word_cnt_reg[20]_i_1__0_n_7 }),
        .S({\word_cnt[20]_i_2__0_n_0 ,\word_cnt[20]_i_3__0_n_0 ,\word_cnt[20]_i_4__0_n_0 ,\word_cnt[20]_i_5__0_n_0 }));
  FDRE \word_cnt_reg[21] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[20]_i_1__0_n_6 ),
        .Q(word_cnt_reg[21]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[22] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[20]_i_1__0_n_5 ),
        .Q(word_cnt_reg[22]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[23] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[20]_i_1__0_n_4 ),
        .Q(word_cnt_reg[23]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[24] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[24]_i_1__0_n_7 ),
        .Q(word_cnt_reg[24]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \word_cnt_reg[24]_i_1__0 
       (.CI(\word_cnt_reg[20]_i_1__0_n_0 ),
        .CO({\word_cnt_reg[24]_i_1__0_n_0 ,\word_cnt_reg[24]_i_1__0_n_1 ,\word_cnt_reg[24]_i_1__0_n_2 ,\word_cnt_reg[24]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[24]_i_1__0_n_4 ,\word_cnt_reg[24]_i_1__0_n_5 ,\word_cnt_reg[24]_i_1__0_n_6 ,\word_cnt_reg[24]_i_1__0_n_7 }),
        .S({\word_cnt[24]_i_2__0_n_0 ,\word_cnt[24]_i_3__0_n_0 ,\word_cnt[24]_i_4__0_n_0 ,\word_cnt[24]_i_5__0_n_0 }));
  FDRE \word_cnt_reg[25] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[24]_i_1__0_n_6 ),
        .Q(word_cnt_reg[25]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[26] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[24]_i_1__0_n_5 ),
        .Q(word_cnt_reg[26]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[27] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[24]_i_1__0_n_4 ),
        .Q(word_cnt_reg[27]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[28] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[28]_i_1__0_n_7 ),
        .Q(word_cnt_reg[28]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \word_cnt_reg[28]_i_1__0 
       (.CI(\word_cnt_reg[24]_i_1__0_n_0 ),
        .CO({\NLW_word_cnt_reg[28]_i_1__0_CO_UNCONNECTED [3],\word_cnt_reg[28]_i_1__0_n_1 ,\word_cnt_reg[28]_i_1__0_n_2 ,\word_cnt_reg[28]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[28]_i_1__0_n_4 ,\word_cnt_reg[28]_i_1__0_n_5 ,\word_cnt_reg[28]_i_1__0_n_6 ,\word_cnt_reg[28]_i_1__0_n_7 }),
        .S({\word_cnt[28]_i_2__0_n_0 ,\word_cnt[28]_i_3__0_n_0 ,\word_cnt[28]_i_4__0_n_0 ,\word_cnt[28]_i_5__0_n_0 }));
  FDRE \word_cnt_reg[29] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[28]_i_1__0_n_6 ),
        .Q(word_cnt_reg[29]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[0]_i_1__0_n_5 ),
        .Q(word_cnt_reg[2]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[30] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[28]_i_1__0_n_5 ),
        .Q(word_cnt_reg[30]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[31] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[28]_i_1__0_n_4 ),
        .Q(word_cnt_reg[31]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[0]_i_1__0_n_4 ),
        .Q(word_cnt_reg[3]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[4]_i_1__0_n_7 ),
        .Q(word_cnt_reg[4]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \word_cnt_reg[4]_i_1__0 
       (.CI(\word_cnt_reg[0]_i_1__0_n_0 ),
        .CO({\word_cnt_reg[4]_i_1__0_n_0 ,\word_cnt_reg[4]_i_1__0_n_1 ,\word_cnt_reg[4]_i_1__0_n_2 ,\word_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[4]_i_1__0_n_4 ,\word_cnt_reg[4]_i_1__0_n_5 ,\word_cnt_reg[4]_i_1__0_n_6 ,\word_cnt_reg[4]_i_1__0_n_7 }),
        .S({\word_cnt[4]_i_2__0_n_0 ,\word_cnt[4]_i_3__0_n_0 ,\word_cnt[4]_i_4__0_n_0 ,\word_cnt[4]_i_5__0_n_0 }));
  FDRE \word_cnt_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[4]_i_1__0_n_6 ),
        .Q(word_cnt_reg[5]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[4]_i_1__0_n_5 ),
        .Q(word_cnt_reg[6]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[4]_i_1__0_n_4 ),
        .Q(word_cnt_reg[7]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  FDRE \word_cnt_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[8]_i_1__0_n_7 ),
        .Q(word_cnt_reg[8]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
  CARRY4 \word_cnt_reg[8]_i_1__0 
       (.CI(\word_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\word_cnt_reg[8]_i_1__0_n_0 ,\word_cnt_reg[8]_i_1__0_n_1 ,\word_cnt_reg[8]_i_1__0_n_2 ,\word_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\word_cnt_reg[8]_i_1__0_n_4 ,\word_cnt_reg[8]_i_1__0_n_5 ,\word_cnt_reg[8]_i_1__0_n_6 ,\word_cnt_reg[8]_i_1__0_n_7 }),
        .S({\word_cnt[8]_i_2__0_n_0 ,\word_cnt[8]_i_3__0_n_0 ,\word_cnt[8]_i_4__0_n_0 ,\word_cnt[8]_i_5__0_n_0 }));
  FDRE \word_cnt_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\word_cnt_reg[8]_i_1__0_n_6 ),
        .Q(word_cnt_reg[9]),
        .R(\block_word_cnt[7]_i_1__2_n_0 ));
endmodule

(* ORIG_REF_NAME = "gtx3g_GT_USRCLK_SOURCE" *) 
module gtx3g_bert_0_gtx3g_GT_USRCLK_SOURCE
   (Q0_CLK1_GTREFCLK_OUT,
    GT0_TXUSRCLK_OUT,
    Q0_CLK1_GTREFCLK_PAD_P_IN,
    Q0_CLK1_GTREFCLK_PAD_N_IN,
    GT0_TXOUTCLK_IN);
  output Q0_CLK1_GTREFCLK_OUT;
  output GT0_TXUSRCLK_OUT;
  input Q0_CLK1_GTREFCLK_PAD_P_IN;
  input Q0_CLK1_GTREFCLK_PAD_N_IN;
  input GT0_TXOUTCLK_IN;

  wire GT0_TXOUTCLK_IN;
  wire GT0_TXUSRCLK_OUT;
  wire Q0_CLK1_GTREFCLK_OUT;
  wire Q0_CLK1_GTREFCLK_PAD_N_IN;
  wire Q0_CLK1_GTREFCLK_PAD_P_IN;
  wire NLW_ibufds_instQ0_CLK1_ODIV2_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  IBUFDS_GTE2 #(
    .CLKCM_CFG("TRUE"),
    .CLKRCV_TRST("TRUE"),
    .CLKSWING_CFG(2'b11)) 
    ibufds_instQ0_CLK1
       (.CEB(1'b0),
        .I(Q0_CLK1_GTREFCLK_PAD_P_IN),
        .IB(Q0_CLK1_GTREFCLK_PAD_N_IN),
        .O(Q0_CLK1_GTREFCLK_OUT),
        .ODIV2(NLW_ibufds_instQ0_CLK1_ODIV2_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG txoutclk_bufg0_i
       (.I(GT0_TXOUTCLK_IN),
        .O(GT0_TXUSRCLK_OUT));
endmodule

(* ORIG_REF_NAME = "gtx3g_RX_STARTUP_FSM" *) 
module gtx3g_bert_0_gtx3g_RX_STARTUP_FSM
   (SR,
    gt0_rx_fsm_reset_done_out,
    gt0_rxuserrdy_in,
    sysclk_in,
    gt0_rxusrclk_in,
    soft_reset_rx_in,
    dont_reset_on_data_error_in,
    gt0_txuserrdy_in,
    gt0_rxresetdone_out,
    gt0_data_valid_in,
    gt0_qplllock_in,
    gt0_rx_cdrlocked_reg);
  output [0:0]SR;
  output gt0_rx_fsm_reset_done_out;
  output gt0_rxuserrdy_in;
  input sysclk_in;
  input gt0_rxusrclk_in;
  input soft_reset_rx_in;
  input dont_reset_on_data_error_in;
  input gt0_txuserrdy_in;
  input gt0_rxresetdone_out;
  input gt0_data_valid_in;
  input gt0_qplllock_in;
  input gt0_rx_cdrlocked_reg;

  wire \FSM_sequential_rx_state[0]_i_2_n_0 ;
  wire \FSM_sequential_rx_state[2]_i_1_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_10_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_12_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_13_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_14_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_8_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_9_n_0 ;
  wire \FSM_sequential_rx_state_reg[3]_i_4_n_0 ;
  wire RXUSERRDY_i_1_n_0;
  wire [0:0]SR;
  wire check_tlock_max_i_1_n_0;
  wire check_tlock_max_reg_n_0;
  wire dont_reset_on_data_error_in;
  wire gt0_data_valid_in;
  wire gt0_qplllock_in;
  wire gt0_rx_cdrlocked_reg;
  wire gt0_rx_fsm_reset_done_out;
  wire gt0_rxresetdone_out;
  wire gt0_rxuserrdy_in;
  wire gt0_rxusrclk_in;
  wire gt0_txuserrdy_in;
  wire gtrxreset_i_i_1_n_0;
  wire init_wait_count;
  wire \init_wait_count[0]_i_1__1_n_0 ;
  wire \init_wait_count[6]_i_2__1_n_0 ;
  wire \init_wait_count[7]_i_3__1_n_0 ;
  wire [7:0]init_wait_count_reg__0;
  wire init_wait_done_i_1__1_n_0;
  wire init_wait_done_reg_n_0;
  wire \mmcm_lock_count[2]_i_1__1_n_0 ;
  wire \mmcm_lock_count[3]_i_1__1_n_0 ;
  wire \mmcm_lock_count[4]_i_1__1_n_0 ;
  wire \mmcm_lock_count[5]_i_1__1_n_0 ;
  wire \mmcm_lock_count[6]_i_1__1_n_0 ;
  wire \mmcm_lock_count[7]_i_1__1_n_0 ;
  wire \mmcm_lock_count[8]_i_1__1_n_0 ;
  wire \mmcm_lock_count[9]_i_2__1_n_0 ;
  wire \mmcm_lock_count[9]_i_4__1_n_0 ;
  wire [9:0]mmcm_lock_count_reg__0;
  wire mmcm_lock_reclocked;
  wire mmcm_lock_reclocked_i_2__1_n_0;
  wire [7:1]p_0_in;
  wire [9:0]p_0_in__0;
  wire qplllock_sync;
  wire reset_time_out_i_3_n_0;
  wire reset_time_out_i_5_n_0;
  wire reset_time_out_reg_n_0;
  wire run_phase_alignment_int_i_1__1_n_0;
  wire run_phase_alignment_int_reg_n_0;
  wire run_phase_alignment_int_s2;
  wire run_phase_alignment_int_s3_reg_n_0;
  wire rx_fsm_reset_done_int_s2;
  wire rx_fsm_reset_done_int_s3;
  (* RTL_KEEP = "yes" *) wire [3:0]rx_state;
  wire rx_state15_out;
  wire rx_state16_out;
  wire rxresetdone_s2;
  wire rxresetdone_s3;
  wire soft_reset_rx_in;
  wire sync_data_valid_n_0;
  wire sync_data_valid_n_1;
  wire sync_data_valid_n_2;
  wire sync_data_valid_n_3;
  wire sync_data_valid_n_4;
  wire sync_data_valid_n_5;
  wire sync_mmcm_lock_reclocked_n_0;
  wire sync_mmcm_lock_reclocked_n_1;
  wire sync_qplllock_n_0;
  wire sysclk_in;
  wire time_out_100us_i_1_n_0;
  wire time_out_100us_i_2_n_0;
  wire time_out_100us_reg_n_0;
  wire time_out_1us_i_1_n_0;
  wire time_out_1us_i_2_n_0;
  wire time_out_1us_i_3_n_0;
  wire time_out_1us_reg_n_0;
  wire time_out_2ms_i_1_n_0;
  wire time_out_2ms_i_2__1_n_0;
  wire time_out_2ms_i_3_n_0;
  wire time_out_2ms_i_4_n_0;
  wire time_out_2ms_reg_n_0;
  wire time_out_counter;
  wire \time_out_counter[0]_i_3_n_0 ;
  wire \time_out_counter[0]_i_4__1_n_0 ;
  wire \time_out_counter[0]_i_5_n_0 ;
  wire \time_out_counter[0]_i_6__1_n_0 ;
  wire \time_out_counter[0]_i_7__1_n_0 ;
  wire \time_out_counter[0]_i_8__1_n_0 ;
  wire \time_out_counter[0]_i_9__1_n_0 ;
  wire \time_out_counter[12]_i_2__1_n_0 ;
  wire \time_out_counter[12]_i_3__1_n_0 ;
  wire \time_out_counter[12]_i_4__1_n_0 ;
  wire \time_out_counter[12]_i_5__1_n_0 ;
  wire \time_out_counter[16]_i_2__1_n_0 ;
  wire \time_out_counter[16]_i_3__1_n_0 ;
  wire \time_out_counter[4]_i_2__1_n_0 ;
  wire \time_out_counter[4]_i_3__1_n_0 ;
  wire \time_out_counter[4]_i_4__1_n_0 ;
  wire \time_out_counter[4]_i_5__1_n_0 ;
  wire \time_out_counter[8]_i_2__1_n_0 ;
  wire \time_out_counter[8]_i_3__1_n_0 ;
  wire \time_out_counter[8]_i_4__1_n_0 ;
  wire \time_out_counter[8]_i_5__1_n_0 ;
  wire [17:0]time_out_counter_reg;
  wire \time_out_counter_reg[0]_i_2__1_n_0 ;
  wire \time_out_counter_reg[0]_i_2__1_n_1 ;
  wire \time_out_counter_reg[0]_i_2__1_n_2 ;
  wire \time_out_counter_reg[0]_i_2__1_n_3 ;
  wire \time_out_counter_reg[0]_i_2__1_n_4 ;
  wire \time_out_counter_reg[0]_i_2__1_n_5 ;
  wire \time_out_counter_reg[0]_i_2__1_n_6 ;
  wire \time_out_counter_reg[0]_i_2__1_n_7 ;
  wire \time_out_counter_reg[12]_i_1__1_n_0 ;
  wire \time_out_counter_reg[12]_i_1__1_n_1 ;
  wire \time_out_counter_reg[12]_i_1__1_n_2 ;
  wire \time_out_counter_reg[12]_i_1__1_n_3 ;
  wire \time_out_counter_reg[12]_i_1__1_n_4 ;
  wire \time_out_counter_reg[12]_i_1__1_n_5 ;
  wire \time_out_counter_reg[12]_i_1__1_n_6 ;
  wire \time_out_counter_reg[12]_i_1__1_n_7 ;
  wire \time_out_counter_reg[16]_i_1__1_n_3 ;
  wire \time_out_counter_reg[16]_i_1__1_n_6 ;
  wire \time_out_counter_reg[16]_i_1__1_n_7 ;
  wire \time_out_counter_reg[4]_i_1__1_n_0 ;
  wire \time_out_counter_reg[4]_i_1__1_n_1 ;
  wire \time_out_counter_reg[4]_i_1__1_n_2 ;
  wire \time_out_counter_reg[4]_i_1__1_n_3 ;
  wire \time_out_counter_reg[4]_i_1__1_n_4 ;
  wire \time_out_counter_reg[4]_i_1__1_n_5 ;
  wire \time_out_counter_reg[4]_i_1__1_n_6 ;
  wire \time_out_counter_reg[4]_i_1__1_n_7 ;
  wire \time_out_counter_reg[8]_i_1__1_n_0 ;
  wire \time_out_counter_reg[8]_i_1__1_n_1 ;
  wire \time_out_counter_reg[8]_i_1__1_n_2 ;
  wire \time_out_counter_reg[8]_i_1__1_n_3 ;
  wire \time_out_counter_reg[8]_i_1__1_n_4 ;
  wire \time_out_counter_reg[8]_i_1__1_n_5 ;
  wire \time_out_counter_reg[8]_i_1__1_n_6 ;
  wire \time_out_counter_reg[8]_i_1__1_n_7 ;
  wire time_out_wait_bypass_i_1__1_n_0;
  wire time_out_wait_bypass_reg_n_0;
  wire time_out_wait_bypass_s2;
  wire time_out_wait_bypass_s3;
  wire time_tlock_max;
  wire time_tlock_max_i_1_n_0;
  wire time_tlock_max_i_2_n_0;
  wire time_tlock_max_i_3_n_0;
  wire time_tlock_max_i_4_n_0;
  wire time_tlock_max_i_5_n_0;
  wire time_tlock_max_i_6_n_0;
  wire \wait_bypass_count[0]_i_10__1_n_0 ;
  wire \wait_bypass_count[0]_i_1__1_n_0 ;
  wire \wait_bypass_count[0]_i_2__1_n_0 ;
  wire \wait_bypass_count[0]_i_4__1_n_0 ;
  wire \wait_bypass_count[0]_i_5__1_n_0 ;
  wire \wait_bypass_count[0]_i_6__1_n_0 ;
  wire \wait_bypass_count[0]_i_7__1_n_0 ;
  wire \wait_bypass_count[0]_i_8__1_n_0 ;
  wire \wait_bypass_count[0]_i_9__1_n_0 ;
  wire \wait_bypass_count[12]_i_2__1_n_0 ;
  wire \wait_bypass_count[4]_i_2__1_n_0 ;
  wire \wait_bypass_count[4]_i_3__1_n_0 ;
  wire \wait_bypass_count[4]_i_4__1_n_0 ;
  wire \wait_bypass_count[4]_i_5__1_n_0 ;
  wire \wait_bypass_count[8]_i_2__1_n_0 ;
  wire \wait_bypass_count[8]_i_3__1_n_0 ;
  wire \wait_bypass_count[8]_i_4__1_n_0 ;
  wire \wait_bypass_count[8]_i_5__1_n_0 ;
  wire [12:0]wait_bypass_count_reg;
  wire \wait_bypass_count_reg[0]_i_3__1_n_0 ;
  wire \wait_bypass_count_reg[0]_i_3__1_n_1 ;
  wire \wait_bypass_count_reg[0]_i_3__1_n_2 ;
  wire \wait_bypass_count_reg[0]_i_3__1_n_3 ;
  wire \wait_bypass_count_reg[0]_i_3__1_n_4 ;
  wire \wait_bypass_count_reg[0]_i_3__1_n_5 ;
  wire \wait_bypass_count_reg[0]_i_3__1_n_6 ;
  wire \wait_bypass_count_reg[0]_i_3__1_n_7 ;
  wire \wait_bypass_count_reg[12]_i_1__1_n_7 ;
  wire \wait_bypass_count_reg[4]_i_1__1_n_0 ;
  wire \wait_bypass_count_reg[4]_i_1__1_n_1 ;
  wire \wait_bypass_count_reg[4]_i_1__1_n_2 ;
  wire \wait_bypass_count_reg[4]_i_1__1_n_3 ;
  wire \wait_bypass_count_reg[4]_i_1__1_n_4 ;
  wire \wait_bypass_count_reg[4]_i_1__1_n_5 ;
  wire \wait_bypass_count_reg[4]_i_1__1_n_6 ;
  wire \wait_bypass_count_reg[4]_i_1__1_n_7 ;
  wire \wait_bypass_count_reg[8]_i_1__1_n_0 ;
  wire \wait_bypass_count_reg[8]_i_1__1_n_1 ;
  wire \wait_bypass_count_reg[8]_i_1__1_n_2 ;
  wire \wait_bypass_count_reg[8]_i_1__1_n_3 ;
  wire \wait_bypass_count_reg[8]_i_1__1_n_4 ;
  wire \wait_bypass_count_reg[8]_i_1__1_n_5 ;
  wire \wait_bypass_count_reg[8]_i_1__1_n_6 ;
  wire \wait_bypass_count_reg[8]_i_1__1_n_7 ;
  wire \wait_time_cnt[0]_i_1__1_n_0 ;
  wire \wait_time_cnt[0]_i_2__1_n_0 ;
  wire \wait_time_cnt[0]_i_4__1_n_0 ;
  wire \wait_time_cnt[0]_i_5__1_n_0 ;
  wire \wait_time_cnt[0]_i_6__1_n_0 ;
  wire \wait_time_cnt[0]_i_7__1_n_0 ;
  wire \wait_time_cnt[0]_i_8__1_n_0 ;
  wire \wait_time_cnt[0]_i_9__1_n_0 ;
  wire \wait_time_cnt[12]_i_2__1_n_0 ;
  wire \wait_time_cnt[12]_i_3__1_n_0 ;
  wire \wait_time_cnt[12]_i_4__1_n_0 ;
  wire \wait_time_cnt[12]_i_5__1_n_0 ;
  wire \wait_time_cnt[4]_i_2__1_n_0 ;
  wire \wait_time_cnt[4]_i_3__1_n_0 ;
  wire \wait_time_cnt[4]_i_4__1_n_0 ;
  wire \wait_time_cnt[4]_i_5__1_n_0 ;
  wire \wait_time_cnt[8]_i_2__1_n_0 ;
  wire \wait_time_cnt[8]_i_3__1_n_0 ;
  wire \wait_time_cnt[8]_i_4__1_n_0 ;
  wire \wait_time_cnt[8]_i_5__1_n_0 ;
  wire [15:0]wait_time_cnt_reg;
  wire \wait_time_cnt_reg[0]_i_3__1_n_0 ;
  wire \wait_time_cnt_reg[0]_i_3__1_n_1 ;
  wire \wait_time_cnt_reg[0]_i_3__1_n_2 ;
  wire \wait_time_cnt_reg[0]_i_3__1_n_3 ;
  wire \wait_time_cnt_reg[0]_i_3__1_n_4 ;
  wire \wait_time_cnt_reg[0]_i_3__1_n_5 ;
  wire \wait_time_cnt_reg[0]_i_3__1_n_6 ;
  wire \wait_time_cnt_reg[0]_i_3__1_n_7 ;
  wire \wait_time_cnt_reg[12]_i_1__1_n_1 ;
  wire \wait_time_cnt_reg[12]_i_1__1_n_2 ;
  wire \wait_time_cnt_reg[12]_i_1__1_n_3 ;
  wire \wait_time_cnt_reg[12]_i_1__1_n_4 ;
  wire \wait_time_cnt_reg[12]_i_1__1_n_5 ;
  wire \wait_time_cnt_reg[12]_i_1__1_n_6 ;
  wire \wait_time_cnt_reg[12]_i_1__1_n_7 ;
  wire \wait_time_cnt_reg[4]_i_1__1_n_0 ;
  wire \wait_time_cnt_reg[4]_i_1__1_n_1 ;
  wire \wait_time_cnt_reg[4]_i_1__1_n_2 ;
  wire \wait_time_cnt_reg[4]_i_1__1_n_3 ;
  wire \wait_time_cnt_reg[4]_i_1__1_n_4 ;
  wire \wait_time_cnt_reg[4]_i_1__1_n_5 ;
  wire \wait_time_cnt_reg[4]_i_1__1_n_6 ;
  wire \wait_time_cnt_reg[4]_i_1__1_n_7 ;
  wire \wait_time_cnt_reg[8]_i_1__1_n_0 ;
  wire \wait_time_cnt_reg[8]_i_1__1_n_1 ;
  wire \wait_time_cnt_reg[8]_i_1__1_n_2 ;
  wire \wait_time_cnt_reg[8]_i_1__1_n_3 ;
  wire \wait_time_cnt_reg[8]_i_1__1_n_4 ;
  wire \wait_time_cnt_reg[8]_i_1__1_n_5 ;
  wire \wait_time_cnt_reg[8]_i_1__1_n_6 ;
  wire \wait_time_cnt_reg[8]_i_1__1_n_7 ;
  wire [3:1]\NLW_time_out_counter_reg[16]_i_1__1_CO_UNCONNECTED ;
  wire [3:2]\NLW_time_out_counter_reg[16]_i_1__1_O_UNCONNECTED ;
  wire [3:0]\NLW_wait_bypass_count_reg[12]_i_1__1_CO_UNCONNECTED ;
  wire [3:1]\NLW_wait_bypass_count_reg[12]_i_1__1_O_UNCONNECTED ;
  wire [3:3]\NLW_wait_time_cnt_reg[12]_i_1__1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h5F400040FFFFFFFF)) 
    \FSM_sequential_rx_state[0]_i_2 
       (.I0(reset_time_out_reg_n_0),
        .I1(time_tlock_max),
        .I2(rx_state[2]),
        .I3(rx_state[1]),
        .I4(time_out_2ms_reg_n_0),
        .I5(rx_state[0]),
        .O(\FSM_sequential_rx_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000F403F40)) 
    \FSM_sequential_rx_state[2]_i_1 
       (.I0(time_out_2ms_reg_n_0),
        .I1(rx_state[1]),
        .I2(rx_state[0]),
        .I3(rx_state[2]),
        .I4(rx_state16_out),
        .I5(rx_state[3]),
        .O(\FSM_sequential_rx_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_rx_state[2]_i_2 
       (.I0(time_tlock_max),
        .I1(reset_time_out_reg_n_0),
        .O(rx_state16_out));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_rx_state[3]_i_10 
       (.I0(init_wait_done_reg_n_0),
        .I1(rx_state[0]),
        .O(\FSM_sequential_rx_state[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_sequential_rx_state[3]_i_12 
       (.I0(wait_time_cnt_reg[12]),
        .I1(wait_time_cnt_reg[13]),
        .I2(wait_time_cnt_reg[10]),
        .I3(wait_time_cnt_reg[11]),
        .I4(wait_time_cnt_reg[15]),
        .I5(wait_time_cnt_reg[14]),
        .O(\FSM_sequential_rx_state[3]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_rx_state[3]_i_13 
       (.I0(wait_time_cnt_reg[1]),
        .I1(wait_time_cnt_reg[0]),
        .I2(wait_time_cnt_reg[3]),
        .I3(wait_time_cnt_reg[2]),
        .O(\FSM_sequential_rx_state[3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_sequential_rx_state[3]_i_14 
       (.I0(wait_time_cnt_reg[6]),
        .I1(wait_time_cnt_reg[7]),
        .I2(wait_time_cnt_reg[4]),
        .I3(wait_time_cnt_reg[5]),
        .I4(wait_time_cnt_reg[9]),
        .I5(wait_time_cnt_reg[8]),
        .O(\FSM_sequential_rx_state[3]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_rx_state[3]_i_7 
       (.I0(time_out_2ms_reg_n_0),
        .I1(reset_time_out_reg_n_0),
        .O(rx_state15_out));
  LUT5 #(
    .INIT(32'hF4FFF400)) 
    \FSM_sequential_rx_state[3]_i_8 
       (.I0(reset_time_out_reg_n_0),
        .I1(time_tlock_max),
        .I2(mmcm_lock_reclocked),
        .I3(rx_state[0]),
        .I4(gt0_rx_cdrlocked_reg),
        .O(\FSM_sequential_rx_state[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hEFE0E0E0E0E0E0E0)) 
    \FSM_sequential_rx_state[3]_i_9 
       (.I0(rx_state15_out),
        .I1(rxresetdone_s3),
        .I2(rx_state[0]),
        .I3(\FSM_sequential_rx_state[3]_i_12_n_0 ),
        .I4(\FSM_sequential_rx_state[3]_i_13_n_0 ),
        .I5(\FSM_sequential_rx_state[3]_i_14_n_0 ),
        .O(\FSM_sequential_rx_state[3]_i_9_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_rx_state_reg[0] 
       (.C(sysclk_in),
        .CE(sync_data_valid_n_2),
        .D(sync_data_valid_n_5),
        .Q(rx_state[0]),
        .R(soft_reset_rx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_rx_state_reg[1] 
       (.C(sysclk_in),
        .CE(sync_data_valid_n_2),
        .D(sync_data_valid_n_4),
        .Q(rx_state[1]),
        .R(soft_reset_rx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_rx_state_reg[2] 
       (.C(sysclk_in),
        .CE(sync_data_valid_n_2),
        .D(\FSM_sequential_rx_state[2]_i_1_n_0 ),
        .Q(rx_state[2]),
        .R(soft_reset_rx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_rx_state_reg[3] 
       (.C(sysclk_in),
        .CE(sync_data_valid_n_2),
        .D(sync_data_valid_n_3),
        .Q(rx_state[3]),
        .R(soft_reset_rx_in));
  MUXF7 \FSM_sequential_rx_state_reg[3]_i_4 
       (.I0(\FSM_sequential_rx_state[3]_i_8_n_0 ),
        .I1(\FSM_sequential_rx_state[3]_i_9_n_0 ),
        .O(\FSM_sequential_rx_state_reg[3]_i_4_n_0 ),
        .S(rx_state[1]));
  LUT6 #(
    .INIT(64'hFFFFFBFB00008000)) 
    RXUSERRDY_i_1
       (.I0(rx_state[1]),
        .I1(rx_state[0]),
        .I2(rx_state[2]),
        .I3(gt0_txuserrdy_in),
        .I4(rx_state[3]),
        .I5(gt0_rxuserrdy_in),
        .O(RXUSERRDY_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    RXUSERRDY_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(RXUSERRDY_i_1_n_0),
        .Q(gt0_rxuserrdy_in),
        .R(soft_reset_rx_in));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    check_tlock_max_i_1
       (.I0(rx_state[2]),
        .I1(rx_state[1]),
        .I2(rx_state[0]),
        .I3(rx_state[3]),
        .I4(check_tlock_max_reg_n_0),
        .O(check_tlock_max_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    check_tlock_max_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(check_tlock_max_i_1_n_0),
        .Q(check_tlock_max_reg_n_0),
        .R(soft_reset_rx_in));
  LUT5 #(
    .INIT(32'hFFEF0004)) 
    gtrxreset_i_i_1
       (.I0(rx_state[1]),
        .I1(rx_state[0]),
        .I2(rx_state[2]),
        .I3(rx_state[3]),
        .I4(SR),
        .O(gtrxreset_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtrxreset_i_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gtrxreset_i_i_1_n_0),
        .Q(SR),
        .R(soft_reset_rx_in));
  LUT1 #(
    .INIT(2'h1)) 
    \init_wait_count[0]_i_1__1 
       (.I0(init_wait_count_reg__0[0]),
        .O(\init_wait_count[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[1]_i_1__1 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \init_wait_count[2]_i_1__1 
       (.I0(init_wait_count_reg__0[1]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \init_wait_count[3]_i_1__1 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[1]),
        .I3(init_wait_count_reg__0[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \init_wait_count[4]_i_1__1 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[3]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[1]),
        .I4(init_wait_count_reg__0[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[5]_i_1__1 
       (.I0(init_wait_count_reg__0[3]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[4]),
        .I3(init_wait_count_reg__0[0]),
        .I4(init_wait_count_reg__0[1]),
        .I5(init_wait_count_reg__0[5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[6]_i_1__1 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[5]),
        .I4(\init_wait_count[6]_i_2__1_n_0 ),
        .I5(init_wait_count_reg__0[6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \init_wait_count[6]_i_2__1 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(\init_wait_count[6]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \init_wait_count[7]_i_1__1 
       (.I0(init_wait_count_reg__0[6]),
        .I1(init_wait_count_reg__0[7]),
        .I2(init_wait_count_reg__0[0]),
        .I3(\init_wait_count[7]_i_3__1_n_0 ),
        .I4(init_wait_count_reg__0[1]),
        .O(init_wait_count));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \init_wait_count[7]_i_2__1 
       (.I0(\init_wait_count[7]_i_3__1_n_0 ),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[6]),
        .I4(init_wait_count_reg__0[7]),
        .O(p_0_in[7]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \init_wait_count[7]_i_3__1 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[5]),
        .O(\init_wait_count[7]_i_3__1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[0] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(\init_wait_count[0]_i_1__1_n_0 ),
        .Q(init_wait_count_reg__0[0]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[1] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[1]),
        .Q(init_wait_count_reg__0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[2] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[2]),
        .Q(init_wait_count_reg__0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[3] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[3]),
        .Q(init_wait_count_reg__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[4] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[4]),
        .Q(init_wait_count_reg__0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[5] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[5]),
        .Q(init_wait_count_reg__0[5]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[6] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[6]),
        .Q(init_wait_count_reg__0[6]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[7] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[7]),
        .Q(init_wait_count_reg__0[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    init_wait_done_i_1__1
       (.I0(\init_wait_count[7]_i_3__1_n_0 ),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[7]),
        .I4(init_wait_count_reg__0[6]),
        .I5(init_wait_done_reg_n_0),
        .O(init_wait_done_i_1__1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    init_wait_done_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .CLR(soft_reset_rx_in),
        .D(init_wait_done_i_1__1_n_0),
        .Q(init_wait_done_reg_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[0]_i_1__1 
       (.I0(mmcm_lock_count_reg__0[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mmcm_lock_count[1]_i_1__1 
       (.I0(mmcm_lock_count_reg__0[0]),
        .I1(mmcm_lock_count_reg__0[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \mmcm_lock_count[2]_i_1__1 
       (.I0(mmcm_lock_count_reg__0[1]),
        .I1(mmcm_lock_count_reg__0[0]),
        .I2(mmcm_lock_count_reg__0[2]),
        .O(\mmcm_lock_count[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \mmcm_lock_count[3]_i_1__1 
       (.I0(mmcm_lock_count_reg__0[2]),
        .I1(mmcm_lock_count_reg__0[0]),
        .I2(mmcm_lock_count_reg__0[1]),
        .I3(mmcm_lock_count_reg__0[3]),
        .O(\mmcm_lock_count[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \mmcm_lock_count[4]_i_1__1 
       (.I0(mmcm_lock_count_reg__0[3]),
        .I1(mmcm_lock_count_reg__0[1]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[2]),
        .I4(mmcm_lock_count_reg__0[4]),
        .O(\mmcm_lock_count[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \mmcm_lock_count[5]_i_1__1 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[2]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[1]),
        .I4(mmcm_lock_count_reg__0[3]),
        .I5(mmcm_lock_count_reg__0[5]),
        .O(\mmcm_lock_count[5]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \mmcm_lock_count[6]_i_1__1 
       (.I0(\mmcm_lock_count[9]_i_4__1_n_0 ),
        .I1(mmcm_lock_count_reg__0[6]),
        .O(\mmcm_lock_count[6]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    \mmcm_lock_count[7]_i_1__1 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__1_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .O(\mmcm_lock_count[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'hDF20)) 
    \mmcm_lock_count[8]_i_1__1 
       (.I0(mmcm_lock_count_reg__0[7]),
        .I1(\mmcm_lock_count[9]_i_4__1_n_0 ),
        .I2(mmcm_lock_count_reg__0[6]),
        .I3(mmcm_lock_count_reg__0[8]),
        .O(\mmcm_lock_count[8]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h000000DF)) 
    \mmcm_lock_count[9]_i_2__1 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__1_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .I3(mmcm_lock_count_reg__0[8]),
        .I4(mmcm_lock_count_reg__0[9]),
        .O(\mmcm_lock_count[9]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \mmcm_lock_count[9]_i_3__1 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__1_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .I3(mmcm_lock_count_reg__0[8]),
        .I4(mmcm_lock_count_reg__0[9]),
        .O(p_0_in__0[9]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \mmcm_lock_count[9]_i_4__1 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[2]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[1]),
        .I4(mmcm_lock_count_reg__0[3]),
        .I5(mmcm_lock_count_reg__0[5]),
        .O(\mmcm_lock_count[9]_i_4__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[0] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__1_n_0 ),
        .D(p_0_in__0[0]),
        .Q(mmcm_lock_count_reg__0[0]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[1] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__1_n_0 ),
        .D(p_0_in__0[1]),
        .Q(mmcm_lock_count_reg__0[1]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[2] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__1_n_0 ),
        .D(\mmcm_lock_count[2]_i_1__1_n_0 ),
        .Q(mmcm_lock_count_reg__0[2]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[3] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__1_n_0 ),
        .D(\mmcm_lock_count[3]_i_1__1_n_0 ),
        .Q(mmcm_lock_count_reg__0[3]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[4] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__1_n_0 ),
        .D(\mmcm_lock_count[4]_i_1__1_n_0 ),
        .Q(mmcm_lock_count_reg__0[4]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[5] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__1_n_0 ),
        .D(\mmcm_lock_count[5]_i_1__1_n_0 ),
        .Q(mmcm_lock_count_reg__0[5]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[6] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__1_n_0 ),
        .D(\mmcm_lock_count[6]_i_1__1_n_0 ),
        .Q(mmcm_lock_count_reg__0[6]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[7] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__1_n_0 ),
        .D(\mmcm_lock_count[7]_i_1__1_n_0 ),
        .Q(mmcm_lock_count_reg__0[7]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[8] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__1_n_0 ),
        .D(\mmcm_lock_count[8]_i_1__1_n_0 ),
        .Q(mmcm_lock_count_reg__0[8]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[9] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__1_n_0 ),
        .D(p_0_in__0[9]),
        .Q(mmcm_lock_count_reg__0[9]),
        .R(sync_mmcm_lock_reclocked_n_0));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    mmcm_lock_reclocked_i_2__1
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__1_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .O(mmcm_lock_reclocked_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mmcm_lock_reclocked_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync_mmcm_lock_reclocked_n_1),
        .Q(mmcm_lock_reclocked),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h557710AA)) 
    reset_time_out_i_3
       (.I0(rx_state[3]),
        .I1(rx_state[1]),
        .I2(gt0_rx_cdrlocked_reg),
        .I3(rx_state[2]),
        .I4(rx_state[0]),
        .O(reset_time_out_i_3_n_0));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    reset_time_out_i_5
       (.I0(rxresetdone_s3),
        .I1(rx_state[1]),
        .I2(mmcm_lock_reclocked),
        .I3(rx_state[0]),
        .I4(gt0_rx_cdrlocked_reg),
        .O(reset_time_out_i_5_n_0));
  FDSE #(
    .INIT(1'b0)) 
    reset_time_out_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync_data_valid_n_1),
        .Q(reset_time_out_reg_n_0),
        .S(soft_reset_rx_in));
  LUT5 #(
    .INIT(32'hFFEF0002)) 
    run_phase_alignment_int_i_1__1
       (.I0(rx_state[3]),
        .I1(rx_state[1]),
        .I2(rx_state[0]),
        .I3(rx_state[2]),
        .I4(run_phase_alignment_int_reg_n_0),
        .O(run_phase_alignment_int_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(run_phase_alignment_int_i_1__1_n_0),
        .Q(run_phase_alignment_int_reg_n_0),
        .R(soft_reset_rx_in));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_s3_reg
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(run_phase_alignment_int_s2),
        .Q(run_phase_alignment_int_s3_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rx_fsm_reset_done_int_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync_data_valid_n_0),
        .Q(gt0_rx_fsm_reset_done_out),
        .R(soft_reset_rx_in));
  FDRE #(
    .INIT(1'b0)) 
    rx_fsm_reset_done_int_s3_reg
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(rx_fsm_reset_done_int_s2),
        .Q(rx_fsm_reset_done_int_s3),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxresetdone_s3_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(rxresetdone_s2),
        .Q(rxresetdone_s3),
        .R(1'b0));
  gtx3g_bert_0_gtx3g_sync_block_27 sync_RXRESETDONE
       (.data_out(rxresetdone_s2),
        .gt0_rxresetdone_out(gt0_rxresetdone_out),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_28 sync_data_valid
       (.D({sync_data_valid_n_3,sync_data_valid_n_4,sync_data_valid_n_5}),
        .E(sync_data_valid_n_2),
        .\FSM_sequential_rx_state_reg[1] (\FSM_sequential_rx_state_reg[3]_i_4_n_0 ),
        .\FSM_sequential_rx_state_reg[1]_0 (sync_qplllock_n_0),
        .\FSM_sequential_rx_state_reg[3] (reset_time_out_i_3_n_0),
        .data_out(qplllock_sync),
        .dont_reset_on_data_error_in(dont_reset_on_data_error_in),
        .gt0_data_valid_in(gt0_data_valid_in),
        .gt0_rx_fsm_reset_done_out(gt0_rx_fsm_reset_done_out),
        .out(rx_state),
        .reset_time_out_reg(sync_data_valid_n_1),
        .reset_time_out_reg_0(reset_time_out_reg_n_0),
        .reset_time_out_reg_1(\FSM_sequential_rx_state[0]_i_2_n_0 ),
        .rx_fsm_reset_done_int_reg(sync_data_valid_n_0),
        .rx_state15_out(rx_state15_out),
        .rx_state16_out(rx_state16_out),
        .rxresetdone_s3_reg(reset_time_out_i_5_n_0),
        .sysclk_in(sysclk_in),
        .time_out_100us_reg(time_out_100us_reg_n_0),
        .time_out_1us_reg(time_out_1us_reg_n_0),
        .time_out_wait_bypass_s3(time_out_wait_bypass_s3));
  gtx3g_bert_0_gtx3g_sync_block_29 sync_mmcm_lock_reclocked
       (.Q(mmcm_lock_count_reg__0[9:8]),
        .SR(sync_mmcm_lock_reclocked_n_0),
        .\mmcm_lock_count_reg[6] (mmcm_lock_reclocked_i_2__1_n_0),
        .mmcm_lock_reclocked(mmcm_lock_reclocked),
        .mmcm_lock_reclocked_reg(sync_mmcm_lock_reclocked_n_1),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_30 sync_qplllock
       (.\FSM_sequential_rx_state_reg[0] (sync_qplllock_n_0),
        .data_out(qplllock_sync),
        .gt0_qplllock_in(gt0_qplllock_in),
        .init_wait_done_reg(\FSM_sequential_rx_state[3]_i_10_n_0 ),
        .out(rx_state[1:0]),
        .sysclk_in(sysclk_in),
        .time_out_2ms_reg(time_out_2ms_reg_n_0),
        .\wait_time_cnt_reg[12] (\FSM_sequential_rx_state[3]_i_12_n_0 ),
        .\wait_time_cnt_reg[1] (\FSM_sequential_rx_state[3]_i_13_n_0 ),
        .\wait_time_cnt_reg[6] (\FSM_sequential_rx_state[3]_i_14_n_0 ));
  gtx3g_bert_0_gtx3g_sync_block_31 sync_run_phase_alignment_int
       (.data_in(run_phase_alignment_int_reg_n_0),
        .data_out(run_phase_alignment_int_s2),
        .gt0_rxusrclk_in(gt0_rxusrclk_in));
  gtx3g_bert_0_gtx3g_sync_block_32 sync_rx_fsm_reset_done_int
       (.data_out(rx_fsm_reset_done_int_s2),
        .gt0_rx_fsm_reset_done_out(gt0_rx_fsm_reset_done_out),
        .gt0_rxusrclk_in(gt0_rxusrclk_in));
  gtx3g_bert_0_gtx3g_sync_block_33 sync_time_out_wait_bypass
       (.data_in(time_out_wait_bypass_reg_n_0),
        .data_out(time_out_wait_bypass_s2),
        .sysclk_in(sysclk_in));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    time_out_100us_i_1
       (.I0(\time_out_counter[0]_i_3_n_0 ),
        .I1(time_tlock_max_i_4_n_0),
        .I2(time_out_2ms_i_3_n_0),
        .I3(time_out_counter_reg[6]),
        .I4(time_out_100us_i_2_n_0),
        .I5(time_out_100us_reg_n_0),
        .O(time_out_100us_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    time_out_100us_i_2
       (.I0(time_out_counter_reg[4]),
        .I1(time_out_counter_reg[9]),
        .I2(time_out_counter_reg[13]),
        .I3(time_out_counter_reg[12]),
        .I4(time_out_counter_reg[11]),
        .O(time_out_100us_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_100us_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_100us_i_1_n_0),
        .Q(time_out_100us_reg_n_0),
        .R(reset_time_out_reg_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000002)) 
    time_out_1us_i_1
       (.I0(time_out_1us_i_2_n_0),
        .I1(time_out_counter_reg[11]),
        .I2(time_out_counter_reg[12]),
        .I3(time_tlock_max_i_4_n_0),
        .I4(\time_out_counter[0]_i_4__1_n_0 ),
        .I5(time_out_1us_reg_n_0),
        .O(time_out_1us_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    time_out_1us_i_2
       (.I0(time_out_counter_reg[8]),
        .I1(time_out_counter_reg[10]),
        .I2(time_out_counter_reg[7]),
        .I3(time_out_counter_reg[5]),
        .I4(time_out_counter_reg[2]),
        .I5(time_out_1us_i_3_n_0),
        .O(time_out_1us_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    time_out_1us_i_3
       (.I0(time_out_counter_reg[3]),
        .I1(time_out_counter_reg[1]),
        .I2(time_out_counter_reg[0]),
        .O(time_out_1us_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_1us_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_1us_i_1_n_0),
        .Q(time_out_1us_reg_n_0),
        .R(reset_time_out_reg_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000004)) 
    time_out_2ms_i_1
       (.I0(\time_out_counter[0]_i_3_n_0 ),
        .I1(time_out_2ms_i_2__1_n_0),
        .I2(time_out_2ms_i_3_n_0),
        .I3(time_out_2ms_i_4_n_0),
        .I4(\time_out_counter[0]_i_4__1_n_0 ),
        .I5(time_out_2ms_reg_n_0),
        .O(time_out_2ms_i_1_n_0));
  LUT4 #(
    .INIT(16'h4000)) 
    time_out_2ms_i_2__1
       (.I0(time_out_counter_reg[12]),
        .I1(time_out_counter_reg[11]),
        .I2(time_out_counter_reg[17]),
        .I3(time_out_counter_reg[16]),
        .O(time_out_2ms_i_2__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    time_out_2ms_i_3
       (.I0(time_out_counter_reg[5]),
        .I1(time_out_counter_reg[7]),
        .O(time_out_2ms_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    time_out_2ms_i_4
       (.I0(time_out_counter_reg[14]),
        .I1(time_out_counter_reg[15]),
        .O(time_out_2ms_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_2ms_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_2ms_i_1_n_0),
        .Q(time_out_2ms_reg_n_0),
        .R(reset_time_out_reg_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \time_out_counter[0]_i_1 
       (.I0(time_out_counter_reg[5]),
        .I1(time_out_counter_reg[7]),
        .I2(\time_out_counter[0]_i_3_n_0 ),
        .I3(\time_out_counter[0]_i_4__1_n_0 ),
        .I4(time_out_counter_reg[11]),
        .I5(\time_out_counter[0]_i_5_n_0 ),
        .O(time_out_counter));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    \time_out_counter[0]_i_3 
       (.I0(time_out_counter_reg[10]),
        .I1(time_out_counter_reg[8]),
        .I2(time_out_counter_reg[2]),
        .I3(time_out_counter_reg[3]),
        .I4(time_out_counter_reg[1]),
        .I5(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \time_out_counter[0]_i_4__1 
       (.I0(time_out_counter_reg[6]),
        .I1(time_out_counter_reg[4]),
        .I2(time_out_counter_reg[13]),
        .I3(time_out_counter_reg[9]),
        .O(\time_out_counter[0]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    \time_out_counter[0]_i_5 
       (.I0(time_out_counter_reg[14]),
        .I1(time_out_counter_reg[15]),
        .I2(time_out_counter_reg[12]),
        .I3(time_out_counter_reg[17]),
        .I4(time_out_counter_reg[16]),
        .O(\time_out_counter[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_6__1 
       (.I0(time_out_counter_reg[3]),
        .O(\time_out_counter[0]_i_6__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_7__1 
       (.I0(time_out_counter_reg[2]),
        .O(\time_out_counter[0]_i_7__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_8__1 
       (.I0(time_out_counter_reg[1]),
        .O(\time_out_counter[0]_i_8__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \time_out_counter[0]_i_9__1 
       (.I0(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_9__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_2__1 
       (.I0(time_out_counter_reg[15]),
        .O(\time_out_counter[12]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_3__1 
       (.I0(time_out_counter_reg[14]),
        .O(\time_out_counter[12]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_4__1 
       (.I0(time_out_counter_reg[13]),
        .O(\time_out_counter[12]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_5__1 
       (.I0(time_out_counter_reg[12]),
        .O(\time_out_counter[12]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[16]_i_2__1 
       (.I0(time_out_counter_reg[17]),
        .O(\time_out_counter[16]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[16]_i_3__1 
       (.I0(time_out_counter_reg[16]),
        .O(\time_out_counter[16]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_2__1 
       (.I0(time_out_counter_reg[7]),
        .O(\time_out_counter[4]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_3__1 
       (.I0(time_out_counter_reg[6]),
        .O(\time_out_counter[4]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_4__1 
       (.I0(time_out_counter_reg[5]),
        .O(\time_out_counter[4]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_5__1 
       (.I0(time_out_counter_reg[4]),
        .O(\time_out_counter[4]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_2__1 
       (.I0(time_out_counter_reg[11]),
        .O(\time_out_counter[8]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_3__1 
       (.I0(time_out_counter_reg[10]),
        .O(\time_out_counter[8]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_4__1 
       (.I0(time_out_counter_reg[9]),
        .O(\time_out_counter[8]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_5__1 
       (.I0(time_out_counter_reg[8]),
        .O(\time_out_counter[8]_i_5__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[0] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__1_n_7 ),
        .Q(time_out_counter_reg[0]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[0]_i_2__1 
       (.CI(1'b0),
        .CO({\time_out_counter_reg[0]_i_2__1_n_0 ,\time_out_counter_reg[0]_i_2__1_n_1 ,\time_out_counter_reg[0]_i_2__1_n_2 ,\time_out_counter_reg[0]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\time_out_counter_reg[0]_i_2__1_n_4 ,\time_out_counter_reg[0]_i_2__1_n_5 ,\time_out_counter_reg[0]_i_2__1_n_6 ,\time_out_counter_reg[0]_i_2__1_n_7 }),
        .S({\time_out_counter[0]_i_6__1_n_0 ,\time_out_counter[0]_i_7__1_n_0 ,\time_out_counter[0]_i_8__1_n_0 ,\time_out_counter[0]_i_9__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[10] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__1_n_5 ),
        .Q(time_out_counter_reg[10]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[11] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__1_n_4 ),
        .Q(time_out_counter_reg[11]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[12] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__1_n_7 ),
        .Q(time_out_counter_reg[12]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[12]_i_1__1 
       (.CI(\time_out_counter_reg[8]_i_1__1_n_0 ),
        .CO({\time_out_counter_reg[12]_i_1__1_n_0 ,\time_out_counter_reg[12]_i_1__1_n_1 ,\time_out_counter_reg[12]_i_1__1_n_2 ,\time_out_counter_reg[12]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[12]_i_1__1_n_4 ,\time_out_counter_reg[12]_i_1__1_n_5 ,\time_out_counter_reg[12]_i_1__1_n_6 ,\time_out_counter_reg[12]_i_1__1_n_7 }),
        .S({\time_out_counter[12]_i_2__1_n_0 ,\time_out_counter[12]_i_3__1_n_0 ,\time_out_counter[12]_i_4__1_n_0 ,\time_out_counter[12]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[13] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__1_n_6 ),
        .Q(time_out_counter_reg[13]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[14] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__1_n_5 ),
        .Q(time_out_counter_reg[14]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[15] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__1_n_4 ),
        .Q(time_out_counter_reg[15]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[16] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1__1_n_7 ),
        .Q(time_out_counter_reg[16]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[16]_i_1__1 
       (.CI(\time_out_counter_reg[12]_i_1__1_n_0 ),
        .CO({\NLW_time_out_counter_reg[16]_i_1__1_CO_UNCONNECTED [3:1],\time_out_counter_reg[16]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_time_out_counter_reg[16]_i_1__1_O_UNCONNECTED [3:2],\time_out_counter_reg[16]_i_1__1_n_6 ,\time_out_counter_reg[16]_i_1__1_n_7 }),
        .S({1'b0,1'b0,\time_out_counter[16]_i_2__1_n_0 ,\time_out_counter[16]_i_3__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[17] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1__1_n_6 ),
        .Q(time_out_counter_reg[17]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[1] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__1_n_6 ),
        .Q(time_out_counter_reg[1]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[2] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__1_n_5 ),
        .Q(time_out_counter_reg[2]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[3] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__1_n_4 ),
        .Q(time_out_counter_reg[3]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[4] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__1_n_7 ),
        .Q(time_out_counter_reg[4]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[4]_i_1__1 
       (.CI(\time_out_counter_reg[0]_i_2__1_n_0 ),
        .CO({\time_out_counter_reg[4]_i_1__1_n_0 ,\time_out_counter_reg[4]_i_1__1_n_1 ,\time_out_counter_reg[4]_i_1__1_n_2 ,\time_out_counter_reg[4]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[4]_i_1__1_n_4 ,\time_out_counter_reg[4]_i_1__1_n_5 ,\time_out_counter_reg[4]_i_1__1_n_6 ,\time_out_counter_reg[4]_i_1__1_n_7 }),
        .S({\time_out_counter[4]_i_2__1_n_0 ,\time_out_counter[4]_i_3__1_n_0 ,\time_out_counter[4]_i_4__1_n_0 ,\time_out_counter[4]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[5] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__1_n_6 ),
        .Q(time_out_counter_reg[5]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[6] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__1_n_5 ),
        .Q(time_out_counter_reg[6]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[7] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__1_n_4 ),
        .Q(time_out_counter_reg[7]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[8] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__1_n_7 ),
        .Q(time_out_counter_reg[8]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[8]_i_1__1 
       (.CI(\time_out_counter_reg[4]_i_1__1_n_0 ),
        .CO({\time_out_counter_reg[8]_i_1__1_n_0 ,\time_out_counter_reg[8]_i_1__1_n_1 ,\time_out_counter_reg[8]_i_1__1_n_2 ,\time_out_counter_reg[8]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[8]_i_1__1_n_4 ,\time_out_counter_reg[8]_i_1__1_n_5 ,\time_out_counter_reg[8]_i_1__1_n_6 ,\time_out_counter_reg[8]_i_1__1_n_7 }),
        .S({\time_out_counter[8]_i_2__1_n_0 ,\time_out_counter[8]_i_3__1_n_0 ,\time_out_counter[8]_i_4__1_n_0 ,\time_out_counter[8]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[9] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__1_n_6 ),
        .Q(time_out_counter_reg[9]),
        .R(reset_time_out_reg_n_0));
  LUT4 #(
    .INIT(16'hAB00)) 
    time_out_wait_bypass_i_1__1
       (.I0(time_out_wait_bypass_reg_n_0),
        .I1(rx_fsm_reset_done_int_s3),
        .I2(\wait_bypass_count[0]_i_4__1_n_0 ),
        .I3(run_phase_alignment_int_s3_reg_n_0),
        .O(time_out_wait_bypass_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_reg
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(time_out_wait_bypass_i_1__1_n_0),
        .Q(time_out_wait_bypass_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_s3_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_wait_bypass_s2),
        .Q(time_out_wait_bypass_s3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFCCFF80)) 
    time_tlock_max_i_1
       (.I0(time_tlock_max_i_2_n_0),
        .I1(check_tlock_max_reg_n_0),
        .I2(time_out_counter_reg[13]),
        .I3(time_tlock_max_i_3_n_0),
        .I4(time_tlock_max_i_4_n_0),
        .I5(time_tlock_max),
        .O(time_tlock_max_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'hE)) 
    time_tlock_max_i_2
       (.I0(time_out_counter_reg[11]),
        .I1(time_out_counter_reg[12]),
        .O(time_tlock_max_i_2_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAA8AAA8AAA8)) 
    time_tlock_max_i_3
       (.I0(time_tlock_max_i_5_n_0),
        .I1(time_out_counter_reg[7]),
        .I2(time_out_counter_reg[5]),
        .I3(time_out_counter_reg[6]),
        .I4(time_tlock_max_i_6_n_0),
        .I5(time_out_counter_reg[4]),
        .O(time_tlock_max_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    time_tlock_max_i_4
       (.I0(time_out_counter_reg[17]),
        .I1(time_out_counter_reg[16]),
        .I2(time_out_counter_reg[15]),
        .I3(time_out_counter_reg[14]),
        .O(time_tlock_max_i_4_n_0));
  LUT5 #(
    .INIT(32'h80000000)) 
    time_tlock_max_i_5
       (.I0(check_tlock_max_reg_n_0),
        .I1(time_out_counter_reg[13]),
        .I2(time_out_counter_reg[9]),
        .I3(time_out_counter_reg[10]),
        .I4(time_out_counter_reg[8]),
        .O(time_tlock_max_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    time_tlock_max_i_6
       (.I0(time_out_counter_reg[0]),
        .I1(time_out_counter_reg[1]),
        .I2(time_out_counter_reg[3]),
        .I3(time_out_counter_reg[2]),
        .O(time_tlock_max_i_6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_tlock_max_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_tlock_max_i_1_n_0),
        .Q(time_tlock_max),
        .R(reset_time_out_reg_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \wait_bypass_count[0]_i_10__1 
       (.I0(wait_bypass_count_reg[2]),
        .I1(wait_bypass_count_reg[12]),
        .I2(wait_bypass_count_reg[4]),
        .I3(wait_bypass_count_reg[10]),
        .I4(wait_bypass_count_reg[6]),
        .I5(wait_bypass_count_reg[11]),
        .O(\wait_bypass_count[0]_i_10__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_1__1 
       (.I0(run_phase_alignment_int_s3_reg_n_0),
        .O(\wait_bypass_count[0]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \wait_bypass_count[0]_i_2__1 
       (.I0(\wait_bypass_count[0]_i_4__1_n_0 ),
        .I1(rx_fsm_reset_done_int_s3),
        .O(\wait_bypass_count[0]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFFFFFF)) 
    \wait_bypass_count[0]_i_4__1 
       (.I0(\wait_bypass_count[0]_i_9__1_n_0 ),
        .I1(wait_bypass_count_reg[1]),
        .I2(wait_bypass_count_reg[8]),
        .I3(wait_bypass_count_reg[0]),
        .I4(\wait_bypass_count[0]_i_10__1_n_0 ),
        .O(\wait_bypass_count[0]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_5__1 
       (.I0(wait_bypass_count_reg[3]),
        .O(\wait_bypass_count[0]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_6__1 
       (.I0(wait_bypass_count_reg[2]),
        .O(\wait_bypass_count[0]_i_6__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_7__1 
       (.I0(wait_bypass_count_reg[1]),
        .O(\wait_bypass_count[0]_i_7__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_8__1 
       (.I0(wait_bypass_count_reg[0]),
        .O(\wait_bypass_count[0]_i_8__1_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \wait_bypass_count[0]_i_9__1 
       (.I0(wait_bypass_count_reg[3]),
        .I1(wait_bypass_count_reg[5]),
        .I2(wait_bypass_count_reg[9]),
        .I3(wait_bypass_count_reg[7]),
        .O(\wait_bypass_count[0]_i_9__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[12]_i_2__1 
       (.I0(wait_bypass_count_reg[12]),
        .O(\wait_bypass_count[12]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_2__1 
       (.I0(wait_bypass_count_reg[7]),
        .O(\wait_bypass_count[4]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_3__1 
       (.I0(wait_bypass_count_reg[6]),
        .O(\wait_bypass_count[4]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_4__1 
       (.I0(wait_bypass_count_reg[5]),
        .O(\wait_bypass_count[4]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_5__1 
       (.I0(wait_bypass_count_reg[4]),
        .O(\wait_bypass_count[4]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_2__1 
       (.I0(wait_bypass_count_reg[11]),
        .O(\wait_bypass_count[8]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_3__1 
       (.I0(wait_bypass_count_reg[10]),
        .O(\wait_bypass_count[8]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_4__1 
       (.I0(wait_bypass_count_reg[9]),
        .O(\wait_bypass_count[8]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_5__1 
       (.I0(wait_bypass_count_reg[8]),
        .O(\wait_bypass_count[8]_i_5__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[0] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__1_n_7 ),
        .Q(wait_bypass_count_reg[0]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  CARRY4 \wait_bypass_count_reg[0]_i_3__1 
       (.CI(1'b0),
        .CO({\wait_bypass_count_reg[0]_i_3__1_n_0 ,\wait_bypass_count_reg[0]_i_3__1_n_1 ,\wait_bypass_count_reg[0]_i_3__1_n_2 ,\wait_bypass_count_reg[0]_i_3__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\wait_bypass_count_reg[0]_i_3__1_n_4 ,\wait_bypass_count_reg[0]_i_3__1_n_5 ,\wait_bypass_count_reg[0]_i_3__1_n_6 ,\wait_bypass_count_reg[0]_i_3__1_n_7 }),
        .S({\wait_bypass_count[0]_i_5__1_n_0 ,\wait_bypass_count[0]_i_6__1_n_0 ,\wait_bypass_count[0]_i_7__1_n_0 ,\wait_bypass_count[0]_i_8__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[10] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__1_n_5 ),
        .Q(wait_bypass_count_reg[10]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[11] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__1_n_4 ),
        .Q(wait_bypass_count_reg[11]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[12] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1__1_n_7 ),
        .Q(wait_bypass_count_reg[12]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  CARRY4 \wait_bypass_count_reg[12]_i_1__1 
       (.CI(\wait_bypass_count_reg[8]_i_1__1_n_0 ),
        .CO(\NLW_wait_bypass_count_reg[12]_i_1__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_wait_bypass_count_reg[12]_i_1__1_O_UNCONNECTED [3:1],\wait_bypass_count_reg[12]_i_1__1_n_7 }),
        .S({1'b0,1'b0,1'b0,\wait_bypass_count[12]_i_2__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[1] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__1_n_6 ),
        .Q(wait_bypass_count_reg[1]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[2] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__1_n_5 ),
        .Q(wait_bypass_count_reg[2]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[3] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__1_n_4 ),
        .Q(wait_bypass_count_reg[3]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[4] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__1_n_7 ),
        .Q(wait_bypass_count_reg[4]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  CARRY4 \wait_bypass_count_reg[4]_i_1__1 
       (.CI(\wait_bypass_count_reg[0]_i_3__1_n_0 ),
        .CO({\wait_bypass_count_reg[4]_i_1__1_n_0 ,\wait_bypass_count_reg[4]_i_1__1_n_1 ,\wait_bypass_count_reg[4]_i_1__1_n_2 ,\wait_bypass_count_reg[4]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[4]_i_1__1_n_4 ,\wait_bypass_count_reg[4]_i_1__1_n_5 ,\wait_bypass_count_reg[4]_i_1__1_n_6 ,\wait_bypass_count_reg[4]_i_1__1_n_7 }),
        .S({\wait_bypass_count[4]_i_2__1_n_0 ,\wait_bypass_count[4]_i_3__1_n_0 ,\wait_bypass_count[4]_i_4__1_n_0 ,\wait_bypass_count[4]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[5] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__1_n_6 ),
        .Q(wait_bypass_count_reg[5]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[6] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__1_n_5 ),
        .Q(wait_bypass_count_reg[6]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[7] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__1_n_4 ),
        .Q(wait_bypass_count_reg[7]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[8] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__1_n_7 ),
        .Q(wait_bypass_count_reg[8]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  CARRY4 \wait_bypass_count_reg[8]_i_1__1 
       (.CI(\wait_bypass_count_reg[4]_i_1__1_n_0 ),
        .CO({\wait_bypass_count_reg[8]_i_1__1_n_0 ,\wait_bypass_count_reg[8]_i_1__1_n_1 ,\wait_bypass_count_reg[8]_i_1__1_n_2 ,\wait_bypass_count_reg[8]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[8]_i_1__1_n_4 ,\wait_bypass_count_reg[8]_i_1__1_n_5 ,\wait_bypass_count_reg[8]_i_1__1_n_6 ,\wait_bypass_count_reg[8]_i_1__1_n_7 }),
        .S({\wait_bypass_count[8]_i_2__1_n_0 ,\wait_bypass_count[8]_i_3__1_n_0 ,\wait_bypass_count[8]_i_4__1_n_0 ,\wait_bypass_count[8]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[9] 
       (.C(gt0_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__1_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__1_n_6 ),
        .Q(wait_bypass_count_reg[9]),
        .R(\wait_bypass_count[0]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \wait_time_cnt[0]_i_1__1 
       (.I0(rx_state[3]),
        .I1(rx_state[1]),
        .I2(rx_state[0]),
        .O(\wait_time_cnt[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_2__1 
       (.I0(wait_time_cnt_reg[1]),
        .I1(wait_time_cnt_reg[0]),
        .I2(wait_time_cnt_reg[3]),
        .I3(wait_time_cnt_reg[2]),
        .I4(\wait_time_cnt[0]_i_4__1_n_0 ),
        .I5(\wait_time_cnt[0]_i_5__1_n_0 ),
        .O(\wait_time_cnt[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_4__1 
       (.I0(wait_time_cnt_reg[14]),
        .I1(wait_time_cnt_reg[15]),
        .I2(wait_time_cnt_reg[12]),
        .I3(wait_time_cnt_reg[13]),
        .I4(wait_time_cnt_reg[11]),
        .I5(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[0]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_5__1 
       (.I0(wait_time_cnt_reg[8]),
        .I1(wait_time_cnt_reg[9]),
        .I2(wait_time_cnt_reg[6]),
        .I3(wait_time_cnt_reg[7]),
        .I4(wait_time_cnt_reg[5]),
        .I5(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[0]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_6__1 
       (.I0(wait_time_cnt_reg[3]),
        .O(\wait_time_cnt[0]_i_6__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_7__1 
       (.I0(wait_time_cnt_reg[2]),
        .O(\wait_time_cnt[0]_i_7__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_8__1 
       (.I0(wait_time_cnt_reg[1]),
        .O(\wait_time_cnt[0]_i_8__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_9__1 
       (.I0(wait_time_cnt_reg[0]),
        .O(\wait_time_cnt[0]_i_9__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_2__1 
       (.I0(wait_time_cnt_reg[15]),
        .O(\wait_time_cnt[12]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_3__1 
       (.I0(wait_time_cnt_reg[14]),
        .O(\wait_time_cnt[12]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_4__1 
       (.I0(wait_time_cnt_reg[13]),
        .O(\wait_time_cnt[12]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_5__1 
       (.I0(wait_time_cnt_reg[12]),
        .O(\wait_time_cnt[12]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_2__1 
       (.I0(wait_time_cnt_reg[7]),
        .O(\wait_time_cnt[4]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_3__1 
       (.I0(wait_time_cnt_reg[6]),
        .O(\wait_time_cnt[4]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_4__1 
       (.I0(wait_time_cnt_reg[5]),
        .O(\wait_time_cnt[4]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_5__1 
       (.I0(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[4]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_2__1 
       (.I0(wait_time_cnt_reg[11]),
        .O(\wait_time_cnt[8]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_3__1 
       (.I0(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[8]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_4__1 
       (.I0(wait_time_cnt_reg[9]),
        .O(\wait_time_cnt[8]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_5__1 
       (.I0(wait_time_cnt_reg[8]),
        .O(\wait_time_cnt[8]_i_5__1_n_0 ));
  FDRE \wait_time_cnt_reg[0] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__1_n_7 ),
        .Q(wait_time_cnt_reg[0]),
        .R(\wait_time_cnt[0]_i_1__1_n_0 ));
  CARRY4 \wait_time_cnt_reg[0]_i_3__1 
       (.CI(1'b0),
        .CO({\wait_time_cnt_reg[0]_i_3__1_n_0 ,\wait_time_cnt_reg[0]_i_3__1_n_1 ,\wait_time_cnt_reg[0]_i_3__1_n_2 ,\wait_time_cnt_reg[0]_i_3__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[0]_i_3__1_n_4 ,\wait_time_cnt_reg[0]_i_3__1_n_5 ,\wait_time_cnt_reg[0]_i_3__1_n_6 ,\wait_time_cnt_reg[0]_i_3__1_n_7 }),
        .S({\wait_time_cnt[0]_i_6__1_n_0 ,\wait_time_cnt[0]_i_7__1_n_0 ,\wait_time_cnt[0]_i_8__1_n_0 ,\wait_time_cnt[0]_i_9__1_n_0 }));
  FDRE \wait_time_cnt_reg[10] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__1_n_5 ),
        .Q(wait_time_cnt_reg[10]),
        .R(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDRE \wait_time_cnt_reg[11] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__1_n_4 ),
        .Q(wait_time_cnt_reg[11]),
        .R(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDRE \wait_time_cnt_reg[12] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__1_n_7 ),
        .Q(wait_time_cnt_reg[12]),
        .R(\wait_time_cnt[0]_i_1__1_n_0 ));
  CARRY4 \wait_time_cnt_reg[12]_i_1__1 
       (.CI(\wait_time_cnt_reg[8]_i_1__1_n_0 ),
        .CO({\NLW_wait_time_cnt_reg[12]_i_1__1_CO_UNCONNECTED [3],\wait_time_cnt_reg[12]_i_1__1_n_1 ,\wait_time_cnt_reg[12]_i_1__1_n_2 ,\wait_time_cnt_reg[12]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[12]_i_1__1_n_4 ,\wait_time_cnt_reg[12]_i_1__1_n_5 ,\wait_time_cnt_reg[12]_i_1__1_n_6 ,\wait_time_cnt_reg[12]_i_1__1_n_7 }),
        .S({\wait_time_cnt[12]_i_2__1_n_0 ,\wait_time_cnt[12]_i_3__1_n_0 ,\wait_time_cnt[12]_i_4__1_n_0 ,\wait_time_cnt[12]_i_5__1_n_0 }));
  FDRE \wait_time_cnt_reg[13] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__1_n_6 ),
        .Q(wait_time_cnt_reg[13]),
        .R(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDRE \wait_time_cnt_reg[14] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__1_n_5 ),
        .Q(wait_time_cnt_reg[14]),
        .R(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDRE \wait_time_cnt_reg[15] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__1_n_4 ),
        .Q(wait_time_cnt_reg[15]),
        .R(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDRE \wait_time_cnt_reg[1] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__1_n_6 ),
        .Q(wait_time_cnt_reg[1]),
        .R(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDRE \wait_time_cnt_reg[2] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__1_n_5 ),
        .Q(wait_time_cnt_reg[2]),
        .R(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDSE \wait_time_cnt_reg[3] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__1_n_4 ),
        .Q(wait_time_cnt_reg[3]),
        .S(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDRE \wait_time_cnt_reg[4] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__1_n_7 ),
        .Q(wait_time_cnt_reg[4]),
        .R(\wait_time_cnt[0]_i_1__1_n_0 ));
  CARRY4 \wait_time_cnt_reg[4]_i_1__1 
       (.CI(\wait_time_cnt_reg[0]_i_3__1_n_0 ),
        .CO({\wait_time_cnt_reg[4]_i_1__1_n_0 ,\wait_time_cnt_reg[4]_i_1__1_n_1 ,\wait_time_cnt_reg[4]_i_1__1_n_2 ,\wait_time_cnt_reg[4]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[4]_i_1__1_n_4 ,\wait_time_cnt_reg[4]_i_1__1_n_5 ,\wait_time_cnt_reg[4]_i_1__1_n_6 ,\wait_time_cnt_reg[4]_i_1__1_n_7 }),
        .S({\wait_time_cnt[4]_i_2__1_n_0 ,\wait_time_cnt[4]_i_3__1_n_0 ,\wait_time_cnt[4]_i_4__1_n_0 ,\wait_time_cnt[4]_i_5__1_n_0 }));
  FDSE \wait_time_cnt_reg[5] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__1_n_6 ),
        .Q(wait_time_cnt_reg[5]),
        .S(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDSE \wait_time_cnt_reg[6] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__1_n_5 ),
        .Q(wait_time_cnt_reg[6]),
        .S(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDSE \wait_time_cnt_reg[7] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__1_n_4 ),
        .Q(wait_time_cnt_reg[7]),
        .S(\wait_time_cnt[0]_i_1__1_n_0 ));
  FDSE \wait_time_cnt_reg[8] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__1_n_7 ),
        .Q(wait_time_cnt_reg[8]),
        .S(\wait_time_cnt[0]_i_1__1_n_0 ));
  CARRY4 \wait_time_cnt_reg[8]_i_1__1 
       (.CI(\wait_time_cnt_reg[4]_i_1__1_n_0 ),
        .CO({\wait_time_cnt_reg[8]_i_1__1_n_0 ,\wait_time_cnt_reg[8]_i_1__1_n_1 ,\wait_time_cnt_reg[8]_i_1__1_n_2 ,\wait_time_cnt_reg[8]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[8]_i_1__1_n_4 ,\wait_time_cnt_reg[8]_i_1__1_n_5 ,\wait_time_cnt_reg[8]_i_1__1_n_6 ,\wait_time_cnt_reg[8]_i_1__1_n_7 }),
        .S({\wait_time_cnt[8]_i_2__1_n_0 ,\wait_time_cnt[8]_i_3__1_n_0 ,\wait_time_cnt[8]_i_4__1_n_0 ,\wait_time_cnt[8]_i_5__1_n_0 }));
  FDSE \wait_time_cnt_reg[9] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__1_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__1_n_6 ),
        .Q(wait_time_cnt_reg[9]),
        .S(\wait_time_cnt[0]_i_1__1_n_0 ));
endmodule

(* ORIG_REF_NAME = "gtx3g_RX_STARTUP_FSM" *) 
module gtx3g_bert_0_gtx3g_RX_STARTUP_FSM_1
   (SR,
    gt1_rx_fsm_reset_done_out,
    gt1_rxuserrdy_in,
    sysclk_in,
    gt1_rxusrclk_in,
    soft_reset_rx_in,
    dont_reset_on_data_error_in,
    gt1_txuserrdy_in,
    gt1_rxresetdone_out,
    gt1_data_valid_in,
    gt0_qplllock_in,
    gt1_rx_cdrlocked_reg);
  output [0:0]SR;
  output gt1_rx_fsm_reset_done_out;
  output gt1_rxuserrdy_in;
  input sysclk_in;
  input gt1_rxusrclk_in;
  input soft_reset_rx_in;
  input dont_reset_on_data_error_in;
  input gt1_txuserrdy_in;
  input gt1_rxresetdone_out;
  input gt1_data_valid_in;
  input gt0_qplllock_in;
  input gt1_rx_cdrlocked_reg;

  wire \FSM_sequential_rx_state[0]_i_2__0_n_0 ;
  wire \FSM_sequential_rx_state[2]_i_1__0_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_10__0_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_12__0_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_13__0_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_14__0_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_8__0_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_9__0_n_0 ;
  wire \FSM_sequential_rx_state_reg[3]_i_4__0_n_0 ;
  wire RXUSERRDY_i_1__0_n_0;
  wire [0:0]SR;
  wire check_tlock_max_i_1__0_n_0;
  wire check_tlock_max_reg_n_0;
  wire dont_reset_on_data_error_in;
  wire gt0_qplllock_in;
  wire gt1_data_valid_in;
  wire gt1_rx_cdrlocked_reg;
  wire gt1_rx_fsm_reset_done_out;
  wire gt1_rxresetdone_out;
  wire gt1_rxuserrdy_in;
  wire gt1_rxusrclk_in;
  wire gt1_txuserrdy_in;
  wire gtrxreset_i_i_1__0_n_0;
  wire init_wait_count;
  wire \init_wait_count[0]_i_1__2_n_0 ;
  wire \init_wait_count[6]_i_2__2_n_0 ;
  wire \init_wait_count[7]_i_3__2_n_0 ;
  wire [7:0]init_wait_count_reg__0;
  wire init_wait_done_i_1__2_n_0;
  wire init_wait_done_reg_n_0;
  wire \mmcm_lock_count[2]_i_1__2_n_0 ;
  wire \mmcm_lock_count[3]_i_1__2_n_0 ;
  wire \mmcm_lock_count[4]_i_1__2_n_0 ;
  wire \mmcm_lock_count[5]_i_1__2_n_0 ;
  wire \mmcm_lock_count[6]_i_1__2_n_0 ;
  wire \mmcm_lock_count[7]_i_1__2_n_0 ;
  wire \mmcm_lock_count[8]_i_1__2_n_0 ;
  wire \mmcm_lock_count[9]_i_2__2_n_0 ;
  wire \mmcm_lock_count[9]_i_4__2_n_0 ;
  wire [9:0]mmcm_lock_count_reg__0;
  wire mmcm_lock_reclocked;
  wire mmcm_lock_reclocked_i_2__2_n_0;
  wire [7:1]p_0_in;
  wire [9:0]p_0_in__0;
  wire qplllock_sync;
  wire reset_time_out_i_3__0_n_0;
  wire reset_time_out_i_5__0_n_0;
  wire reset_time_out_reg_n_0;
  wire run_phase_alignment_int_i_1__2_n_0;
  wire run_phase_alignment_int_reg_n_0;
  wire run_phase_alignment_int_s2;
  wire run_phase_alignment_int_s3_reg_n_0;
  wire rx_fsm_reset_done_int_s2;
  wire rx_fsm_reset_done_int_s3_reg_n_0;
  (* RTL_KEEP = "yes" *) wire [3:0]rx_state;
  wire rx_state15_out;
  wire rx_state16_out;
  wire rxresetdone_s2;
  wire rxresetdone_s3;
  wire soft_reset_rx_in;
  wire sync_data_valid_n_0;
  wire sync_data_valid_n_1;
  wire sync_data_valid_n_2;
  wire sync_data_valid_n_3;
  wire sync_data_valid_n_4;
  wire sync_data_valid_n_5;
  wire sync_mmcm_lock_reclocked_n_0;
  wire sync_mmcm_lock_reclocked_n_1;
  wire sync_qplllock_n_0;
  wire sysclk_in;
  wire time_out_100us_i_1__0_n_0;
  wire time_out_100us_i_2__0_n_0;
  wire time_out_100us_reg_n_0;
  wire time_out_1us_i_1__0_n_0;
  wire time_out_1us_i_2__0_n_0;
  wire time_out_1us_i_3__0_n_0;
  wire time_out_1us_reg_n_0;
  wire time_out_2ms_i_1__0_n_0;
  wire time_out_2ms_i_2__2_n_0;
  wire time_out_2ms_i_3__0_n_0;
  wire time_out_2ms_i_4__0_n_0;
  wire time_out_2ms_reg_n_0;
  wire time_out_counter;
  wire \time_out_counter[0]_i_3__0_n_0 ;
  wire \time_out_counter[0]_i_4__2_n_0 ;
  wire \time_out_counter[0]_i_5__0_n_0 ;
  wire \time_out_counter[0]_i_6__2_n_0 ;
  wire \time_out_counter[0]_i_7__2_n_0 ;
  wire \time_out_counter[0]_i_8__2_n_0 ;
  wire \time_out_counter[0]_i_9__2_n_0 ;
  wire \time_out_counter[12]_i_2__2_n_0 ;
  wire \time_out_counter[12]_i_3__2_n_0 ;
  wire \time_out_counter[12]_i_4__2_n_0 ;
  wire \time_out_counter[12]_i_5__2_n_0 ;
  wire \time_out_counter[16]_i_2__2_n_0 ;
  wire \time_out_counter[16]_i_3__2_n_0 ;
  wire \time_out_counter[4]_i_2__2_n_0 ;
  wire \time_out_counter[4]_i_3__2_n_0 ;
  wire \time_out_counter[4]_i_4__2_n_0 ;
  wire \time_out_counter[4]_i_5__2_n_0 ;
  wire \time_out_counter[8]_i_2__2_n_0 ;
  wire \time_out_counter[8]_i_3__2_n_0 ;
  wire \time_out_counter[8]_i_4__2_n_0 ;
  wire \time_out_counter[8]_i_5__2_n_0 ;
  wire [17:0]time_out_counter_reg;
  wire \time_out_counter_reg[0]_i_2__2_n_0 ;
  wire \time_out_counter_reg[0]_i_2__2_n_1 ;
  wire \time_out_counter_reg[0]_i_2__2_n_2 ;
  wire \time_out_counter_reg[0]_i_2__2_n_3 ;
  wire \time_out_counter_reg[0]_i_2__2_n_4 ;
  wire \time_out_counter_reg[0]_i_2__2_n_5 ;
  wire \time_out_counter_reg[0]_i_2__2_n_6 ;
  wire \time_out_counter_reg[0]_i_2__2_n_7 ;
  wire \time_out_counter_reg[12]_i_1__2_n_0 ;
  wire \time_out_counter_reg[12]_i_1__2_n_1 ;
  wire \time_out_counter_reg[12]_i_1__2_n_2 ;
  wire \time_out_counter_reg[12]_i_1__2_n_3 ;
  wire \time_out_counter_reg[12]_i_1__2_n_4 ;
  wire \time_out_counter_reg[12]_i_1__2_n_5 ;
  wire \time_out_counter_reg[12]_i_1__2_n_6 ;
  wire \time_out_counter_reg[12]_i_1__2_n_7 ;
  wire \time_out_counter_reg[16]_i_1__2_n_3 ;
  wire \time_out_counter_reg[16]_i_1__2_n_6 ;
  wire \time_out_counter_reg[16]_i_1__2_n_7 ;
  wire \time_out_counter_reg[4]_i_1__2_n_0 ;
  wire \time_out_counter_reg[4]_i_1__2_n_1 ;
  wire \time_out_counter_reg[4]_i_1__2_n_2 ;
  wire \time_out_counter_reg[4]_i_1__2_n_3 ;
  wire \time_out_counter_reg[4]_i_1__2_n_4 ;
  wire \time_out_counter_reg[4]_i_1__2_n_5 ;
  wire \time_out_counter_reg[4]_i_1__2_n_6 ;
  wire \time_out_counter_reg[4]_i_1__2_n_7 ;
  wire \time_out_counter_reg[8]_i_1__2_n_0 ;
  wire \time_out_counter_reg[8]_i_1__2_n_1 ;
  wire \time_out_counter_reg[8]_i_1__2_n_2 ;
  wire \time_out_counter_reg[8]_i_1__2_n_3 ;
  wire \time_out_counter_reg[8]_i_1__2_n_4 ;
  wire \time_out_counter_reg[8]_i_1__2_n_5 ;
  wire \time_out_counter_reg[8]_i_1__2_n_6 ;
  wire \time_out_counter_reg[8]_i_1__2_n_7 ;
  wire time_out_wait_bypass_i_1__2_n_0;
  wire time_out_wait_bypass_reg_n_0;
  wire time_out_wait_bypass_s2;
  wire time_out_wait_bypass_s3;
  wire time_tlock_max;
  wire time_tlock_max_i_1__0_n_0;
  wire time_tlock_max_i_2__0_n_0;
  wire time_tlock_max_i_3__0_n_0;
  wire time_tlock_max_i_4__0_n_0;
  wire time_tlock_max_i_5__0_n_0;
  wire time_tlock_max_i_6__0_n_0;
  wire \wait_bypass_count[0]_i_10__2_n_0 ;
  wire \wait_bypass_count[0]_i_1__2_n_0 ;
  wire \wait_bypass_count[0]_i_2__2_n_0 ;
  wire \wait_bypass_count[0]_i_4__2_n_0 ;
  wire \wait_bypass_count[0]_i_5__2_n_0 ;
  wire \wait_bypass_count[0]_i_6__2_n_0 ;
  wire \wait_bypass_count[0]_i_7__2_n_0 ;
  wire \wait_bypass_count[0]_i_8__2_n_0 ;
  wire \wait_bypass_count[0]_i_9__2_n_0 ;
  wire \wait_bypass_count[12]_i_2__2_n_0 ;
  wire \wait_bypass_count[4]_i_2__2_n_0 ;
  wire \wait_bypass_count[4]_i_3__2_n_0 ;
  wire \wait_bypass_count[4]_i_4__2_n_0 ;
  wire \wait_bypass_count[4]_i_5__2_n_0 ;
  wire \wait_bypass_count[8]_i_2__2_n_0 ;
  wire \wait_bypass_count[8]_i_3__2_n_0 ;
  wire \wait_bypass_count[8]_i_4__2_n_0 ;
  wire \wait_bypass_count[8]_i_5__2_n_0 ;
  wire [12:0]wait_bypass_count_reg;
  wire \wait_bypass_count_reg[0]_i_3__2_n_0 ;
  wire \wait_bypass_count_reg[0]_i_3__2_n_1 ;
  wire \wait_bypass_count_reg[0]_i_3__2_n_2 ;
  wire \wait_bypass_count_reg[0]_i_3__2_n_3 ;
  wire \wait_bypass_count_reg[0]_i_3__2_n_4 ;
  wire \wait_bypass_count_reg[0]_i_3__2_n_5 ;
  wire \wait_bypass_count_reg[0]_i_3__2_n_6 ;
  wire \wait_bypass_count_reg[0]_i_3__2_n_7 ;
  wire \wait_bypass_count_reg[12]_i_1__2_n_7 ;
  wire \wait_bypass_count_reg[4]_i_1__2_n_0 ;
  wire \wait_bypass_count_reg[4]_i_1__2_n_1 ;
  wire \wait_bypass_count_reg[4]_i_1__2_n_2 ;
  wire \wait_bypass_count_reg[4]_i_1__2_n_3 ;
  wire \wait_bypass_count_reg[4]_i_1__2_n_4 ;
  wire \wait_bypass_count_reg[4]_i_1__2_n_5 ;
  wire \wait_bypass_count_reg[4]_i_1__2_n_6 ;
  wire \wait_bypass_count_reg[4]_i_1__2_n_7 ;
  wire \wait_bypass_count_reg[8]_i_1__2_n_0 ;
  wire \wait_bypass_count_reg[8]_i_1__2_n_1 ;
  wire \wait_bypass_count_reg[8]_i_1__2_n_2 ;
  wire \wait_bypass_count_reg[8]_i_1__2_n_3 ;
  wire \wait_bypass_count_reg[8]_i_1__2_n_4 ;
  wire \wait_bypass_count_reg[8]_i_1__2_n_5 ;
  wire \wait_bypass_count_reg[8]_i_1__2_n_6 ;
  wire \wait_bypass_count_reg[8]_i_1__2_n_7 ;
  wire \wait_time_cnt[0]_i_1__2_n_0 ;
  wire \wait_time_cnt[0]_i_2__2_n_0 ;
  wire \wait_time_cnt[0]_i_4__2_n_0 ;
  wire \wait_time_cnt[0]_i_5__2_n_0 ;
  wire \wait_time_cnt[0]_i_6__2_n_0 ;
  wire \wait_time_cnt[0]_i_7__2_n_0 ;
  wire \wait_time_cnt[0]_i_8__2_n_0 ;
  wire \wait_time_cnt[0]_i_9__2_n_0 ;
  wire \wait_time_cnt[12]_i_2__2_n_0 ;
  wire \wait_time_cnt[12]_i_3__2_n_0 ;
  wire \wait_time_cnt[12]_i_4__2_n_0 ;
  wire \wait_time_cnt[12]_i_5__2_n_0 ;
  wire \wait_time_cnt[4]_i_2__2_n_0 ;
  wire \wait_time_cnt[4]_i_3__2_n_0 ;
  wire \wait_time_cnt[4]_i_4__2_n_0 ;
  wire \wait_time_cnt[4]_i_5__2_n_0 ;
  wire \wait_time_cnt[8]_i_2__2_n_0 ;
  wire \wait_time_cnt[8]_i_3__2_n_0 ;
  wire \wait_time_cnt[8]_i_4__2_n_0 ;
  wire \wait_time_cnt[8]_i_5__2_n_0 ;
  wire [15:0]wait_time_cnt_reg;
  wire \wait_time_cnt_reg[0]_i_3__2_n_0 ;
  wire \wait_time_cnt_reg[0]_i_3__2_n_1 ;
  wire \wait_time_cnt_reg[0]_i_3__2_n_2 ;
  wire \wait_time_cnt_reg[0]_i_3__2_n_3 ;
  wire \wait_time_cnt_reg[0]_i_3__2_n_4 ;
  wire \wait_time_cnt_reg[0]_i_3__2_n_5 ;
  wire \wait_time_cnt_reg[0]_i_3__2_n_6 ;
  wire \wait_time_cnt_reg[0]_i_3__2_n_7 ;
  wire \wait_time_cnt_reg[12]_i_1__2_n_1 ;
  wire \wait_time_cnt_reg[12]_i_1__2_n_2 ;
  wire \wait_time_cnt_reg[12]_i_1__2_n_3 ;
  wire \wait_time_cnt_reg[12]_i_1__2_n_4 ;
  wire \wait_time_cnt_reg[12]_i_1__2_n_5 ;
  wire \wait_time_cnt_reg[12]_i_1__2_n_6 ;
  wire \wait_time_cnt_reg[12]_i_1__2_n_7 ;
  wire \wait_time_cnt_reg[4]_i_1__2_n_0 ;
  wire \wait_time_cnt_reg[4]_i_1__2_n_1 ;
  wire \wait_time_cnt_reg[4]_i_1__2_n_2 ;
  wire \wait_time_cnt_reg[4]_i_1__2_n_3 ;
  wire \wait_time_cnt_reg[4]_i_1__2_n_4 ;
  wire \wait_time_cnt_reg[4]_i_1__2_n_5 ;
  wire \wait_time_cnt_reg[4]_i_1__2_n_6 ;
  wire \wait_time_cnt_reg[4]_i_1__2_n_7 ;
  wire \wait_time_cnt_reg[8]_i_1__2_n_0 ;
  wire \wait_time_cnt_reg[8]_i_1__2_n_1 ;
  wire \wait_time_cnt_reg[8]_i_1__2_n_2 ;
  wire \wait_time_cnt_reg[8]_i_1__2_n_3 ;
  wire \wait_time_cnt_reg[8]_i_1__2_n_4 ;
  wire \wait_time_cnt_reg[8]_i_1__2_n_5 ;
  wire \wait_time_cnt_reg[8]_i_1__2_n_6 ;
  wire \wait_time_cnt_reg[8]_i_1__2_n_7 ;
  wire [3:1]\NLW_time_out_counter_reg[16]_i_1__2_CO_UNCONNECTED ;
  wire [3:2]\NLW_time_out_counter_reg[16]_i_1__2_O_UNCONNECTED ;
  wire [3:0]\NLW_wait_bypass_count_reg[12]_i_1__2_CO_UNCONNECTED ;
  wire [3:1]\NLW_wait_bypass_count_reg[12]_i_1__2_O_UNCONNECTED ;
  wire [3:3]\NLW_wait_time_cnt_reg[12]_i_1__2_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h5F400040FFFFFFFF)) 
    \FSM_sequential_rx_state[0]_i_2__0 
       (.I0(reset_time_out_reg_n_0),
        .I1(time_tlock_max),
        .I2(rx_state[2]),
        .I3(rx_state[1]),
        .I4(time_out_2ms_reg_n_0),
        .I5(rx_state[0]),
        .O(\FSM_sequential_rx_state[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000000F403F40)) 
    \FSM_sequential_rx_state[2]_i_1__0 
       (.I0(time_out_2ms_reg_n_0),
        .I1(rx_state[1]),
        .I2(rx_state[0]),
        .I3(rx_state[2]),
        .I4(rx_state16_out),
        .I5(rx_state[3]),
        .O(\FSM_sequential_rx_state[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_rx_state[2]_i_2__0 
       (.I0(time_tlock_max),
        .I1(reset_time_out_reg_n_0),
        .O(rx_state16_out));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_rx_state[3]_i_10__0 
       (.I0(init_wait_done_reg_n_0),
        .I1(rx_state[0]),
        .O(\FSM_sequential_rx_state[3]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_sequential_rx_state[3]_i_12__0 
       (.I0(wait_time_cnt_reg[12]),
        .I1(wait_time_cnt_reg[13]),
        .I2(wait_time_cnt_reg[10]),
        .I3(wait_time_cnt_reg[11]),
        .I4(wait_time_cnt_reg[15]),
        .I5(wait_time_cnt_reg[14]),
        .O(\FSM_sequential_rx_state[3]_i_12__0_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_rx_state[3]_i_13__0 
       (.I0(wait_time_cnt_reg[1]),
        .I1(wait_time_cnt_reg[0]),
        .I2(wait_time_cnt_reg[3]),
        .I3(wait_time_cnt_reg[2]),
        .O(\FSM_sequential_rx_state[3]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_sequential_rx_state[3]_i_14__0 
       (.I0(wait_time_cnt_reg[6]),
        .I1(wait_time_cnt_reg[7]),
        .I2(wait_time_cnt_reg[4]),
        .I3(wait_time_cnt_reg[5]),
        .I4(wait_time_cnt_reg[9]),
        .I5(wait_time_cnt_reg[8]),
        .O(\FSM_sequential_rx_state[3]_i_14__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_rx_state[3]_i_7__0 
       (.I0(time_out_2ms_reg_n_0),
        .I1(reset_time_out_reg_n_0),
        .O(rx_state15_out));
  LUT5 #(
    .INIT(32'hF4FFF400)) 
    \FSM_sequential_rx_state[3]_i_8__0 
       (.I0(reset_time_out_reg_n_0),
        .I1(time_tlock_max),
        .I2(mmcm_lock_reclocked),
        .I3(rx_state[0]),
        .I4(gt1_rx_cdrlocked_reg),
        .O(\FSM_sequential_rx_state[3]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hEFE0E0E0E0E0E0E0)) 
    \FSM_sequential_rx_state[3]_i_9__0 
       (.I0(rx_state15_out),
        .I1(rxresetdone_s3),
        .I2(rx_state[0]),
        .I3(\FSM_sequential_rx_state[3]_i_12__0_n_0 ),
        .I4(\FSM_sequential_rx_state[3]_i_13__0_n_0 ),
        .I5(\FSM_sequential_rx_state[3]_i_14__0_n_0 ),
        .O(\FSM_sequential_rx_state[3]_i_9__0_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_rx_state_reg[0] 
       (.C(sysclk_in),
        .CE(sync_data_valid_n_2),
        .D(sync_data_valid_n_5),
        .Q(rx_state[0]),
        .R(soft_reset_rx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_rx_state_reg[1] 
       (.C(sysclk_in),
        .CE(sync_data_valid_n_2),
        .D(sync_data_valid_n_4),
        .Q(rx_state[1]),
        .R(soft_reset_rx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_rx_state_reg[2] 
       (.C(sysclk_in),
        .CE(sync_data_valid_n_2),
        .D(\FSM_sequential_rx_state[2]_i_1__0_n_0 ),
        .Q(rx_state[2]),
        .R(soft_reset_rx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_rx_state_reg[3] 
       (.C(sysclk_in),
        .CE(sync_data_valid_n_2),
        .D(sync_data_valid_n_3),
        .Q(rx_state[3]),
        .R(soft_reset_rx_in));
  MUXF7 \FSM_sequential_rx_state_reg[3]_i_4__0 
       (.I0(\FSM_sequential_rx_state[3]_i_8__0_n_0 ),
        .I1(\FSM_sequential_rx_state[3]_i_9__0_n_0 ),
        .O(\FSM_sequential_rx_state_reg[3]_i_4__0_n_0 ),
        .S(rx_state[1]));
  LUT6 #(
    .INIT(64'hFFFFFBFB00008000)) 
    RXUSERRDY_i_1__0
       (.I0(rx_state[1]),
        .I1(rx_state[0]),
        .I2(rx_state[2]),
        .I3(gt1_txuserrdy_in),
        .I4(rx_state[3]),
        .I5(gt1_rxuserrdy_in),
        .O(RXUSERRDY_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    RXUSERRDY_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(RXUSERRDY_i_1__0_n_0),
        .Q(gt1_rxuserrdy_in),
        .R(soft_reset_rx_in));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    check_tlock_max_i_1__0
       (.I0(rx_state[2]),
        .I1(rx_state[1]),
        .I2(rx_state[0]),
        .I3(rx_state[3]),
        .I4(check_tlock_max_reg_n_0),
        .O(check_tlock_max_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    check_tlock_max_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(check_tlock_max_i_1__0_n_0),
        .Q(check_tlock_max_reg_n_0),
        .R(soft_reset_rx_in));
  LUT5 #(
    .INIT(32'hFFEF0004)) 
    gtrxreset_i_i_1__0
       (.I0(rx_state[1]),
        .I1(rx_state[0]),
        .I2(rx_state[2]),
        .I3(rx_state[3]),
        .I4(SR),
        .O(gtrxreset_i_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtrxreset_i_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gtrxreset_i_i_1__0_n_0),
        .Q(SR),
        .R(soft_reset_rx_in));
  LUT1 #(
    .INIT(2'h1)) 
    \init_wait_count[0]_i_1__2 
       (.I0(init_wait_count_reg__0[0]),
        .O(\init_wait_count[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[1]_i_1__2 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \init_wait_count[2]_i_1__2 
       (.I0(init_wait_count_reg__0[1]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \init_wait_count[3]_i_1__2 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[1]),
        .I3(init_wait_count_reg__0[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \init_wait_count[4]_i_1__2 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[3]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[1]),
        .I4(init_wait_count_reg__0[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[5]_i_1__2 
       (.I0(init_wait_count_reg__0[3]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[4]),
        .I3(init_wait_count_reg__0[0]),
        .I4(init_wait_count_reg__0[1]),
        .I5(init_wait_count_reg__0[5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[6]_i_1__2 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[5]),
        .I4(\init_wait_count[6]_i_2__2_n_0 ),
        .I5(init_wait_count_reg__0[6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \init_wait_count[6]_i_2__2 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(\init_wait_count[6]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \init_wait_count[7]_i_1__2 
       (.I0(init_wait_count_reg__0[6]),
        .I1(init_wait_count_reg__0[7]),
        .I2(init_wait_count_reg__0[0]),
        .I3(\init_wait_count[7]_i_3__2_n_0 ),
        .I4(init_wait_count_reg__0[1]),
        .O(init_wait_count));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \init_wait_count[7]_i_2__2 
       (.I0(\init_wait_count[7]_i_3__2_n_0 ),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[6]),
        .I4(init_wait_count_reg__0[7]),
        .O(p_0_in[7]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \init_wait_count[7]_i_3__2 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[5]),
        .O(\init_wait_count[7]_i_3__2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[0] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(\init_wait_count[0]_i_1__2_n_0 ),
        .Q(init_wait_count_reg__0[0]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[1] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[1]),
        .Q(init_wait_count_reg__0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[2] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[2]),
        .Q(init_wait_count_reg__0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[3] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[3]),
        .Q(init_wait_count_reg__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[4] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[4]),
        .Q(init_wait_count_reg__0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[5] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[5]),
        .Q(init_wait_count_reg__0[5]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[6] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[6]),
        .Q(init_wait_count_reg__0[6]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[7] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_rx_in),
        .D(p_0_in[7]),
        .Q(init_wait_count_reg__0[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    init_wait_done_i_1__2
       (.I0(\init_wait_count[7]_i_3__2_n_0 ),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[7]),
        .I4(init_wait_count_reg__0[6]),
        .I5(init_wait_done_reg_n_0),
        .O(init_wait_done_i_1__2_n_0));
  FDCE #(
    .INIT(1'b0)) 
    init_wait_done_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .CLR(soft_reset_rx_in),
        .D(init_wait_done_i_1__2_n_0),
        .Q(init_wait_done_reg_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[0]_i_1__2 
       (.I0(mmcm_lock_count_reg__0[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mmcm_lock_count[1]_i_1__2 
       (.I0(mmcm_lock_count_reg__0[0]),
        .I1(mmcm_lock_count_reg__0[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \mmcm_lock_count[2]_i_1__2 
       (.I0(mmcm_lock_count_reg__0[1]),
        .I1(mmcm_lock_count_reg__0[0]),
        .I2(mmcm_lock_count_reg__0[2]),
        .O(\mmcm_lock_count[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \mmcm_lock_count[3]_i_1__2 
       (.I0(mmcm_lock_count_reg__0[2]),
        .I1(mmcm_lock_count_reg__0[0]),
        .I2(mmcm_lock_count_reg__0[1]),
        .I3(mmcm_lock_count_reg__0[3]),
        .O(\mmcm_lock_count[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \mmcm_lock_count[4]_i_1__2 
       (.I0(mmcm_lock_count_reg__0[3]),
        .I1(mmcm_lock_count_reg__0[1]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[2]),
        .I4(mmcm_lock_count_reg__0[4]),
        .O(\mmcm_lock_count[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \mmcm_lock_count[5]_i_1__2 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[2]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[1]),
        .I4(mmcm_lock_count_reg__0[3]),
        .I5(mmcm_lock_count_reg__0[5]),
        .O(\mmcm_lock_count[5]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \mmcm_lock_count[6]_i_1__2 
       (.I0(\mmcm_lock_count[9]_i_4__2_n_0 ),
        .I1(mmcm_lock_count_reg__0[6]),
        .O(\mmcm_lock_count[6]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    \mmcm_lock_count[7]_i_1__2 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__2_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .O(\mmcm_lock_count[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT4 #(
    .INIT(16'hDF20)) 
    \mmcm_lock_count[8]_i_1__2 
       (.I0(mmcm_lock_count_reg__0[7]),
        .I1(\mmcm_lock_count[9]_i_4__2_n_0 ),
        .I2(mmcm_lock_count_reg__0[6]),
        .I3(mmcm_lock_count_reg__0[8]),
        .O(\mmcm_lock_count[8]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h000000DF)) 
    \mmcm_lock_count[9]_i_2__2 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__2_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .I3(mmcm_lock_count_reg__0[8]),
        .I4(mmcm_lock_count_reg__0[9]),
        .O(\mmcm_lock_count[9]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \mmcm_lock_count[9]_i_3__2 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__2_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .I3(mmcm_lock_count_reg__0[8]),
        .I4(mmcm_lock_count_reg__0[9]),
        .O(p_0_in__0[9]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \mmcm_lock_count[9]_i_4__2 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[2]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[1]),
        .I4(mmcm_lock_count_reg__0[3]),
        .I5(mmcm_lock_count_reg__0[5]),
        .O(\mmcm_lock_count[9]_i_4__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[0] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__2_n_0 ),
        .D(p_0_in__0[0]),
        .Q(mmcm_lock_count_reg__0[0]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[1] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__2_n_0 ),
        .D(p_0_in__0[1]),
        .Q(mmcm_lock_count_reg__0[1]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[2] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__2_n_0 ),
        .D(\mmcm_lock_count[2]_i_1__2_n_0 ),
        .Q(mmcm_lock_count_reg__0[2]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[3] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__2_n_0 ),
        .D(\mmcm_lock_count[3]_i_1__2_n_0 ),
        .Q(mmcm_lock_count_reg__0[3]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[4] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__2_n_0 ),
        .D(\mmcm_lock_count[4]_i_1__2_n_0 ),
        .Q(mmcm_lock_count_reg__0[4]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[5] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__2_n_0 ),
        .D(\mmcm_lock_count[5]_i_1__2_n_0 ),
        .Q(mmcm_lock_count_reg__0[5]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[6] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__2_n_0 ),
        .D(\mmcm_lock_count[6]_i_1__2_n_0 ),
        .Q(mmcm_lock_count_reg__0[6]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[7] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__2_n_0 ),
        .D(\mmcm_lock_count[7]_i_1__2_n_0 ),
        .Q(mmcm_lock_count_reg__0[7]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[8] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__2_n_0 ),
        .D(\mmcm_lock_count[8]_i_1__2_n_0 ),
        .Q(mmcm_lock_count_reg__0[8]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[9] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__2_n_0 ),
        .D(p_0_in__0[9]),
        .Q(mmcm_lock_count_reg__0[9]),
        .R(sync_mmcm_lock_reclocked_n_0));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    mmcm_lock_reclocked_i_2__2
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__2_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .O(mmcm_lock_reclocked_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mmcm_lock_reclocked_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync_mmcm_lock_reclocked_n_1),
        .Q(mmcm_lock_reclocked),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h557710AA)) 
    reset_time_out_i_3__0
       (.I0(rx_state[3]),
        .I1(rx_state[1]),
        .I2(gt1_rx_cdrlocked_reg),
        .I3(rx_state[2]),
        .I4(rx_state[0]),
        .O(reset_time_out_i_3__0_n_0));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    reset_time_out_i_5__0
       (.I0(rxresetdone_s3),
        .I1(rx_state[1]),
        .I2(mmcm_lock_reclocked),
        .I3(rx_state[0]),
        .I4(gt1_rx_cdrlocked_reg),
        .O(reset_time_out_i_5__0_n_0));
  FDSE #(
    .INIT(1'b0)) 
    reset_time_out_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync_data_valid_n_1),
        .Q(reset_time_out_reg_n_0),
        .S(soft_reset_rx_in));
  LUT5 #(
    .INIT(32'hFFEF0002)) 
    run_phase_alignment_int_i_1__2
       (.I0(rx_state[3]),
        .I1(rx_state[1]),
        .I2(rx_state[0]),
        .I3(rx_state[2]),
        .I4(run_phase_alignment_int_reg_n_0),
        .O(run_phase_alignment_int_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(run_phase_alignment_int_i_1__2_n_0),
        .Q(run_phase_alignment_int_reg_n_0),
        .R(soft_reset_rx_in));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_s3_reg
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(run_phase_alignment_int_s2),
        .Q(run_phase_alignment_int_s3_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rx_fsm_reset_done_int_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync_data_valid_n_0),
        .Q(gt1_rx_fsm_reset_done_out),
        .R(soft_reset_rx_in));
  FDRE #(
    .INIT(1'b0)) 
    rx_fsm_reset_done_int_s3_reg
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(rx_fsm_reset_done_int_s2),
        .Q(rx_fsm_reset_done_int_s3_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxresetdone_s3_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(rxresetdone_s2),
        .Q(rxresetdone_s3),
        .R(1'b0));
  gtx3g_bert_0_gtx3g_sync_block_9 sync_RXRESETDONE
       (.data_out(rxresetdone_s2),
        .gt1_rxresetdone_out(gt1_rxresetdone_out),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_10 sync_data_valid
       (.D({sync_data_valid_n_3,sync_data_valid_n_4,sync_data_valid_n_5}),
        .E(sync_data_valid_n_2),
        .\FSM_sequential_rx_state_reg[1] (\FSM_sequential_rx_state_reg[3]_i_4__0_n_0 ),
        .\FSM_sequential_rx_state_reg[1]_0 (sync_qplllock_n_0),
        .\FSM_sequential_rx_state_reg[3] (reset_time_out_i_3__0_n_0),
        .data_out(qplllock_sync),
        .dont_reset_on_data_error_in(dont_reset_on_data_error_in),
        .gt1_data_valid_in(gt1_data_valid_in),
        .gt1_rx_fsm_reset_done_out(gt1_rx_fsm_reset_done_out),
        .out(rx_state),
        .reset_time_out_reg(sync_data_valid_n_1),
        .reset_time_out_reg_0(reset_time_out_reg_n_0),
        .reset_time_out_reg_1(\FSM_sequential_rx_state[0]_i_2__0_n_0 ),
        .rx_fsm_reset_done_int_reg(sync_data_valid_n_0),
        .rx_state15_out(rx_state15_out),
        .rx_state16_out(rx_state16_out),
        .rxresetdone_s3_reg(reset_time_out_i_5__0_n_0),
        .sysclk_in(sysclk_in),
        .time_out_100us_reg(time_out_100us_reg_n_0),
        .time_out_1us_reg(time_out_1us_reg_n_0),
        .time_out_wait_bypass_s3(time_out_wait_bypass_s3));
  gtx3g_bert_0_gtx3g_sync_block_11 sync_mmcm_lock_reclocked
       (.Q(mmcm_lock_count_reg__0[9:8]),
        .SR(sync_mmcm_lock_reclocked_n_0),
        .\mmcm_lock_count_reg[6] (mmcm_lock_reclocked_i_2__2_n_0),
        .mmcm_lock_reclocked(mmcm_lock_reclocked),
        .mmcm_lock_reclocked_reg(sync_mmcm_lock_reclocked_n_1),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_12 sync_qplllock
       (.\FSM_sequential_rx_state_reg[0] (sync_qplllock_n_0),
        .data_out(qplllock_sync),
        .gt0_qplllock_in(gt0_qplllock_in),
        .init_wait_done_reg(\FSM_sequential_rx_state[3]_i_10__0_n_0 ),
        .out(rx_state[1:0]),
        .sysclk_in(sysclk_in),
        .time_out_2ms_reg(time_out_2ms_reg_n_0),
        .\wait_time_cnt_reg[12] (\FSM_sequential_rx_state[3]_i_12__0_n_0 ),
        .\wait_time_cnt_reg[1] (\FSM_sequential_rx_state[3]_i_13__0_n_0 ),
        .\wait_time_cnt_reg[6] (\FSM_sequential_rx_state[3]_i_14__0_n_0 ));
  gtx3g_bert_0_gtx3g_sync_block_13 sync_run_phase_alignment_int
       (.data_in(run_phase_alignment_int_reg_n_0),
        .data_out(run_phase_alignment_int_s2),
        .gt1_rxusrclk_in(gt1_rxusrclk_in));
  gtx3g_bert_0_gtx3g_sync_block_14 sync_rx_fsm_reset_done_int
       (.data_out(rx_fsm_reset_done_int_s2),
        .gt1_rx_fsm_reset_done_out(gt1_rx_fsm_reset_done_out),
        .gt1_rxusrclk_in(gt1_rxusrclk_in));
  gtx3g_bert_0_gtx3g_sync_block_15 sync_time_out_wait_bypass
       (.data_in(time_out_wait_bypass_reg_n_0),
        .data_out(time_out_wait_bypass_s2),
        .sysclk_in(sysclk_in));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    time_out_100us_i_1__0
       (.I0(\time_out_counter[0]_i_3__0_n_0 ),
        .I1(time_tlock_max_i_4__0_n_0),
        .I2(time_out_2ms_i_3__0_n_0),
        .I3(time_out_counter_reg[6]),
        .I4(time_out_100us_i_2__0_n_0),
        .I5(time_out_100us_reg_n_0),
        .O(time_out_100us_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    time_out_100us_i_2__0
       (.I0(time_out_counter_reg[4]),
        .I1(time_out_counter_reg[9]),
        .I2(time_out_counter_reg[13]),
        .I3(time_out_counter_reg[12]),
        .I4(time_out_counter_reg[11]),
        .O(time_out_100us_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_100us_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_100us_i_1__0_n_0),
        .Q(time_out_100us_reg_n_0),
        .R(reset_time_out_reg_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000002)) 
    time_out_1us_i_1__0
       (.I0(time_out_1us_i_2__0_n_0),
        .I1(time_out_counter_reg[11]),
        .I2(time_out_counter_reg[12]),
        .I3(time_tlock_max_i_4__0_n_0),
        .I4(\time_out_counter[0]_i_4__2_n_0 ),
        .I5(time_out_1us_reg_n_0),
        .O(time_out_1us_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    time_out_1us_i_2__0
       (.I0(time_out_counter_reg[8]),
        .I1(time_out_counter_reg[10]),
        .I2(time_out_counter_reg[7]),
        .I3(time_out_counter_reg[5]),
        .I4(time_out_counter_reg[2]),
        .I5(time_out_1us_i_3__0_n_0),
        .O(time_out_1us_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    time_out_1us_i_3__0
       (.I0(time_out_counter_reg[3]),
        .I1(time_out_counter_reg[1]),
        .I2(time_out_counter_reg[0]),
        .O(time_out_1us_i_3__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_1us_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_1us_i_1__0_n_0),
        .Q(time_out_1us_reg_n_0),
        .R(reset_time_out_reg_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000004)) 
    time_out_2ms_i_1__0
       (.I0(\time_out_counter[0]_i_3__0_n_0 ),
        .I1(time_out_2ms_i_2__2_n_0),
        .I2(time_out_2ms_i_3__0_n_0),
        .I3(time_out_2ms_i_4__0_n_0),
        .I4(\time_out_counter[0]_i_4__2_n_0 ),
        .I5(time_out_2ms_reg_n_0),
        .O(time_out_2ms_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h4000)) 
    time_out_2ms_i_2__2
       (.I0(time_out_counter_reg[12]),
        .I1(time_out_counter_reg[11]),
        .I2(time_out_counter_reg[17]),
        .I3(time_out_counter_reg[16]),
        .O(time_out_2ms_i_2__2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    time_out_2ms_i_3__0
       (.I0(time_out_counter_reg[5]),
        .I1(time_out_counter_reg[7]),
        .O(time_out_2ms_i_3__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    time_out_2ms_i_4__0
       (.I0(time_out_counter_reg[14]),
        .I1(time_out_counter_reg[15]),
        .O(time_out_2ms_i_4__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_2ms_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_2ms_i_1__0_n_0),
        .Q(time_out_2ms_reg_n_0),
        .R(reset_time_out_reg_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \time_out_counter[0]_i_1__0 
       (.I0(time_out_counter_reg[5]),
        .I1(time_out_counter_reg[7]),
        .I2(\time_out_counter[0]_i_3__0_n_0 ),
        .I3(\time_out_counter[0]_i_4__2_n_0 ),
        .I4(time_out_counter_reg[11]),
        .I5(\time_out_counter[0]_i_5__0_n_0 ),
        .O(time_out_counter));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    \time_out_counter[0]_i_3__0 
       (.I0(time_out_counter_reg[10]),
        .I1(time_out_counter_reg[8]),
        .I2(time_out_counter_reg[2]),
        .I3(time_out_counter_reg[3]),
        .I4(time_out_counter_reg[1]),
        .I5(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \time_out_counter[0]_i_4__2 
       (.I0(time_out_counter_reg[6]),
        .I1(time_out_counter_reg[4]),
        .I2(time_out_counter_reg[13]),
        .I3(time_out_counter_reg[9]),
        .O(\time_out_counter[0]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    \time_out_counter[0]_i_5__0 
       (.I0(time_out_counter_reg[14]),
        .I1(time_out_counter_reg[15]),
        .I2(time_out_counter_reg[12]),
        .I3(time_out_counter_reg[17]),
        .I4(time_out_counter_reg[16]),
        .O(\time_out_counter[0]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_6__2 
       (.I0(time_out_counter_reg[3]),
        .O(\time_out_counter[0]_i_6__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_7__2 
       (.I0(time_out_counter_reg[2]),
        .O(\time_out_counter[0]_i_7__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_8__2 
       (.I0(time_out_counter_reg[1]),
        .O(\time_out_counter[0]_i_8__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \time_out_counter[0]_i_9__2 
       (.I0(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_9__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_2__2 
       (.I0(time_out_counter_reg[15]),
        .O(\time_out_counter[12]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_3__2 
       (.I0(time_out_counter_reg[14]),
        .O(\time_out_counter[12]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_4__2 
       (.I0(time_out_counter_reg[13]),
        .O(\time_out_counter[12]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_5__2 
       (.I0(time_out_counter_reg[12]),
        .O(\time_out_counter[12]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[16]_i_2__2 
       (.I0(time_out_counter_reg[17]),
        .O(\time_out_counter[16]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[16]_i_3__2 
       (.I0(time_out_counter_reg[16]),
        .O(\time_out_counter[16]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_2__2 
       (.I0(time_out_counter_reg[7]),
        .O(\time_out_counter[4]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_3__2 
       (.I0(time_out_counter_reg[6]),
        .O(\time_out_counter[4]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_4__2 
       (.I0(time_out_counter_reg[5]),
        .O(\time_out_counter[4]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_5__2 
       (.I0(time_out_counter_reg[4]),
        .O(\time_out_counter[4]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_2__2 
       (.I0(time_out_counter_reg[11]),
        .O(\time_out_counter[8]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_3__2 
       (.I0(time_out_counter_reg[10]),
        .O(\time_out_counter[8]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_4__2 
       (.I0(time_out_counter_reg[9]),
        .O(\time_out_counter[8]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_5__2 
       (.I0(time_out_counter_reg[8]),
        .O(\time_out_counter[8]_i_5__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[0] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__2_n_7 ),
        .Q(time_out_counter_reg[0]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[0]_i_2__2 
       (.CI(1'b0),
        .CO({\time_out_counter_reg[0]_i_2__2_n_0 ,\time_out_counter_reg[0]_i_2__2_n_1 ,\time_out_counter_reg[0]_i_2__2_n_2 ,\time_out_counter_reg[0]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\time_out_counter_reg[0]_i_2__2_n_4 ,\time_out_counter_reg[0]_i_2__2_n_5 ,\time_out_counter_reg[0]_i_2__2_n_6 ,\time_out_counter_reg[0]_i_2__2_n_7 }),
        .S({\time_out_counter[0]_i_6__2_n_0 ,\time_out_counter[0]_i_7__2_n_0 ,\time_out_counter[0]_i_8__2_n_0 ,\time_out_counter[0]_i_9__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[10] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__2_n_5 ),
        .Q(time_out_counter_reg[10]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[11] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__2_n_4 ),
        .Q(time_out_counter_reg[11]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[12] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__2_n_7 ),
        .Q(time_out_counter_reg[12]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[12]_i_1__2 
       (.CI(\time_out_counter_reg[8]_i_1__2_n_0 ),
        .CO({\time_out_counter_reg[12]_i_1__2_n_0 ,\time_out_counter_reg[12]_i_1__2_n_1 ,\time_out_counter_reg[12]_i_1__2_n_2 ,\time_out_counter_reg[12]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[12]_i_1__2_n_4 ,\time_out_counter_reg[12]_i_1__2_n_5 ,\time_out_counter_reg[12]_i_1__2_n_6 ,\time_out_counter_reg[12]_i_1__2_n_7 }),
        .S({\time_out_counter[12]_i_2__2_n_0 ,\time_out_counter[12]_i_3__2_n_0 ,\time_out_counter[12]_i_4__2_n_0 ,\time_out_counter[12]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[13] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__2_n_6 ),
        .Q(time_out_counter_reg[13]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[14] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__2_n_5 ),
        .Q(time_out_counter_reg[14]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[15] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__2_n_4 ),
        .Q(time_out_counter_reg[15]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[16] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1__2_n_7 ),
        .Q(time_out_counter_reg[16]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[16]_i_1__2 
       (.CI(\time_out_counter_reg[12]_i_1__2_n_0 ),
        .CO({\NLW_time_out_counter_reg[16]_i_1__2_CO_UNCONNECTED [3:1],\time_out_counter_reg[16]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_time_out_counter_reg[16]_i_1__2_O_UNCONNECTED [3:2],\time_out_counter_reg[16]_i_1__2_n_6 ,\time_out_counter_reg[16]_i_1__2_n_7 }),
        .S({1'b0,1'b0,\time_out_counter[16]_i_2__2_n_0 ,\time_out_counter[16]_i_3__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[17] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1__2_n_6 ),
        .Q(time_out_counter_reg[17]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[1] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__2_n_6 ),
        .Q(time_out_counter_reg[1]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[2] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__2_n_5 ),
        .Q(time_out_counter_reg[2]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[3] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__2_n_4 ),
        .Q(time_out_counter_reg[3]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[4] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__2_n_7 ),
        .Q(time_out_counter_reg[4]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[4]_i_1__2 
       (.CI(\time_out_counter_reg[0]_i_2__2_n_0 ),
        .CO({\time_out_counter_reg[4]_i_1__2_n_0 ,\time_out_counter_reg[4]_i_1__2_n_1 ,\time_out_counter_reg[4]_i_1__2_n_2 ,\time_out_counter_reg[4]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[4]_i_1__2_n_4 ,\time_out_counter_reg[4]_i_1__2_n_5 ,\time_out_counter_reg[4]_i_1__2_n_6 ,\time_out_counter_reg[4]_i_1__2_n_7 }),
        .S({\time_out_counter[4]_i_2__2_n_0 ,\time_out_counter[4]_i_3__2_n_0 ,\time_out_counter[4]_i_4__2_n_0 ,\time_out_counter[4]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[5] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__2_n_6 ),
        .Q(time_out_counter_reg[5]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[6] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__2_n_5 ),
        .Q(time_out_counter_reg[6]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[7] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__2_n_4 ),
        .Q(time_out_counter_reg[7]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[8] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__2_n_7 ),
        .Q(time_out_counter_reg[8]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[8]_i_1__2 
       (.CI(\time_out_counter_reg[4]_i_1__2_n_0 ),
        .CO({\time_out_counter_reg[8]_i_1__2_n_0 ,\time_out_counter_reg[8]_i_1__2_n_1 ,\time_out_counter_reg[8]_i_1__2_n_2 ,\time_out_counter_reg[8]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[8]_i_1__2_n_4 ,\time_out_counter_reg[8]_i_1__2_n_5 ,\time_out_counter_reg[8]_i_1__2_n_6 ,\time_out_counter_reg[8]_i_1__2_n_7 }),
        .S({\time_out_counter[8]_i_2__2_n_0 ,\time_out_counter[8]_i_3__2_n_0 ,\time_out_counter[8]_i_4__2_n_0 ,\time_out_counter[8]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[9] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__2_n_6 ),
        .Q(time_out_counter_reg[9]),
        .R(reset_time_out_reg_n_0));
  LUT4 #(
    .INIT(16'hAB00)) 
    time_out_wait_bypass_i_1__2
       (.I0(time_out_wait_bypass_reg_n_0),
        .I1(rx_fsm_reset_done_int_s3_reg_n_0),
        .I2(\wait_bypass_count[0]_i_4__2_n_0 ),
        .I3(run_phase_alignment_int_s3_reg_n_0),
        .O(time_out_wait_bypass_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_reg
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(time_out_wait_bypass_i_1__2_n_0),
        .Q(time_out_wait_bypass_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_s3_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_wait_bypass_s2),
        .Q(time_out_wait_bypass_s3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFCCFF80)) 
    time_tlock_max_i_1__0
       (.I0(time_tlock_max_i_2__0_n_0),
        .I1(check_tlock_max_reg_n_0),
        .I2(time_out_counter_reg[13]),
        .I3(time_tlock_max_i_3__0_n_0),
        .I4(time_tlock_max_i_4__0_n_0),
        .I5(time_tlock_max),
        .O(time_tlock_max_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'hE)) 
    time_tlock_max_i_2__0
       (.I0(time_out_counter_reg[11]),
        .I1(time_out_counter_reg[12]),
        .O(time_tlock_max_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAA8AAA8AAA8)) 
    time_tlock_max_i_3__0
       (.I0(time_tlock_max_i_5__0_n_0),
        .I1(time_out_counter_reg[7]),
        .I2(time_out_counter_reg[5]),
        .I3(time_out_counter_reg[6]),
        .I4(time_tlock_max_i_6__0_n_0),
        .I5(time_out_counter_reg[4]),
        .O(time_tlock_max_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    time_tlock_max_i_4__0
       (.I0(time_out_counter_reg[17]),
        .I1(time_out_counter_reg[16]),
        .I2(time_out_counter_reg[15]),
        .I3(time_out_counter_reg[14]),
        .O(time_tlock_max_i_4__0_n_0));
  LUT5 #(
    .INIT(32'h80000000)) 
    time_tlock_max_i_5__0
       (.I0(check_tlock_max_reg_n_0),
        .I1(time_out_counter_reg[13]),
        .I2(time_out_counter_reg[9]),
        .I3(time_out_counter_reg[10]),
        .I4(time_out_counter_reg[8]),
        .O(time_tlock_max_i_5__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    time_tlock_max_i_6__0
       (.I0(time_out_counter_reg[0]),
        .I1(time_out_counter_reg[1]),
        .I2(time_out_counter_reg[3]),
        .I3(time_out_counter_reg[2]),
        .O(time_tlock_max_i_6__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_tlock_max_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_tlock_max_i_1__0_n_0),
        .Q(time_tlock_max),
        .R(reset_time_out_reg_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \wait_bypass_count[0]_i_10__2 
       (.I0(wait_bypass_count_reg[2]),
        .I1(wait_bypass_count_reg[12]),
        .I2(wait_bypass_count_reg[4]),
        .I3(wait_bypass_count_reg[10]),
        .I4(wait_bypass_count_reg[6]),
        .I5(wait_bypass_count_reg[11]),
        .O(\wait_bypass_count[0]_i_10__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_1__2 
       (.I0(run_phase_alignment_int_s3_reg_n_0),
        .O(\wait_bypass_count[0]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \wait_bypass_count[0]_i_2__2 
       (.I0(\wait_bypass_count[0]_i_4__2_n_0 ),
        .I1(rx_fsm_reset_done_int_s3_reg_n_0),
        .O(\wait_bypass_count[0]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hBFFFFFFF)) 
    \wait_bypass_count[0]_i_4__2 
       (.I0(\wait_bypass_count[0]_i_9__2_n_0 ),
        .I1(wait_bypass_count_reg[1]),
        .I2(wait_bypass_count_reg[8]),
        .I3(wait_bypass_count_reg[0]),
        .I4(\wait_bypass_count[0]_i_10__2_n_0 ),
        .O(\wait_bypass_count[0]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_5__2 
       (.I0(wait_bypass_count_reg[3]),
        .O(\wait_bypass_count[0]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_6__2 
       (.I0(wait_bypass_count_reg[2]),
        .O(\wait_bypass_count[0]_i_6__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_7__2 
       (.I0(wait_bypass_count_reg[1]),
        .O(\wait_bypass_count[0]_i_7__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_8__2 
       (.I0(wait_bypass_count_reg[0]),
        .O(\wait_bypass_count[0]_i_8__2_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \wait_bypass_count[0]_i_9__2 
       (.I0(wait_bypass_count_reg[3]),
        .I1(wait_bypass_count_reg[5]),
        .I2(wait_bypass_count_reg[9]),
        .I3(wait_bypass_count_reg[7]),
        .O(\wait_bypass_count[0]_i_9__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[12]_i_2__2 
       (.I0(wait_bypass_count_reg[12]),
        .O(\wait_bypass_count[12]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_2__2 
       (.I0(wait_bypass_count_reg[7]),
        .O(\wait_bypass_count[4]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_3__2 
       (.I0(wait_bypass_count_reg[6]),
        .O(\wait_bypass_count[4]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_4__2 
       (.I0(wait_bypass_count_reg[5]),
        .O(\wait_bypass_count[4]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_5__2 
       (.I0(wait_bypass_count_reg[4]),
        .O(\wait_bypass_count[4]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_2__2 
       (.I0(wait_bypass_count_reg[11]),
        .O(\wait_bypass_count[8]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_3__2 
       (.I0(wait_bypass_count_reg[10]),
        .O(\wait_bypass_count[8]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_4__2 
       (.I0(wait_bypass_count_reg[9]),
        .O(\wait_bypass_count[8]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_5__2 
       (.I0(wait_bypass_count_reg[8]),
        .O(\wait_bypass_count[8]_i_5__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[0] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__2_n_7 ),
        .Q(wait_bypass_count_reg[0]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  CARRY4 \wait_bypass_count_reg[0]_i_3__2 
       (.CI(1'b0),
        .CO({\wait_bypass_count_reg[0]_i_3__2_n_0 ,\wait_bypass_count_reg[0]_i_3__2_n_1 ,\wait_bypass_count_reg[0]_i_3__2_n_2 ,\wait_bypass_count_reg[0]_i_3__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\wait_bypass_count_reg[0]_i_3__2_n_4 ,\wait_bypass_count_reg[0]_i_3__2_n_5 ,\wait_bypass_count_reg[0]_i_3__2_n_6 ,\wait_bypass_count_reg[0]_i_3__2_n_7 }),
        .S({\wait_bypass_count[0]_i_5__2_n_0 ,\wait_bypass_count[0]_i_6__2_n_0 ,\wait_bypass_count[0]_i_7__2_n_0 ,\wait_bypass_count[0]_i_8__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[10] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__2_n_5 ),
        .Q(wait_bypass_count_reg[10]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[11] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__2_n_4 ),
        .Q(wait_bypass_count_reg[11]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[12] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1__2_n_7 ),
        .Q(wait_bypass_count_reg[12]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  CARRY4 \wait_bypass_count_reg[12]_i_1__2 
       (.CI(\wait_bypass_count_reg[8]_i_1__2_n_0 ),
        .CO(\NLW_wait_bypass_count_reg[12]_i_1__2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_wait_bypass_count_reg[12]_i_1__2_O_UNCONNECTED [3:1],\wait_bypass_count_reg[12]_i_1__2_n_7 }),
        .S({1'b0,1'b0,1'b0,\wait_bypass_count[12]_i_2__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[1] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__2_n_6 ),
        .Q(wait_bypass_count_reg[1]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[2] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__2_n_5 ),
        .Q(wait_bypass_count_reg[2]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[3] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__2_n_4 ),
        .Q(wait_bypass_count_reg[3]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[4] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__2_n_7 ),
        .Q(wait_bypass_count_reg[4]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  CARRY4 \wait_bypass_count_reg[4]_i_1__2 
       (.CI(\wait_bypass_count_reg[0]_i_3__2_n_0 ),
        .CO({\wait_bypass_count_reg[4]_i_1__2_n_0 ,\wait_bypass_count_reg[4]_i_1__2_n_1 ,\wait_bypass_count_reg[4]_i_1__2_n_2 ,\wait_bypass_count_reg[4]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[4]_i_1__2_n_4 ,\wait_bypass_count_reg[4]_i_1__2_n_5 ,\wait_bypass_count_reg[4]_i_1__2_n_6 ,\wait_bypass_count_reg[4]_i_1__2_n_7 }),
        .S({\wait_bypass_count[4]_i_2__2_n_0 ,\wait_bypass_count[4]_i_3__2_n_0 ,\wait_bypass_count[4]_i_4__2_n_0 ,\wait_bypass_count[4]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[5] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__2_n_6 ),
        .Q(wait_bypass_count_reg[5]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[6] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__2_n_5 ),
        .Q(wait_bypass_count_reg[6]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[7] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__2_n_4 ),
        .Q(wait_bypass_count_reg[7]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[8] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__2_n_7 ),
        .Q(wait_bypass_count_reg[8]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  CARRY4 \wait_bypass_count_reg[8]_i_1__2 
       (.CI(\wait_bypass_count_reg[4]_i_1__2_n_0 ),
        .CO({\wait_bypass_count_reg[8]_i_1__2_n_0 ,\wait_bypass_count_reg[8]_i_1__2_n_1 ,\wait_bypass_count_reg[8]_i_1__2_n_2 ,\wait_bypass_count_reg[8]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[8]_i_1__2_n_4 ,\wait_bypass_count_reg[8]_i_1__2_n_5 ,\wait_bypass_count_reg[8]_i_1__2_n_6 ,\wait_bypass_count_reg[8]_i_1__2_n_7 }),
        .S({\wait_bypass_count[8]_i_2__2_n_0 ,\wait_bypass_count[8]_i_3__2_n_0 ,\wait_bypass_count[8]_i_4__2_n_0 ,\wait_bypass_count[8]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[9] 
       (.C(gt1_rxusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__2_n_6 ),
        .Q(wait_bypass_count_reg[9]),
        .R(\wait_bypass_count[0]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \wait_time_cnt[0]_i_1__2 
       (.I0(rx_state[3]),
        .I1(rx_state[1]),
        .I2(rx_state[0]),
        .O(\wait_time_cnt[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_2__2 
       (.I0(wait_time_cnt_reg[1]),
        .I1(wait_time_cnt_reg[0]),
        .I2(wait_time_cnt_reg[3]),
        .I3(wait_time_cnt_reg[2]),
        .I4(\wait_time_cnt[0]_i_4__2_n_0 ),
        .I5(\wait_time_cnt[0]_i_5__2_n_0 ),
        .O(\wait_time_cnt[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_4__2 
       (.I0(wait_time_cnt_reg[14]),
        .I1(wait_time_cnt_reg[15]),
        .I2(wait_time_cnt_reg[12]),
        .I3(wait_time_cnt_reg[13]),
        .I4(wait_time_cnt_reg[11]),
        .I5(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[0]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_5__2 
       (.I0(wait_time_cnt_reg[8]),
        .I1(wait_time_cnt_reg[9]),
        .I2(wait_time_cnt_reg[6]),
        .I3(wait_time_cnt_reg[7]),
        .I4(wait_time_cnt_reg[5]),
        .I5(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[0]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_6__2 
       (.I0(wait_time_cnt_reg[3]),
        .O(\wait_time_cnt[0]_i_6__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_7__2 
       (.I0(wait_time_cnt_reg[2]),
        .O(\wait_time_cnt[0]_i_7__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_8__2 
       (.I0(wait_time_cnt_reg[1]),
        .O(\wait_time_cnt[0]_i_8__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_9__2 
       (.I0(wait_time_cnt_reg[0]),
        .O(\wait_time_cnt[0]_i_9__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_2__2 
       (.I0(wait_time_cnt_reg[15]),
        .O(\wait_time_cnt[12]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_3__2 
       (.I0(wait_time_cnt_reg[14]),
        .O(\wait_time_cnt[12]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_4__2 
       (.I0(wait_time_cnt_reg[13]),
        .O(\wait_time_cnt[12]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_5__2 
       (.I0(wait_time_cnt_reg[12]),
        .O(\wait_time_cnt[12]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_2__2 
       (.I0(wait_time_cnt_reg[7]),
        .O(\wait_time_cnt[4]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_3__2 
       (.I0(wait_time_cnt_reg[6]),
        .O(\wait_time_cnt[4]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_4__2 
       (.I0(wait_time_cnt_reg[5]),
        .O(\wait_time_cnt[4]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_5__2 
       (.I0(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[4]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_2__2 
       (.I0(wait_time_cnt_reg[11]),
        .O(\wait_time_cnt[8]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_3__2 
       (.I0(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[8]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_4__2 
       (.I0(wait_time_cnt_reg[9]),
        .O(\wait_time_cnt[8]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_5__2 
       (.I0(wait_time_cnt_reg[8]),
        .O(\wait_time_cnt[8]_i_5__2_n_0 ));
  FDRE \wait_time_cnt_reg[0] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__2_n_7 ),
        .Q(wait_time_cnt_reg[0]),
        .R(\wait_time_cnt[0]_i_1__2_n_0 ));
  CARRY4 \wait_time_cnt_reg[0]_i_3__2 
       (.CI(1'b0),
        .CO({\wait_time_cnt_reg[0]_i_3__2_n_0 ,\wait_time_cnt_reg[0]_i_3__2_n_1 ,\wait_time_cnt_reg[0]_i_3__2_n_2 ,\wait_time_cnt_reg[0]_i_3__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[0]_i_3__2_n_4 ,\wait_time_cnt_reg[0]_i_3__2_n_5 ,\wait_time_cnt_reg[0]_i_3__2_n_6 ,\wait_time_cnt_reg[0]_i_3__2_n_7 }),
        .S({\wait_time_cnt[0]_i_6__2_n_0 ,\wait_time_cnt[0]_i_7__2_n_0 ,\wait_time_cnt[0]_i_8__2_n_0 ,\wait_time_cnt[0]_i_9__2_n_0 }));
  FDRE \wait_time_cnt_reg[10] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__2_n_5 ),
        .Q(wait_time_cnt_reg[10]),
        .R(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDRE \wait_time_cnt_reg[11] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__2_n_4 ),
        .Q(wait_time_cnt_reg[11]),
        .R(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDRE \wait_time_cnt_reg[12] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__2_n_7 ),
        .Q(wait_time_cnt_reg[12]),
        .R(\wait_time_cnt[0]_i_1__2_n_0 ));
  CARRY4 \wait_time_cnt_reg[12]_i_1__2 
       (.CI(\wait_time_cnt_reg[8]_i_1__2_n_0 ),
        .CO({\NLW_wait_time_cnt_reg[12]_i_1__2_CO_UNCONNECTED [3],\wait_time_cnt_reg[12]_i_1__2_n_1 ,\wait_time_cnt_reg[12]_i_1__2_n_2 ,\wait_time_cnt_reg[12]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[12]_i_1__2_n_4 ,\wait_time_cnt_reg[12]_i_1__2_n_5 ,\wait_time_cnt_reg[12]_i_1__2_n_6 ,\wait_time_cnt_reg[12]_i_1__2_n_7 }),
        .S({\wait_time_cnt[12]_i_2__2_n_0 ,\wait_time_cnt[12]_i_3__2_n_0 ,\wait_time_cnt[12]_i_4__2_n_0 ,\wait_time_cnt[12]_i_5__2_n_0 }));
  FDRE \wait_time_cnt_reg[13] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__2_n_6 ),
        .Q(wait_time_cnt_reg[13]),
        .R(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDRE \wait_time_cnt_reg[14] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__2_n_5 ),
        .Q(wait_time_cnt_reg[14]),
        .R(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDRE \wait_time_cnt_reg[15] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__2_n_4 ),
        .Q(wait_time_cnt_reg[15]),
        .R(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDRE \wait_time_cnt_reg[1] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__2_n_6 ),
        .Q(wait_time_cnt_reg[1]),
        .R(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDRE \wait_time_cnt_reg[2] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__2_n_5 ),
        .Q(wait_time_cnt_reg[2]),
        .R(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDSE \wait_time_cnt_reg[3] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__2_n_4 ),
        .Q(wait_time_cnt_reg[3]),
        .S(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDRE \wait_time_cnt_reg[4] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__2_n_7 ),
        .Q(wait_time_cnt_reg[4]),
        .R(\wait_time_cnt[0]_i_1__2_n_0 ));
  CARRY4 \wait_time_cnt_reg[4]_i_1__2 
       (.CI(\wait_time_cnt_reg[0]_i_3__2_n_0 ),
        .CO({\wait_time_cnt_reg[4]_i_1__2_n_0 ,\wait_time_cnt_reg[4]_i_1__2_n_1 ,\wait_time_cnt_reg[4]_i_1__2_n_2 ,\wait_time_cnt_reg[4]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[4]_i_1__2_n_4 ,\wait_time_cnt_reg[4]_i_1__2_n_5 ,\wait_time_cnt_reg[4]_i_1__2_n_6 ,\wait_time_cnt_reg[4]_i_1__2_n_7 }),
        .S({\wait_time_cnt[4]_i_2__2_n_0 ,\wait_time_cnt[4]_i_3__2_n_0 ,\wait_time_cnt[4]_i_4__2_n_0 ,\wait_time_cnt[4]_i_5__2_n_0 }));
  FDSE \wait_time_cnt_reg[5] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__2_n_6 ),
        .Q(wait_time_cnt_reg[5]),
        .S(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDSE \wait_time_cnt_reg[6] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__2_n_5 ),
        .Q(wait_time_cnt_reg[6]),
        .S(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDSE \wait_time_cnt_reg[7] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__2_n_4 ),
        .Q(wait_time_cnt_reg[7]),
        .S(\wait_time_cnt[0]_i_1__2_n_0 ));
  FDSE \wait_time_cnt_reg[8] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__2_n_7 ),
        .Q(wait_time_cnt_reg[8]),
        .S(\wait_time_cnt[0]_i_1__2_n_0 ));
  CARRY4 \wait_time_cnt_reg[8]_i_1__2 
       (.CI(\wait_time_cnt_reg[4]_i_1__2_n_0 ),
        .CO({\wait_time_cnt_reg[8]_i_1__2_n_0 ,\wait_time_cnt_reg[8]_i_1__2_n_1 ,\wait_time_cnt_reg[8]_i_1__2_n_2 ,\wait_time_cnt_reg[8]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[8]_i_1__2_n_4 ,\wait_time_cnt_reg[8]_i_1__2_n_5 ,\wait_time_cnt_reg[8]_i_1__2_n_6 ,\wait_time_cnt_reg[8]_i_1__2_n_7 }),
        .S({\wait_time_cnt[8]_i_2__2_n_0 ,\wait_time_cnt[8]_i_3__2_n_0 ,\wait_time_cnt[8]_i_4__2_n_0 ,\wait_time_cnt[8]_i_5__2_n_0 }));
  FDSE \wait_time_cnt_reg[9] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__2_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__2_n_6 ),
        .Q(wait_time_cnt_reg[9]),
        .S(\wait_time_cnt[0]_i_1__2_n_0 ));
endmodule

(* ORIG_REF_NAME = "gtx3g_TX_MANUAL_PHASE_ALIGN" *) 
module gtx3g_bert_0_gtx3g_TX_MANUAL_PHASE_ALIGN
   (gt0_tx_phalignment_done_i,
    gt0_txdlyen_in,
    U0_TXDLYSRESET,
    U0_TXPHINIT,
    U0_TXPHALIGN,
    sysclk_in,
    SR,
    gt1_run_tx_phalignment_i,
    gt0_run_tx_phalignment_i,
    U0_TXPHALIGNDONE,
    U0_TXDLYSRESETDONE,
    U0_TXPHINITDONE);
  output gt0_tx_phalignment_done_i;
  output gt0_txdlyen_in;
  output [1:0]U0_TXDLYSRESET;
  output [1:0]U0_TXPHINIT;
  output [1:0]U0_TXPHALIGN;
  input sysclk_in;
  input [0:0]SR;
  input gt1_run_tx_phalignment_i;
  input gt0_run_tx_phalignment_i;
  input [1:0]U0_TXPHALIGNDONE;
  input [1:0]U0_TXDLYSRESETDONE;
  input [1:0]U0_TXPHINITDONE;

  wire \FSM_onehot_tx_phalign_manual_state[8]_i_4_n_0 ;
  wire \FSM_onehot_tx_phalign_manual_state[8]_i_7_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_tx_phalign_manual_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_tx_phalign_manual_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_tx_phalign_manual_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_tx_phalign_manual_state_reg_n_0_[4] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_tx_phalign_manual_state_reg_n_0_[5] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_tx_phalign_manual_state_reg_n_0_[6] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_tx_phalign_manual_state_reg_n_0_[7] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_tx_phalign_manual_state_reg_n_0_[8] ;
  wire PHASE_ALIGNMENT_DONE_i_1_n_0;
  wire [0:0]SR;
  wire \TXDLYSRESET[0]_i_1_n_0 ;
  wire \TXDLYSRESET[1]_i_1_n_0 ;
  wire \TXPHALIGN[0]_i_1_n_0 ;
  wire \TXPHALIGN[1]_i_1_n_0 ;
  wire \TXPHINIT[0]_i_1_n_0 ;
  wire \TXPHINIT[1]_i_1_n_0 ;
  wire [1:0]U0_TXDLYSRESET;
  wire [1:0]U0_TXDLYSRESETDONE;
  wire [1:0]U0_TXPHALIGN;
  wire [1:0]U0_TXPHALIGNDONE;
  wire [1:0]U0_TXPHINIT;
  wire [1:0]U0_TXPHINITDONE;
  wire \cdc[0].sync_TXPHALIGNDONE_n_0 ;
  wire \cdc[0].sync_TXPHALIGNDONE_n_2 ;
  wire \cdc[0].sync_TXPHINITDONE_n_1 ;
  wire gt0_run_tx_phalignment_i;
  wire gt0_tx_phalignment_done_i;
  wire gt0_txdlyen_in;
  wire gt1_run_tx_phalignment_i;
  wire p_0_out;
  wire p_2_out;
  wire p_3_out;
  wire p_5_out;
  wire sysclk_in;
  wire [1:0]txdlysresetdone_store;
  wire \txdlysresetdone_store[0]_i_1_n_0 ;
  wire \txdlysresetdone_store[1]_i_1_n_0 ;
  wire txdlysresetdone_sync_0;
  wire txdlysresetdone_sync_1;
  wire txdone_clear_i_1_n_0;
  wire txdone_clear_reg_n_0;
  wire [1:0]txphaligndone_prev;
  wire [1:0]txphaligndone_store;
  wire \txphaligndone_store[0]_i_1_n_0 ;
  wire \txphaligndone_store[1]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire txphinitdone_clear_slave;
  wire [1:0]txphinitdone_prev;
  wire [1:0]txphinitdone_store_edge;
  wire \txphinitdone_store_edge[0]_i_1_n_0 ;
  wire \txphinitdone_store_edge[1]_i_1_n_0 ;

  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \FSM_onehot_tx_phalign_manual_state[8]_i_4 
       (.I0(txphaligndone_store[0]),
        .I1(txphaligndone_store[1]),
        .I2(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[6] ),
        .I3(txphinitdone_store_edge[0]),
        .I4(txphinitdone_store_edge[1]),
        .I5(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[5] ),
        .O(\FSM_onehot_tx_phalign_manual_state[8]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \FSM_onehot_tx_phalign_manual_state[8]_i_7 
       (.I0(txphinitdone_clear_slave),
        .I1(gt1_run_tx_phalignment_i),
        .I2(gt0_run_tx_phalignment_i),
        .O(\FSM_onehot_tx_phalign_manual_state[8]_i_7_n_0 ));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_tx_phalign_manual_state_reg[0] 
       (.C(sysclk_in),
        .CE(\cdc[0].sync_TXPHINITDONE_n_1 ),
        .D(1'b0),
        .Q(txphinitdone_clear_slave),
        .S(SR));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_tx_phalign_manual_state_reg[1] 
       (.C(sysclk_in),
        .CE(\cdc[0].sync_TXPHINITDONE_n_1 ),
        .D(txphinitdone_clear_slave),
        .Q(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[1] ),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_tx_phalign_manual_state_reg[2] 
       (.C(sysclk_in),
        .CE(\cdc[0].sync_TXPHINITDONE_n_1 ),
        .D(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[1] ),
        .Q(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[2] ),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_tx_phalign_manual_state_reg[3] 
       (.C(sysclk_in),
        .CE(\cdc[0].sync_TXPHINITDONE_n_1 ),
        .D(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[2] ),
        .Q(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[3] ),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_tx_phalign_manual_state_reg[4] 
       (.C(sysclk_in),
        .CE(\cdc[0].sync_TXPHINITDONE_n_1 ),
        .D(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[3] ),
        .Q(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[4] ),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_tx_phalign_manual_state_reg[5] 
       (.C(sysclk_in),
        .CE(\cdc[0].sync_TXPHINITDONE_n_1 ),
        .D(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[4] ),
        .Q(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[5] ),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_tx_phalign_manual_state_reg[6] 
       (.C(sysclk_in),
        .CE(\cdc[0].sync_TXPHINITDONE_n_1 ),
        .D(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[5] ),
        .Q(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[6] ),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_tx_phalign_manual_state_reg[7] 
       (.C(sysclk_in),
        .CE(\cdc[0].sync_TXPHINITDONE_n_1 ),
        .D(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[6] ),
        .Q(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[7] ),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_tx_phalign_manual_state_reg[8] 
       (.C(sysclk_in),
        .CE(\cdc[0].sync_TXPHINITDONE_n_1 ),
        .D(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[7] ),
        .Q(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[8] ),
        .R(SR));
  LUT3 #(
    .INIT(8'hDC)) 
    PHASE_ALIGNMENT_DONE_i_1
       (.I0(txphinitdone_clear_slave),
        .I1(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[8] ),
        .I2(gt0_tx_phalignment_done_i),
        .O(PHASE_ALIGNMENT_DONE_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    PHASE_ALIGNMENT_DONE_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(PHASE_ALIGNMENT_DONE_i_1_n_0),
        .Q(gt0_tx_phalignment_done_i),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \TXDLYEN_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\cdc[0].sync_TXPHALIGNDONE_n_0 ),
        .Q(gt0_txdlyen_in),
        .R(SR));
  LUT6 #(
    .INIT(64'h80FFFFFF80808080)) 
    \TXDLYSRESET[0]_i_1 
       (.I0(gt0_run_tx_phalignment_i),
        .I1(gt1_run_tx_phalignment_i),
        .I2(txphinitdone_clear_slave),
        .I3(txdlysresetdone_store[0]),
        .I4(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[1] ),
        .I5(U0_TXDLYSRESET[0]),
        .O(\TXDLYSRESET[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80FFFFFF80808080)) 
    \TXDLYSRESET[1]_i_1 
       (.I0(gt0_run_tx_phalignment_i),
        .I1(gt1_run_tx_phalignment_i),
        .I2(txphinitdone_clear_slave),
        .I3(txdlysresetdone_store[1]),
        .I4(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[1] ),
        .I5(U0_TXDLYSRESET[1]),
        .O(\TXDLYSRESET[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TXDLYSRESET_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\TXDLYSRESET[0]_i_1_n_0 ),
        .Q(U0_TXDLYSRESET[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \TXDLYSRESET_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\TXDLYSRESET[1]_i_1_n_0 ),
        .Q(U0_TXDLYSRESET[1]),
        .R(SR));
  LUT5 #(
    .INIT(32'hB0BFB0B0)) 
    \TXPHALIGN[0]_i_1 
       (.I0(txphaligndone_prev[0]),
        .I1(p_5_out),
        .I2(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[6] ),
        .I4(U0_TXPHALIGN[0]),
        .O(\TXPHALIGN[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h74)) 
    \TXPHALIGN[1]_i_1 
       (.I0(txphaligndone_store[1]),
        .I1(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[6] ),
        .I2(U0_TXPHALIGN[1]),
        .O(\TXPHALIGN[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHALIGN_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\TXPHALIGN[0]_i_1_n_0 ),
        .Q(U0_TXPHALIGN[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHALIGN_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\TXPHALIGN[1]_i_1_n_0 ),
        .Q(U0_TXPHALIGN[1]),
        .R(SR));
  LUT5 #(
    .INIT(32'hB0BFB0B0)) 
    \TXPHINIT[0]_i_1 
       (.I0(txphinitdone_prev[0]),
        .I1(p_3_out),
        .I2(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[5] ),
        .I4(U0_TXPHINIT[0]),
        .O(\TXPHINIT[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h74)) 
    \TXPHINIT[1]_i_1 
       (.I0(txphinitdone_store_edge[1]),
        .I1(\FSM_onehot_tx_phalign_manual_state_reg_n_0_[5] ),
        .I2(U0_TXPHINIT[1]),
        .O(\TXPHINIT[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHINIT_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\TXPHINIT[0]_i_1_n_0 ),
        .Q(U0_TXPHINIT[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHINIT_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\TXPHINIT[1]_i_1_n_0 ),
        .Q(U0_TXPHINIT[1]),
        .R(SR));
  gtx3g_bert_0_gtx3g_sync_block_22 \cdc[0].sync_TXDLYSRESETDONE 
       (.U0_TXDLYSRESETDONE(U0_TXDLYSRESETDONE[0]),
        .data_out(txdlysresetdone_sync_0),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_23 \cdc[0].sync_TXPHALIGNDONE 
       (.\FSM_onehot_tx_phalign_manual_state_reg[0] (\cdc[0].sync_TXPHALIGNDONE_n_2 ),
        .Q(txphaligndone_prev[0]),
        .\TXDLYEN_reg[0] (\cdc[0].sync_TXPHALIGNDONE_n_0 ),
        .U0_TXPHALIGNDONE(U0_TXPHALIGNDONE[0]),
        .data_out(p_5_out),
        .gt0_txdlyen_in(gt0_txdlyen_in),
        .out({\FSM_onehot_tx_phalign_manual_state_reg_n_0_[8] ,\FSM_onehot_tx_phalign_manual_state_reg_n_0_[7] ,\FSM_onehot_tx_phalign_manual_state_reg_n_0_[4] }),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_pulse \cdc[0].sync_TXPHINITDONE 
       (.D({\FSM_onehot_tx_phalign_manual_state_reg_n_0_[7] ,\FSM_onehot_tx_phalign_manual_state_reg_n_0_[4] ,\FSM_onehot_tx_phalign_manual_state_reg_n_0_[3] ,\FSM_onehot_tx_phalign_manual_state_reg_n_0_[2] ,\FSM_onehot_tx_phalign_manual_state_reg_n_0_[1] }),
        .E(\cdc[0].sync_TXPHINITDONE_n_1 ),
        .\FSM_onehot_tx_phalign_manual_state_reg[0] (\FSM_onehot_tx_phalign_manual_state[8]_i_7_n_0 ),
        .Q(txphinitdone_prev[0]),
        .U0_TXPHINITDONE(U0_TXPHINITDONE[0]),
        .data_sync_reg6(\cdc[0].sync_TXPHALIGNDONE_n_2 ),
        .p_3_out(p_3_out),
        .sysclk_in(sysclk_in),
        .txdlysresetdone_store(txdlysresetdone_store),
        .\txphaligndone_store_reg[0] (\FSM_onehot_tx_phalign_manual_state[8]_i_4_n_0 ));
  gtx3g_bert_0_gtx3g_sync_block_24 \cdc[1].sync_TXDLYSRESETDONE 
       (.U0_TXDLYSRESETDONE(U0_TXDLYSRESETDONE[1]),
        .data_out(txdlysresetdone_sync_1),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_25 \cdc[1].sync_TXPHALIGNDONE 
       (.U0_TXPHALIGNDONE(U0_TXPHALIGNDONE[1]),
        .data_out(p_2_out),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_pulse_26 \cdc[1].sync_TXPHINITDONE 
       (.D(p_0_out),
        .U0_TXPHINITDONE(U0_TXPHINITDONE[1]),
        .sysclk_in(sysclk_in));
  LUT2 #(
    .INIT(4'hE)) 
    \txdlysresetdone_store[0]_i_1 
       (.I0(txdlysresetdone_sync_0),
        .I1(txdlysresetdone_store[0]),
        .O(\txdlysresetdone_store[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \txdlysresetdone_store[1]_i_1 
       (.I0(txdlysresetdone_sync_1),
        .I1(txdlysresetdone_store[1]),
        .O(\txdlysresetdone_store[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txdlysresetdone_store_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\txdlysresetdone_store[0]_i_1_n_0 ),
        .Q(txdlysresetdone_store[0]),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txdlysresetdone_store_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\txdlysresetdone_store[1]_i_1_n_0 ),
        .Q(txdlysresetdone_store[1]),
        .R(txdone_clear_reg_n_0));
  LUT4 #(
    .INIT(16'h7F70)) 
    txdone_clear_i_1
       (.I0(gt1_run_tx_phalignment_i),
        .I1(gt0_run_tx_phalignment_i),
        .I2(txphinitdone_clear_slave),
        .I3(txdone_clear_reg_n_0),
        .O(txdone_clear_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    txdone_clear_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(txdone_clear_i_1_n_0),
        .Q(txdone_clear_reg_n_0),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_prev_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(p_5_out),
        .Q(txphaligndone_prev[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_prev_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(p_2_out),
        .Q(txphaligndone_prev[1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \txphaligndone_store[0]_i_1 
       (.I0(txphaligndone_prev[0]),
        .I1(p_5_out),
        .I2(txphaligndone_store[0]),
        .O(\txphaligndone_store[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF4)) 
    \txphaligndone_store[1]_i_1 
       (.I0(txphaligndone_prev[1]),
        .I1(p_2_out),
        .I2(txphaligndone_store[1]),
        .O(\txphaligndone_store[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_store_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\txphaligndone_store[0]_i_1_n_0 ),
        .Q(txphaligndone_store[0]),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_store_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\txphaligndone_store[1]_i_1_n_0 ),
        .Q(txphaligndone_store[1]),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_prev_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(p_3_out),
        .Q(txphinitdone_prev[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_prev_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(p_0_out),
        .Q(txphinitdone_prev[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFAE)) 
    \txphinitdone_store_edge[0]_i_1 
       (.I0(txphinitdone_store_edge[0]),
        .I1(p_3_out),
        .I2(txphinitdone_prev[0]),
        .I3(txdone_clear_reg_n_0),
        .O(\txphinitdone_store_edge[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF4)) 
    \txphinitdone_store_edge[1]_i_1 
       (.I0(txphinitdone_prev[1]),
        .I1(p_0_out),
        .I2(txphinitdone_store_edge[1]),
        .O(\txphinitdone_store_edge[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_store_edge_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\txphinitdone_store_edge[0]_i_1_n_0 ),
        .Q(txphinitdone_store_edge[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_store_edge_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\txphinitdone_store_edge[1]_i_1_n_0 ),
        .Q(txphinitdone_store_edge[1]),
        .R(txdone_clear_reg_n_0));
endmodule

(* ORIG_REF_NAME = "gtx3g_TX_STARTUP_FSM" *) 
module gtx3g_bert_0_gtx3g_TX_STARTUP_FSM
   (gt0_gttxreset_in,
    gt0_qpllreset_out,
    gt0_tx_fsm_reset_done_out,
    gt0_txuserrdy_in,
    data_in,
    SR,
    sysclk_in,
    gt0_txusrclk_in,
    soft_reset_tx_in,
    gt0_qpllrefclklost_in,
    gt1_rst_tx_phalignment_i,
    gt0_txresetdone_out,
    gt0_qplllock_in,
    gt0_tx_phalignment_done_i);
  output gt0_gttxreset_in;
  output gt0_qpllreset_out;
  output gt0_tx_fsm_reset_done_out;
  output gt0_txuserrdy_in;
  output data_in;
  output [0:0]SR;
  input sysclk_in;
  input gt0_txusrclk_in;
  input soft_reset_tx_in;
  input gt0_qpllrefclklost_in;
  input gt1_rst_tx_phalignment_i;
  input gt0_txresetdone_out;
  input gt0_qplllock_in;
  input gt0_tx_phalignment_done_i;

  wire \FSM_sequential_tx_state[0]_i_1_n_0 ;
  wire \FSM_sequential_tx_state[0]_i_2_n_0 ;
  wire \FSM_sequential_tx_state[1]_i_1_n_0 ;
  wire \FSM_sequential_tx_state[2]_i_1_n_0 ;
  wire \FSM_sequential_tx_state[2]_i_2_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_11_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_12_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_13_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_14_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_2_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_4_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_6_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_7_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_8_n_0 ;
  wire \FSM_sequential_tx_state_reg[3]_i_3_n_0 ;
  wire QPLL_RESET_i_1_n_0;
  wire QPLL_RESET_i_2_n_0;
  wire RESET_PHALIGNMENT_i_1_n_0;
  wire [0:0]SR;
  wire TXUSERRDY_i_1_n_0;
  wire clear;
  wire data_in;
  wire gt0_gttxreset_in;
  wire gt0_qplllock_in;
  wire gt0_qpllrefclklost_in;
  wire gt0_qpllreset_out;
  wire gt0_rst_tx_phalignment_i;
  wire gt0_tx_fsm_reset_done_out;
  wire gt0_tx_phalignment_done_i;
  wire gt0_txresetdone_out;
  wire gt0_txuserrdy_in;
  wire gt0_txusrclk_in;
  wire gt1_rst_tx_phalignment_i;
  wire gttxreset_i_i_1_n_0;
  wire init_wait_count;
  wire \init_wait_count[0]_i_1_n_0 ;
  wire \init_wait_count[6]_i_2_n_0 ;
  wire \init_wait_count[7]_i_3_n_0 ;
  wire [7:0]init_wait_count_reg__0;
  wire init_wait_done_i_1_n_0;
  wire init_wait_done_reg_n_0;
  wire \mmcm_lock_count[2]_i_1_n_0 ;
  wire \mmcm_lock_count[3]_i_1_n_0 ;
  wire \mmcm_lock_count[4]_i_1_n_0 ;
  wire \mmcm_lock_count[5]_i_1_n_0 ;
  wire \mmcm_lock_count[6]_i_1_n_0 ;
  wire \mmcm_lock_count[7]_i_1_n_0 ;
  wire \mmcm_lock_count[8]_i_1_n_0 ;
  wire \mmcm_lock_count[9]_i_2_n_0 ;
  wire \mmcm_lock_count[9]_i_4_n_0 ;
  wire [9:0]mmcm_lock_count_reg__0;
  wire mmcm_lock_reclocked;
  wire mmcm_lock_reclocked_i_2_n_0;
  wire [7:1]p_0_in;
  wire [9:0]p_0_in__0;
  wire pll_reset_asserted_i_1_n_0;
  wire pll_reset_asserted_reg_n_0;
  wire reset_time_out;
  wire run_phase_alignment_int_i_1_n_0;
  wire run_phase_alignment_int_s2;
  wire run_phase_alignment_int_s3;
  wire sel;
  wire soft_reset_tx_in;
  wire sync_mmcm_lock_reclocked_n_0;
  wire sync_mmcm_lock_reclocked_n_1;
  wire sync_qplllock_n_0;
  wire sync_qplllock_n_1;
  wire sysclk_in;
  wire time_out_2ms_i_1__1_n_0;
  wire time_out_2ms_i_2_n_0;
  wire time_out_2ms_reg_n_0;
  wire time_out_500us_i_1_n_0;
  wire time_out_500us_i_2_n_0;
  wire time_out_500us_reg_n_0;
  wire time_out_counter;
  wire \time_out_counter[0]_i_10_n_0 ;
  wire \time_out_counter[0]_i_11_n_0 ;
  wire \time_out_counter[0]_i_3__1_n_0 ;
  wire \time_out_counter[0]_i_4_n_0 ;
  wire \time_out_counter[0]_i_5__1_n_0 ;
  wire \time_out_counter[0]_i_6_n_0 ;
  wire \time_out_counter[0]_i_7_n_0 ;
  wire \time_out_counter[0]_i_8_n_0 ;
  wire \time_out_counter[0]_i_9_n_0 ;
  wire \time_out_counter[12]_i_2_n_0 ;
  wire \time_out_counter[12]_i_3_n_0 ;
  wire \time_out_counter[12]_i_4_n_0 ;
  wire \time_out_counter[12]_i_5_n_0 ;
  wire \time_out_counter[16]_i_2_n_0 ;
  wire \time_out_counter[16]_i_3_n_0 ;
  wire \time_out_counter[4]_i_2_n_0 ;
  wire \time_out_counter[4]_i_3_n_0 ;
  wire \time_out_counter[4]_i_4_n_0 ;
  wire \time_out_counter[4]_i_5_n_0 ;
  wire \time_out_counter[8]_i_2_n_0 ;
  wire \time_out_counter[8]_i_3_n_0 ;
  wire \time_out_counter[8]_i_4_n_0 ;
  wire \time_out_counter[8]_i_5_n_0 ;
  wire [17:0]time_out_counter_reg;
  wire \time_out_counter_reg[0]_i_2_n_0 ;
  wire \time_out_counter_reg[0]_i_2_n_1 ;
  wire \time_out_counter_reg[0]_i_2_n_2 ;
  wire \time_out_counter_reg[0]_i_2_n_3 ;
  wire \time_out_counter_reg[0]_i_2_n_4 ;
  wire \time_out_counter_reg[0]_i_2_n_5 ;
  wire \time_out_counter_reg[0]_i_2_n_6 ;
  wire \time_out_counter_reg[0]_i_2_n_7 ;
  wire \time_out_counter_reg[12]_i_1_n_0 ;
  wire \time_out_counter_reg[12]_i_1_n_1 ;
  wire \time_out_counter_reg[12]_i_1_n_2 ;
  wire \time_out_counter_reg[12]_i_1_n_3 ;
  wire \time_out_counter_reg[12]_i_1_n_4 ;
  wire \time_out_counter_reg[12]_i_1_n_5 ;
  wire \time_out_counter_reg[12]_i_1_n_6 ;
  wire \time_out_counter_reg[12]_i_1_n_7 ;
  wire \time_out_counter_reg[16]_i_1_n_3 ;
  wire \time_out_counter_reg[16]_i_1_n_6 ;
  wire \time_out_counter_reg[16]_i_1_n_7 ;
  wire \time_out_counter_reg[4]_i_1_n_0 ;
  wire \time_out_counter_reg[4]_i_1_n_1 ;
  wire \time_out_counter_reg[4]_i_1_n_2 ;
  wire \time_out_counter_reg[4]_i_1_n_3 ;
  wire \time_out_counter_reg[4]_i_1_n_4 ;
  wire \time_out_counter_reg[4]_i_1_n_5 ;
  wire \time_out_counter_reg[4]_i_1_n_6 ;
  wire \time_out_counter_reg[4]_i_1_n_7 ;
  wire \time_out_counter_reg[8]_i_1_n_0 ;
  wire \time_out_counter_reg[8]_i_1_n_1 ;
  wire \time_out_counter_reg[8]_i_1_n_2 ;
  wire \time_out_counter_reg[8]_i_1_n_3 ;
  wire \time_out_counter_reg[8]_i_1_n_4 ;
  wire \time_out_counter_reg[8]_i_1_n_5 ;
  wire \time_out_counter_reg[8]_i_1_n_6 ;
  wire \time_out_counter_reg[8]_i_1_n_7 ;
  wire time_out_wait_bypass_i_1_n_0;
  wire time_out_wait_bypass_reg_n_0;
  wire time_out_wait_bypass_s2;
  wire time_out_wait_bypass_s3;
  wire time_tlock_max_i_1__1_n_0;
  wire time_tlock_max_i_2__1_n_0;
  wire time_tlock_max_i_3__1_n_0;
  wire time_tlock_max_reg_n_0;
  wire tx_fsm_reset_done_int_i_1_n_0;
  wire tx_fsm_reset_done_int_s2;
  wire tx_fsm_reset_done_int_s3;
  (* RTL_KEEP = "yes" *) wire [3:0]tx_state;
  wire tx_state1;
  wire tx_state13_out;
  wire txresetdone_s2;
  wire txresetdone_s3;
  wire \wait_bypass_count[0]_i_10_n_0 ;
  wire \wait_bypass_count[0]_i_11_n_0 ;
  wire \wait_bypass_count[0]_i_12_n_0 ;
  wire \wait_bypass_count[0]_i_2_n_0 ;
  wire \wait_bypass_count[0]_i_4_n_0 ;
  wire \wait_bypass_count[0]_i_5_n_0 ;
  wire \wait_bypass_count[0]_i_6_n_0 ;
  wire \wait_bypass_count[0]_i_7_n_0 ;
  wire \wait_bypass_count[0]_i_8_n_0 ;
  wire \wait_bypass_count[0]_i_9_n_0 ;
  wire \wait_bypass_count[12]_i_2_n_0 ;
  wire \wait_bypass_count[12]_i_3_n_0 ;
  wire \wait_bypass_count[12]_i_4_n_0 ;
  wire \wait_bypass_count[12]_i_5_n_0 ;
  wire \wait_bypass_count[16]_i_2_n_0 ;
  wire \wait_bypass_count[4]_i_2_n_0 ;
  wire \wait_bypass_count[4]_i_3_n_0 ;
  wire \wait_bypass_count[4]_i_4_n_0 ;
  wire \wait_bypass_count[4]_i_5_n_0 ;
  wire \wait_bypass_count[8]_i_2_n_0 ;
  wire \wait_bypass_count[8]_i_3_n_0 ;
  wire \wait_bypass_count[8]_i_4_n_0 ;
  wire \wait_bypass_count[8]_i_5_n_0 ;
  wire [16:0]wait_bypass_count_reg;
  wire \wait_bypass_count_reg[0]_i_3_n_0 ;
  wire \wait_bypass_count_reg[0]_i_3_n_1 ;
  wire \wait_bypass_count_reg[0]_i_3_n_2 ;
  wire \wait_bypass_count_reg[0]_i_3_n_3 ;
  wire \wait_bypass_count_reg[0]_i_3_n_4 ;
  wire \wait_bypass_count_reg[0]_i_3_n_5 ;
  wire \wait_bypass_count_reg[0]_i_3_n_6 ;
  wire \wait_bypass_count_reg[0]_i_3_n_7 ;
  wire \wait_bypass_count_reg[12]_i_1_n_0 ;
  wire \wait_bypass_count_reg[12]_i_1_n_1 ;
  wire \wait_bypass_count_reg[12]_i_1_n_2 ;
  wire \wait_bypass_count_reg[12]_i_1_n_3 ;
  wire \wait_bypass_count_reg[12]_i_1_n_4 ;
  wire \wait_bypass_count_reg[12]_i_1_n_5 ;
  wire \wait_bypass_count_reg[12]_i_1_n_6 ;
  wire \wait_bypass_count_reg[12]_i_1_n_7 ;
  wire \wait_bypass_count_reg[16]_i_1_n_7 ;
  wire \wait_bypass_count_reg[4]_i_1_n_0 ;
  wire \wait_bypass_count_reg[4]_i_1_n_1 ;
  wire \wait_bypass_count_reg[4]_i_1_n_2 ;
  wire \wait_bypass_count_reg[4]_i_1_n_3 ;
  wire \wait_bypass_count_reg[4]_i_1_n_4 ;
  wire \wait_bypass_count_reg[4]_i_1_n_5 ;
  wire \wait_bypass_count_reg[4]_i_1_n_6 ;
  wire \wait_bypass_count_reg[4]_i_1_n_7 ;
  wire \wait_bypass_count_reg[8]_i_1_n_0 ;
  wire \wait_bypass_count_reg[8]_i_1_n_1 ;
  wire \wait_bypass_count_reg[8]_i_1_n_2 ;
  wire \wait_bypass_count_reg[8]_i_1_n_3 ;
  wire \wait_bypass_count_reg[8]_i_1_n_4 ;
  wire \wait_bypass_count_reg[8]_i_1_n_5 ;
  wire \wait_bypass_count_reg[8]_i_1_n_6 ;
  wire \wait_bypass_count_reg[8]_i_1_n_7 ;
  wire \wait_time_cnt[0]_i_1_n_0 ;
  wire \wait_time_cnt[0]_i_4_n_0 ;
  wire \wait_time_cnt[0]_i_5_n_0 ;
  wire \wait_time_cnt[0]_i_6_n_0 ;
  wire \wait_time_cnt[0]_i_7_n_0 ;
  wire \wait_time_cnt[0]_i_8_n_0 ;
  wire \wait_time_cnt[0]_i_9_n_0 ;
  wire \wait_time_cnt[12]_i_2_n_0 ;
  wire \wait_time_cnt[12]_i_3_n_0 ;
  wire \wait_time_cnt[12]_i_4_n_0 ;
  wire \wait_time_cnt[12]_i_5_n_0 ;
  wire \wait_time_cnt[4]_i_2_n_0 ;
  wire \wait_time_cnt[4]_i_3_n_0 ;
  wire \wait_time_cnt[4]_i_4_n_0 ;
  wire \wait_time_cnt[4]_i_5_n_0 ;
  wire \wait_time_cnt[8]_i_2_n_0 ;
  wire \wait_time_cnt[8]_i_3_n_0 ;
  wire \wait_time_cnt[8]_i_4_n_0 ;
  wire \wait_time_cnt[8]_i_5_n_0 ;
  wire [15:0]wait_time_cnt_reg;
  wire \wait_time_cnt_reg[0]_i_3_n_0 ;
  wire \wait_time_cnt_reg[0]_i_3_n_1 ;
  wire \wait_time_cnt_reg[0]_i_3_n_2 ;
  wire \wait_time_cnt_reg[0]_i_3_n_3 ;
  wire \wait_time_cnt_reg[0]_i_3_n_4 ;
  wire \wait_time_cnt_reg[0]_i_3_n_5 ;
  wire \wait_time_cnt_reg[0]_i_3_n_6 ;
  wire \wait_time_cnt_reg[0]_i_3_n_7 ;
  wire \wait_time_cnt_reg[12]_i_1_n_1 ;
  wire \wait_time_cnt_reg[12]_i_1_n_2 ;
  wire \wait_time_cnt_reg[12]_i_1_n_3 ;
  wire \wait_time_cnt_reg[12]_i_1_n_4 ;
  wire \wait_time_cnt_reg[12]_i_1_n_5 ;
  wire \wait_time_cnt_reg[12]_i_1_n_6 ;
  wire \wait_time_cnt_reg[12]_i_1_n_7 ;
  wire \wait_time_cnt_reg[4]_i_1_n_0 ;
  wire \wait_time_cnt_reg[4]_i_1_n_1 ;
  wire \wait_time_cnt_reg[4]_i_1_n_2 ;
  wire \wait_time_cnt_reg[4]_i_1_n_3 ;
  wire \wait_time_cnt_reg[4]_i_1_n_4 ;
  wire \wait_time_cnt_reg[4]_i_1_n_5 ;
  wire \wait_time_cnt_reg[4]_i_1_n_6 ;
  wire \wait_time_cnt_reg[4]_i_1_n_7 ;
  wire \wait_time_cnt_reg[8]_i_1_n_0 ;
  wire \wait_time_cnt_reg[8]_i_1_n_1 ;
  wire \wait_time_cnt_reg[8]_i_1_n_2 ;
  wire \wait_time_cnt_reg[8]_i_1_n_3 ;
  wire \wait_time_cnt_reg[8]_i_1_n_4 ;
  wire \wait_time_cnt_reg[8]_i_1_n_5 ;
  wire \wait_time_cnt_reg[8]_i_1_n_6 ;
  wire \wait_time_cnt_reg[8]_i_1_n_7 ;
  wire [3:1]\NLW_time_out_counter_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_time_out_counter_reg[16]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_wait_bypass_count_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_wait_bypass_count_reg[16]_i_1_O_UNCONNECTED ;
  wire [3:3]\NLW_wait_time_cnt_reg[12]_i_1_CO_UNCONNECTED ;

  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_tx_phalign_manual_state[8]_i_1 
       (.I0(gt0_rst_tx_phalignment_i),
        .I1(gt1_rst_tx_phalignment_i),
        .O(SR));
  LUT6 #(
    .INIT(64'h2222220222220A0A)) 
    \FSM_sequential_tx_state[0]_i_1 
       (.I0(\FSM_sequential_tx_state[0]_i_2_n_0 ),
        .I1(tx_state[3]),
        .I2(tx_state[0]),
        .I3(time_out_2ms_reg_n_0),
        .I4(tx_state[2]),
        .I5(tx_state[1]),
        .O(\FSM_sequential_tx_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3B33BBBBBBBBBBBB)) 
    \FSM_sequential_tx_state[0]_i_2 
       (.I0(\FSM_sequential_tx_state[2]_i_2_n_0 ),
        .I1(tx_state[0]),
        .I2(reset_time_out),
        .I3(time_out_500us_reg_n_0),
        .I4(tx_state[1]),
        .I5(tx_state[2]),
        .O(\FSM_sequential_tx_state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h11110444)) 
    \FSM_sequential_tx_state[1]_i_1 
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state13_out),
        .I3(tx_state[2]),
        .I4(tx_state[1]),
        .O(\FSM_sequential_tx_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \FSM_sequential_tx_state[1]_i_2 
       (.I0(mmcm_lock_reclocked),
        .I1(reset_time_out),
        .I2(time_tlock_max_reg_n_0),
        .O(tx_state13_out));
  LUT6 #(
    .INIT(64'h1111004055550040)) 
    \FSM_sequential_tx_state[2]_i_1 
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[1]),
        .I3(time_out_2ms_reg_n_0),
        .I4(tx_state[2]),
        .I5(\FSM_sequential_tx_state[2]_i_2_n_0 ),
        .O(\FSM_sequential_tx_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFF02)) 
    \FSM_sequential_tx_state[2]_i_2 
       (.I0(time_tlock_max_reg_n_0),
        .I1(reset_time_out),
        .I2(mmcm_lock_reclocked),
        .I3(tx_state[1]),
        .O(\FSM_sequential_tx_state[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \FSM_sequential_tx_state[3]_i_11 
       (.I0(reset_time_out),
        .I1(time_tlock_max_reg_n_0),
        .I2(mmcm_lock_reclocked),
        .O(\FSM_sequential_tx_state[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_sequential_tx_state[3]_i_12 
       (.I0(wait_time_cnt_reg[12]),
        .I1(wait_time_cnt_reg[13]),
        .I2(wait_time_cnt_reg[10]),
        .I3(wait_time_cnt_reg[11]),
        .I4(wait_time_cnt_reg[15]),
        .I5(wait_time_cnt_reg[14]),
        .O(\FSM_sequential_tx_state[3]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_tx_state[3]_i_13 
       (.I0(wait_time_cnt_reg[1]),
        .I1(wait_time_cnt_reg[0]),
        .I2(wait_time_cnt_reg[3]),
        .I3(wait_time_cnt_reg[2]),
        .O(\FSM_sequential_tx_state[3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_sequential_tx_state[3]_i_14 
       (.I0(wait_time_cnt_reg[6]),
        .I1(wait_time_cnt_reg[7]),
        .I2(wait_time_cnt_reg[4]),
        .I3(wait_time_cnt_reg[5]),
        .I4(wait_time_cnt_reg[9]),
        .I5(wait_time_cnt_reg[8]),
        .O(\FSM_sequential_tx_state[3]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_tx_state[3]_i_15 
       (.I0(time_out_500us_reg_n_0),
        .I1(reset_time_out),
        .O(tx_state1));
  LUT5 #(
    .INIT(32'h00A00B00)) 
    \FSM_sequential_tx_state[3]_i_2 
       (.I0(\FSM_sequential_tx_state[3]_i_6_n_0 ),
        .I1(time_out_wait_bypass_s3),
        .I2(tx_state[2]),
        .I3(tx_state[3]),
        .I4(tx_state[1]),
        .O(\FSM_sequential_tx_state[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \FSM_sequential_tx_state[3]_i_4 
       (.I0(tx_state[0]),
        .I1(tx_state[3]),
        .I2(tx_state[2]),
        .O(\FSM_sequential_tx_state[3]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h8A)) 
    \FSM_sequential_tx_state[3]_i_6 
       (.I0(tx_state[0]),
        .I1(reset_time_out),
        .I2(time_out_500us_reg_n_0),
        .O(\FSM_sequential_tx_state[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \FSM_sequential_tx_state[3]_i_7 
       (.I0(\FSM_sequential_tx_state[3]_i_11_n_0 ),
        .I1(tx_state[0]),
        .I2(\FSM_sequential_tx_state[3]_i_12_n_0 ),
        .I3(\FSM_sequential_tx_state[3]_i_13_n_0 ),
        .I4(\FSM_sequential_tx_state[3]_i_14_n_0 ),
        .O(\FSM_sequential_tx_state[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hEFE0E0E0E0E0E0E0)) 
    \FSM_sequential_tx_state[3]_i_8 
       (.I0(tx_state1),
        .I1(txresetdone_s3),
        .I2(tx_state[0]),
        .I3(\FSM_sequential_tx_state[3]_i_12_n_0 ),
        .I4(\FSM_sequential_tx_state[3]_i_13_n_0 ),
        .I5(\FSM_sequential_tx_state[3]_i_14_n_0 ),
        .O(\FSM_sequential_tx_state[3]_i_8_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_tx_state_reg[0] 
       (.C(sysclk_in),
        .CE(sync_qplllock_n_1),
        .D(\FSM_sequential_tx_state[0]_i_1_n_0 ),
        .Q(tx_state[0]),
        .R(soft_reset_tx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_tx_state_reg[1] 
       (.C(sysclk_in),
        .CE(sync_qplllock_n_1),
        .D(\FSM_sequential_tx_state[1]_i_1_n_0 ),
        .Q(tx_state[1]),
        .R(soft_reset_tx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_tx_state_reg[2] 
       (.C(sysclk_in),
        .CE(sync_qplllock_n_1),
        .D(\FSM_sequential_tx_state[2]_i_1_n_0 ),
        .Q(tx_state[2]),
        .R(soft_reset_tx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_tx_state_reg[3] 
       (.C(sysclk_in),
        .CE(sync_qplllock_n_1),
        .D(\FSM_sequential_tx_state[3]_i_2_n_0 ),
        .Q(tx_state[3]),
        .R(soft_reset_tx_in));
  MUXF7 \FSM_sequential_tx_state_reg[3]_i_3 
       (.I0(\FSM_sequential_tx_state[3]_i_7_n_0 ),
        .I1(\FSM_sequential_tx_state[3]_i_8_n_0 ),
        .O(\FSM_sequential_tx_state_reg[3]_i_3_n_0 ),
        .S(tx_state[1]));
  LUT6 #(
    .INIT(64'hFFFFF1FF00000100)) 
    QPLL_RESET_i_1
       (.I0(pll_reset_asserted_reg_n_0),
        .I1(gt0_qpllrefclklost_in),
        .I2(QPLL_RESET_i_2_n_0),
        .I3(tx_state[0]),
        .I4(tx_state[1]),
        .I5(gt0_qpllreset_out),
        .O(QPLL_RESET_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    QPLL_RESET_i_2
       (.I0(tx_state[2]),
        .I1(tx_state[3]),
        .O(QPLL_RESET_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    QPLL_RESET_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(QPLL_RESET_i_1_n_0),
        .Q(gt0_qpllreset_out),
        .R(soft_reset_tx_in));
  LUT5 #(
    .INIT(32'hFFFD0004)) 
    RESET_PHALIGNMENT_i_1
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[2]),
        .I3(tx_state[1]),
        .I4(gt0_rst_tx_phalignment_i),
        .O(RESET_PHALIGNMENT_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    RESET_PHALIGNMENT_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(RESET_PHALIGNMENT_i_1_n_0),
        .Q(gt0_rst_tx_phalignment_i),
        .S(soft_reset_tx_in));
  LUT5 #(
    .INIT(32'hFFFB4000)) 
    TXUSERRDY_i_1
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[1]),
        .I3(tx_state[2]),
        .I4(gt0_txuserrdy_in),
        .O(TXUSERRDY_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    TXUSERRDY_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(TXUSERRDY_i_1_n_0),
        .Q(gt0_txuserrdy_in),
        .R(soft_reset_tx_in));
  LUT5 #(
    .INIT(32'hFFFD0004)) 
    gttxreset_i_i_1
       (.I0(tx_state[2]),
        .I1(tx_state[0]),
        .I2(tx_state[3]),
        .I3(tx_state[1]),
        .I4(gt0_gttxreset_in),
        .O(gttxreset_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gttxreset_i_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gttxreset_i_i_1_n_0),
        .Q(gt0_gttxreset_in),
        .R(soft_reset_tx_in));
  LUT1 #(
    .INIT(2'h1)) 
    \init_wait_count[0]_i_1 
       (.I0(init_wait_count_reg__0[0]),
        .O(\init_wait_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[1]_i_1 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \init_wait_count[2]_i_1 
       (.I0(init_wait_count_reg__0[1]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \init_wait_count[3]_i_1 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[1]),
        .I3(init_wait_count_reg__0[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \init_wait_count[4]_i_1 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[3]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[1]),
        .I4(init_wait_count_reg__0[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[5]_i_1 
       (.I0(init_wait_count_reg__0[3]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[4]),
        .I3(init_wait_count_reg__0[0]),
        .I4(init_wait_count_reg__0[1]),
        .I5(init_wait_count_reg__0[5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[6]_i_1 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[5]),
        .I4(\init_wait_count[6]_i_2_n_0 ),
        .I5(init_wait_count_reg__0[6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \init_wait_count[6]_i_2 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(\init_wait_count[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \init_wait_count[7]_i_1 
       (.I0(init_wait_count_reg__0[6]),
        .I1(init_wait_count_reg__0[7]),
        .I2(init_wait_count_reg__0[0]),
        .I3(\init_wait_count[7]_i_3_n_0 ),
        .I4(init_wait_count_reg__0[1]),
        .O(init_wait_count));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \init_wait_count[7]_i_2 
       (.I0(\init_wait_count[7]_i_3_n_0 ),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[6]),
        .I4(init_wait_count_reg__0[7]),
        .O(p_0_in[7]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \init_wait_count[7]_i_3 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[5]),
        .O(\init_wait_count[7]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[0] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(\init_wait_count[0]_i_1_n_0 ),
        .Q(init_wait_count_reg__0[0]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[1] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[1]),
        .Q(init_wait_count_reg__0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[2] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[2]),
        .Q(init_wait_count_reg__0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[3] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[3]),
        .Q(init_wait_count_reg__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[4] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[4]),
        .Q(init_wait_count_reg__0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[5] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[5]),
        .Q(init_wait_count_reg__0[5]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[6] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[6]),
        .Q(init_wait_count_reg__0[6]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[7] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[7]),
        .Q(init_wait_count_reg__0[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    init_wait_done_i_1
       (.I0(\init_wait_count[7]_i_3_n_0 ),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[7]),
        .I4(init_wait_count_reg__0[6]),
        .I5(init_wait_done_reg_n_0),
        .O(init_wait_done_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    init_wait_done_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .CLR(soft_reset_tx_in),
        .D(init_wait_done_i_1_n_0),
        .Q(init_wait_done_reg_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[0]_i_1 
       (.I0(mmcm_lock_count_reg__0[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mmcm_lock_count[1]_i_1 
       (.I0(mmcm_lock_count_reg__0[0]),
        .I1(mmcm_lock_count_reg__0[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \mmcm_lock_count[2]_i_1 
       (.I0(mmcm_lock_count_reg__0[1]),
        .I1(mmcm_lock_count_reg__0[0]),
        .I2(mmcm_lock_count_reg__0[2]),
        .O(\mmcm_lock_count[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \mmcm_lock_count[3]_i_1 
       (.I0(mmcm_lock_count_reg__0[2]),
        .I1(mmcm_lock_count_reg__0[0]),
        .I2(mmcm_lock_count_reg__0[1]),
        .I3(mmcm_lock_count_reg__0[3]),
        .O(\mmcm_lock_count[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \mmcm_lock_count[4]_i_1 
       (.I0(mmcm_lock_count_reg__0[3]),
        .I1(mmcm_lock_count_reg__0[1]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[2]),
        .I4(mmcm_lock_count_reg__0[4]),
        .O(\mmcm_lock_count[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \mmcm_lock_count[5]_i_1 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[2]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[1]),
        .I4(mmcm_lock_count_reg__0[3]),
        .I5(mmcm_lock_count_reg__0[5]),
        .O(\mmcm_lock_count[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \mmcm_lock_count[6]_i_1 
       (.I0(\mmcm_lock_count[9]_i_4_n_0 ),
        .I1(mmcm_lock_count_reg__0[6]),
        .O(\mmcm_lock_count[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    \mmcm_lock_count[7]_i_1 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .O(\mmcm_lock_count[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'hDF20)) 
    \mmcm_lock_count[8]_i_1 
       (.I0(mmcm_lock_count_reg__0[7]),
        .I1(\mmcm_lock_count[9]_i_4_n_0 ),
        .I2(mmcm_lock_count_reg__0[6]),
        .I3(mmcm_lock_count_reg__0[8]),
        .O(\mmcm_lock_count[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h000000DF)) 
    \mmcm_lock_count[9]_i_2 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .I3(mmcm_lock_count_reg__0[8]),
        .I4(mmcm_lock_count_reg__0[9]),
        .O(\mmcm_lock_count[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \mmcm_lock_count[9]_i_3 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .I3(mmcm_lock_count_reg__0[8]),
        .I4(mmcm_lock_count_reg__0[9]),
        .O(p_0_in__0[9]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \mmcm_lock_count[9]_i_4 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[2]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[1]),
        .I4(mmcm_lock_count_reg__0[3]),
        .I5(mmcm_lock_count_reg__0[5]),
        .O(\mmcm_lock_count[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[0] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2_n_0 ),
        .D(p_0_in__0[0]),
        .Q(mmcm_lock_count_reg__0[0]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[1] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2_n_0 ),
        .D(p_0_in__0[1]),
        .Q(mmcm_lock_count_reg__0[1]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[2] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2_n_0 ),
        .D(\mmcm_lock_count[2]_i_1_n_0 ),
        .Q(mmcm_lock_count_reg__0[2]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[3] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2_n_0 ),
        .D(\mmcm_lock_count[3]_i_1_n_0 ),
        .Q(mmcm_lock_count_reg__0[3]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[4] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2_n_0 ),
        .D(\mmcm_lock_count[4]_i_1_n_0 ),
        .Q(mmcm_lock_count_reg__0[4]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[5] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2_n_0 ),
        .D(\mmcm_lock_count[5]_i_1_n_0 ),
        .Q(mmcm_lock_count_reg__0[5]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[6] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2_n_0 ),
        .D(\mmcm_lock_count[6]_i_1_n_0 ),
        .Q(mmcm_lock_count_reg__0[6]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[7] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2_n_0 ),
        .D(\mmcm_lock_count[7]_i_1_n_0 ),
        .Q(mmcm_lock_count_reg__0[7]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[8] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2_n_0 ),
        .D(\mmcm_lock_count[8]_i_1_n_0 ),
        .Q(mmcm_lock_count_reg__0[8]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[9] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2_n_0 ),
        .D(p_0_in__0[9]),
        .Q(mmcm_lock_count_reg__0[9]),
        .R(sync_mmcm_lock_reclocked_n_0));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    mmcm_lock_reclocked_i_2
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .O(mmcm_lock_reclocked_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mmcm_lock_reclocked_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync_mmcm_lock_reclocked_n_1),
        .Q(mmcm_lock_reclocked),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEFFFEFFF00000010)) 
    pll_reset_asserted_i_1
       (.I0(tx_state[3]),
        .I1(tx_state[2]),
        .I2(tx_state[0]),
        .I3(tx_state[1]),
        .I4(gt0_qpllrefclklost_in),
        .I5(pll_reset_asserted_reg_n_0),
        .O(pll_reset_asserted_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pll_reset_asserted_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(pll_reset_asserted_i_1_n_0),
        .Q(pll_reset_asserted_reg_n_0),
        .R(soft_reset_tx_in));
  FDRE #(
    .INIT(1'b0)) 
    reset_time_out_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync_qplllock_n_0),
        .Q(reset_time_out),
        .R(soft_reset_tx_in));
  LUT5 #(
    .INIT(32'hFFFB0002)) 
    run_phase_alignment_int_i_1
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[2]),
        .I3(tx_state[1]),
        .I4(data_in),
        .O(run_phase_alignment_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(run_phase_alignment_int_i_1_n_0),
        .Q(data_in),
        .R(soft_reset_tx_in));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_s3_reg
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(run_phase_alignment_int_s2),
        .Q(run_phase_alignment_int_s3),
        .R(1'b0));
  gtx3g_bert_0_gtx3g_sync_block_16 sync_TXRESETDONE
       (.data_out(txresetdone_s2),
        .gt0_txresetdone_out(gt0_txresetdone_out),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_17 sync_mmcm_lock_reclocked
       (.Q(mmcm_lock_count_reg__0[9:8]),
        .SR(sync_mmcm_lock_reclocked_n_0),
        .\mmcm_lock_count_reg[6] (mmcm_lock_reclocked_i_2_n_0),
        .mmcm_lock_reclocked(mmcm_lock_reclocked),
        .mmcm_lock_reclocked_reg(sync_mmcm_lock_reclocked_n_1),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_18 sync_qplllock
       (.E(sync_qplllock_n_1),
        .\FSM_sequential_tx_state_reg[0] (\FSM_sequential_tx_state[3]_i_4_n_0 ),
        .\FSM_sequential_tx_state_reg[1] (\FSM_sequential_tx_state_reg[3]_i_3_n_0 ),
        .gt0_qplllock_in(gt0_qplllock_in),
        .gt0_tx_phalignment_done_i(gt0_tx_phalignment_done_i),
        .init_wait_done_reg(init_wait_done_reg_n_0),
        .mmcm_lock_reclocked(mmcm_lock_reclocked),
        .out(tx_state),
        .pll_reset_asserted_reg(pll_reset_asserted_reg_n_0),
        .reset_time_out(reset_time_out),
        .reset_time_out_reg(sync_qplllock_n_0),
        .sysclk_in(sysclk_in),
        .time_out_2ms_reg(time_out_2ms_reg_n_0),
        .time_out_wait_bypass_s3(time_out_wait_bypass_s3),
        .txresetdone_s3(txresetdone_s3),
        .\wait_time_cnt_reg[12] (\FSM_sequential_tx_state[3]_i_12_n_0 ),
        .\wait_time_cnt_reg[1] (\FSM_sequential_tx_state[3]_i_13_n_0 ),
        .\wait_time_cnt_reg[6] (\FSM_sequential_tx_state[3]_i_14_n_0 ));
  gtx3g_bert_0_gtx3g_sync_block_19 sync_run_phase_alignment_int
       (.data_in(data_in),
        .data_out(run_phase_alignment_int_s2),
        .gt0_txusrclk_in(gt0_txusrclk_in));
  gtx3g_bert_0_gtx3g_sync_block_20 sync_time_out_wait_bypass
       (.data_in(time_out_wait_bypass_reg_n_0),
        .data_out(time_out_wait_bypass_s2),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_21 sync_tx_fsm_reset_done_int
       (.data_out(tx_fsm_reset_done_int_s2),
        .gt0_tx_fsm_reset_done_out(gt0_tx_fsm_reset_done_out),
        .gt0_txusrclk_in(gt0_txusrclk_in));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'h00AE)) 
    time_out_2ms_i_1__1
       (.I0(time_out_2ms_reg_n_0),
        .I1(time_out_2ms_i_2_n_0),
        .I2(\time_out_counter[0]_i_3__1_n_0 ),
        .I3(reset_time_out),
        .O(time_out_2ms_i_1__1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    time_out_2ms_i_2
       (.I0(time_out_counter_reg[16]),
        .I1(time_out_counter_reg[17]),
        .I2(time_out_counter_reg[9]),
        .I3(time_out_counter_reg[11]),
        .I4(time_out_counter_reg[4]),
        .I5(\time_out_counter[0]_i_4_n_0 ),
        .O(time_out_2ms_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_2ms_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_2ms_i_1__1_n_0),
        .Q(time_out_2ms_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000AAAAEAAA)) 
    time_out_500us_i_1
       (.I0(time_out_500us_reg_n_0),
        .I1(time_out_500us_i_2_n_0),
        .I2(time_out_counter_reg[4]),
        .I3(time_out_counter_reg[9]),
        .I4(\time_out_counter[0]_i_3__1_n_0 ),
        .I5(reset_time_out),
        .O(time_out_500us_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    time_out_500us_i_2
       (.I0(time_out_counter_reg[14]),
        .I1(time_out_counter_reg[15]),
        .I2(time_out_counter_reg[10]),
        .I3(time_out_counter_reg[11]),
        .I4(time_out_counter_reg[17]),
        .I5(time_out_counter_reg[16]),
        .O(time_out_500us_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_500us_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_500us_i_1_n_0),
        .Q(time_out_500us_reg_n_0),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \time_out_counter[0]_i_10 
       (.I0(time_out_counter_reg[7]),
        .I1(time_out_counter_reg[5]),
        .I2(time_out_counter_reg[8]),
        .I3(time_out_counter_reg[12]),
        .O(\time_out_counter[0]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \time_out_counter[0]_i_11 
       (.I0(time_out_counter_reg[1]),
        .I1(time_out_counter_reg[0]),
        .I2(time_out_counter_reg[3]),
        .I3(time_out_counter_reg[2]),
        .O(\time_out_counter[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFBFFFF)) 
    \time_out_counter[0]_i_1__1 
       (.I0(\time_out_counter[0]_i_3__1_n_0 ),
        .I1(time_out_counter_reg[11]),
        .I2(\time_out_counter[0]_i_4_n_0 ),
        .I3(time_out_counter_reg[9]),
        .I4(\time_out_counter[0]_i_5__1_n_0 ),
        .I5(time_out_counter_reg[4]),
        .O(time_out_counter));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \time_out_counter[0]_i_3__1 
       (.I0(time_out_counter_reg[6]),
        .I1(time_out_counter_reg[13]),
        .I2(\time_out_counter[0]_i_10_n_0 ),
        .I3(\time_out_counter[0]_i_11_n_0 ),
        .O(\time_out_counter[0]_i_3__1_n_0 ));
  LUT3 #(
    .INIT(8'hEF)) 
    \time_out_counter[0]_i_4 
       (.I0(time_out_counter_reg[15]),
        .I1(time_out_counter_reg[14]),
        .I2(time_out_counter_reg[10]),
        .O(\time_out_counter[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \time_out_counter[0]_i_5__1 
       (.I0(time_out_counter_reg[16]),
        .I1(time_out_counter_reg[17]),
        .O(\time_out_counter[0]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_6 
       (.I0(time_out_counter_reg[3]),
        .O(\time_out_counter[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_7 
       (.I0(time_out_counter_reg[2]),
        .O(\time_out_counter[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_8 
       (.I0(time_out_counter_reg[1]),
        .O(\time_out_counter[0]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \time_out_counter[0]_i_9 
       (.I0(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_2 
       (.I0(time_out_counter_reg[15]),
        .O(\time_out_counter[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_3 
       (.I0(time_out_counter_reg[14]),
        .O(\time_out_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_4 
       (.I0(time_out_counter_reg[13]),
        .O(\time_out_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_5 
       (.I0(time_out_counter_reg[12]),
        .O(\time_out_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[16]_i_2 
       (.I0(time_out_counter_reg[17]),
        .O(\time_out_counter[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[16]_i_3 
       (.I0(time_out_counter_reg[16]),
        .O(\time_out_counter[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_2 
       (.I0(time_out_counter_reg[7]),
        .O(\time_out_counter[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_3 
       (.I0(time_out_counter_reg[6]),
        .O(\time_out_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_4 
       (.I0(time_out_counter_reg[5]),
        .O(\time_out_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_5 
       (.I0(time_out_counter_reg[4]),
        .O(\time_out_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_2 
       (.I0(time_out_counter_reg[11]),
        .O(\time_out_counter[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_3 
       (.I0(time_out_counter_reg[10]),
        .O(\time_out_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_4 
       (.I0(time_out_counter_reg[9]),
        .O(\time_out_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_5 
       (.I0(time_out_counter_reg[8]),
        .O(\time_out_counter[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[0] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_7 ),
        .Q(time_out_counter_reg[0]),
        .R(reset_time_out));
  CARRY4 \time_out_counter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\time_out_counter_reg[0]_i_2_n_0 ,\time_out_counter_reg[0]_i_2_n_1 ,\time_out_counter_reg[0]_i_2_n_2 ,\time_out_counter_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\time_out_counter_reg[0]_i_2_n_4 ,\time_out_counter_reg[0]_i_2_n_5 ,\time_out_counter_reg[0]_i_2_n_6 ,\time_out_counter_reg[0]_i_2_n_7 }),
        .S({\time_out_counter[0]_i_6_n_0 ,\time_out_counter[0]_i_7_n_0 ,\time_out_counter[0]_i_8_n_0 ,\time_out_counter[0]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[10] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_5 ),
        .Q(time_out_counter_reg[10]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[11] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_4 ),
        .Q(time_out_counter_reg[11]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[12] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_7 ),
        .Q(time_out_counter_reg[12]),
        .R(reset_time_out));
  CARRY4 \time_out_counter_reg[12]_i_1 
       (.CI(\time_out_counter_reg[8]_i_1_n_0 ),
        .CO({\time_out_counter_reg[12]_i_1_n_0 ,\time_out_counter_reg[12]_i_1_n_1 ,\time_out_counter_reg[12]_i_1_n_2 ,\time_out_counter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[12]_i_1_n_4 ,\time_out_counter_reg[12]_i_1_n_5 ,\time_out_counter_reg[12]_i_1_n_6 ,\time_out_counter_reg[12]_i_1_n_7 }),
        .S({\time_out_counter[12]_i_2_n_0 ,\time_out_counter[12]_i_3_n_0 ,\time_out_counter[12]_i_4_n_0 ,\time_out_counter[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[13] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_6 ),
        .Q(time_out_counter_reg[13]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[14] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_5 ),
        .Q(time_out_counter_reg[14]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[15] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_4 ),
        .Q(time_out_counter_reg[15]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[16] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1_n_7 ),
        .Q(time_out_counter_reg[16]),
        .R(reset_time_out));
  CARRY4 \time_out_counter_reg[16]_i_1 
       (.CI(\time_out_counter_reg[12]_i_1_n_0 ),
        .CO({\NLW_time_out_counter_reg[16]_i_1_CO_UNCONNECTED [3:1],\time_out_counter_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_time_out_counter_reg[16]_i_1_O_UNCONNECTED [3:2],\time_out_counter_reg[16]_i_1_n_6 ,\time_out_counter_reg[16]_i_1_n_7 }),
        .S({1'b0,1'b0,\time_out_counter[16]_i_2_n_0 ,\time_out_counter[16]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[17] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1_n_6 ),
        .Q(time_out_counter_reg[17]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[1] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_6 ),
        .Q(time_out_counter_reg[1]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[2] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_5 ),
        .Q(time_out_counter_reg[2]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[3] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_4 ),
        .Q(time_out_counter_reg[3]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[4] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_7 ),
        .Q(time_out_counter_reg[4]),
        .R(reset_time_out));
  CARRY4 \time_out_counter_reg[4]_i_1 
       (.CI(\time_out_counter_reg[0]_i_2_n_0 ),
        .CO({\time_out_counter_reg[4]_i_1_n_0 ,\time_out_counter_reg[4]_i_1_n_1 ,\time_out_counter_reg[4]_i_1_n_2 ,\time_out_counter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[4]_i_1_n_4 ,\time_out_counter_reg[4]_i_1_n_5 ,\time_out_counter_reg[4]_i_1_n_6 ,\time_out_counter_reg[4]_i_1_n_7 }),
        .S({\time_out_counter[4]_i_2_n_0 ,\time_out_counter[4]_i_3_n_0 ,\time_out_counter[4]_i_4_n_0 ,\time_out_counter[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[5] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_6 ),
        .Q(time_out_counter_reg[5]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[6] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_5 ),
        .Q(time_out_counter_reg[6]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[7] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_4 ),
        .Q(time_out_counter_reg[7]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[8] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_7 ),
        .Q(time_out_counter_reg[8]),
        .R(reset_time_out));
  CARRY4 \time_out_counter_reg[8]_i_1 
       (.CI(\time_out_counter_reg[4]_i_1_n_0 ),
        .CO({\time_out_counter_reg[8]_i_1_n_0 ,\time_out_counter_reg[8]_i_1_n_1 ,\time_out_counter_reg[8]_i_1_n_2 ,\time_out_counter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[8]_i_1_n_4 ,\time_out_counter_reg[8]_i_1_n_5 ,\time_out_counter_reg[8]_i_1_n_6 ,\time_out_counter_reg[8]_i_1_n_7 }),
        .S({\time_out_counter[8]_i_2_n_0 ,\time_out_counter[8]_i_3_n_0 ,\time_out_counter[8]_i_4_n_0 ,\time_out_counter[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[9] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_6 ),
        .Q(time_out_counter_reg[9]),
        .R(reset_time_out));
  LUT4 #(
    .INIT(16'hAB00)) 
    time_out_wait_bypass_i_1
       (.I0(time_out_wait_bypass_reg_n_0),
        .I1(\wait_bypass_count[0]_i_4_n_0 ),
        .I2(tx_fsm_reset_done_int_s3),
        .I3(run_phase_alignment_int_s3),
        .O(time_out_wait_bypass_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_reg
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(time_out_wait_bypass_i_1_n_0),
        .Q(time_out_wait_bypass_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_s3_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_wait_bypass_s2),
        .Q(time_out_wait_bypass_s3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000AABAAAAA)) 
    time_tlock_max_i_1__1
       (.I0(time_tlock_max_reg_n_0),
        .I1(time_tlock_max_i_2__1_n_0),
        .I2(time_out_counter_reg[4]),
        .I3(\time_out_counter[0]_i_4_n_0 ),
        .I4(time_tlock_max_i_3__1_n_0),
        .I5(reset_time_out),
        .O(time_tlock_max_i_1__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    time_tlock_max_i_2__1
       (.I0(time_out_counter_reg[2]),
        .I1(time_out_counter_reg[3]),
        .I2(time_out_counter_reg[0]),
        .I3(time_out_counter_reg[1]),
        .I4(\time_out_counter[0]_i_10_n_0 ),
        .O(time_tlock_max_i_2__1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    time_tlock_max_i_3__1
       (.I0(time_out_counter_reg[13]),
        .I1(time_out_counter_reg[11]),
        .I2(time_out_counter_reg[9]),
        .I3(time_out_counter_reg[6]),
        .I4(time_out_counter_reg[17]),
        .I5(time_out_counter_reg[16]),
        .O(time_tlock_max_i_3__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_tlock_max_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_tlock_max_i_1__1_n_0),
        .Q(time_tlock_max_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFF0008)) 
    tx_fsm_reset_done_int_i_1
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[2]),
        .I3(tx_state[1]),
        .I4(gt0_tx_fsm_reset_done_out),
        .O(tx_fsm_reset_done_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_fsm_reset_done_int_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(tx_fsm_reset_done_int_i_1_n_0),
        .Q(gt0_tx_fsm_reset_done_out),
        .R(soft_reset_tx_in));
  FDRE #(
    .INIT(1'b0)) 
    tx_fsm_reset_done_int_s3_reg
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(tx_fsm_reset_done_int_s2),
        .Q(tx_fsm_reset_done_int_s3),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txresetdone_s3_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(txresetdone_s2),
        .Q(txresetdone_s3),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_1 
       (.I0(run_phase_alignment_int_s3),
        .O(clear));
  LUT5 #(
    .INIT(32'hDFFFFFFF)) 
    \wait_bypass_count[0]_i_10 
       (.I0(wait_bypass_count_reg[0]),
        .I1(wait_bypass_count_reg[15]),
        .I2(wait_bypass_count_reg[16]),
        .I3(wait_bypass_count_reg[2]),
        .I4(wait_bypass_count_reg[1]),
        .O(\wait_bypass_count[0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \wait_bypass_count[0]_i_11 
       (.I0(wait_bypass_count_reg[12]),
        .I1(wait_bypass_count_reg[11]),
        .I2(wait_bypass_count_reg[14]),
        .I3(wait_bypass_count_reg[13]),
        .O(\wait_bypass_count[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \wait_bypass_count[0]_i_12 
       (.I0(wait_bypass_count_reg[8]),
        .I1(wait_bypass_count_reg[7]),
        .I2(wait_bypass_count_reg[10]),
        .I3(wait_bypass_count_reg[9]),
        .O(\wait_bypass_count[0]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \wait_bypass_count[0]_i_2 
       (.I0(\wait_bypass_count[0]_i_4_n_0 ),
        .I1(tx_fsm_reset_done_int_s3),
        .O(\wait_bypass_count[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_bypass_count[0]_i_4 
       (.I0(\wait_bypass_count[0]_i_9_n_0 ),
        .I1(\wait_bypass_count[0]_i_10_n_0 ),
        .I2(\wait_bypass_count[0]_i_11_n_0 ),
        .I3(\wait_bypass_count[0]_i_12_n_0 ),
        .O(\wait_bypass_count[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_5 
       (.I0(wait_bypass_count_reg[3]),
        .O(\wait_bypass_count[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_6 
       (.I0(wait_bypass_count_reg[2]),
        .O(\wait_bypass_count[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_7 
       (.I0(wait_bypass_count_reg[1]),
        .O(\wait_bypass_count[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_8 
       (.I0(wait_bypass_count_reg[0]),
        .O(\wait_bypass_count[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \wait_bypass_count[0]_i_9 
       (.I0(wait_bypass_count_reg[4]),
        .I1(wait_bypass_count_reg[3]),
        .I2(wait_bypass_count_reg[6]),
        .I3(wait_bypass_count_reg[5]),
        .O(\wait_bypass_count[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[12]_i_2 
       (.I0(wait_bypass_count_reg[15]),
        .O(\wait_bypass_count[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[12]_i_3 
       (.I0(wait_bypass_count_reg[14]),
        .O(\wait_bypass_count[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[12]_i_4 
       (.I0(wait_bypass_count_reg[13]),
        .O(\wait_bypass_count[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[12]_i_5 
       (.I0(wait_bypass_count_reg[12]),
        .O(\wait_bypass_count[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[16]_i_2 
       (.I0(wait_bypass_count_reg[16]),
        .O(\wait_bypass_count[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_2 
       (.I0(wait_bypass_count_reg[7]),
        .O(\wait_bypass_count[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_3 
       (.I0(wait_bypass_count_reg[6]),
        .O(\wait_bypass_count[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_4 
       (.I0(wait_bypass_count_reg[5]),
        .O(\wait_bypass_count[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_5 
       (.I0(wait_bypass_count_reg[4]),
        .O(\wait_bypass_count[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_2 
       (.I0(wait_bypass_count_reg[11]),
        .O(\wait_bypass_count[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_3 
       (.I0(wait_bypass_count_reg[10]),
        .O(\wait_bypass_count[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_4 
       (.I0(wait_bypass_count_reg[9]),
        .O(\wait_bypass_count[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_5 
       (.I0(wait_bypass_count_reg[8]),
        .O(\wait_bypass_count[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[0] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3_n_7 ),
        .Q(wait_bypass_count_reg[0]),
        .R(clear));
  CARRY4 \wait_bypass_count_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\wait_bypass_count_reg[0]_i_3_n_0 ,\wait_bypass_count_reg[0]_i_3_n_1 ,\wait_bypass_count_reg[0]_i_3_n_2 ,\wait_bypass_count_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\wait_bypass_count_reg[0]_i_3_n_4 ,\wait_bypass_count_reg[0]_i_3_n_5 ,\wait_bypass_count_reg[0]_i_3_n_6 ,\wait_bypass_count_reg[0]_i_3_n_7 }),
        .S({\wait_bypass_count[0]_i_5_n_0 ,\wait_bypass_count[0]_i_6_n_0 ,\wait_bypass_count[0]_i_7_n_0 ,\wait_bypass_count[0]_i_8_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[10] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1_n_5 ),
        .Q(wait_bypass_count_reg[10]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[11] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1_n_4 ),
        .Q(wait_bypass_count_reg[11]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[12] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1_n_7 ),
        .Q(wait_bypass_count_reg[12]),
        .R(clear));
  CARRY4 \wait_bypass_count_reg[12]_i_1 
       (.CI(\wait_bypass_count_reg[8]_i_1_n_0 ),
        .CO({\wait_bypass_count_reg[12]_i_1_n_0 ,\wait_bypass_count_reg[12]_i_1_n_1 ,\wait_bypass_count_reg[12]_i_1_n_2 ,\wait_bypass_count_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[12]_i_1_n_4 ,\wait_bypass_count_reg[12]_i_1_n_5 ,\wait_bypass_count_reg[12]_i_1_n_6 ,\wait_bypass_count_reg[12]_i_1_n_7 }),
        .S({\wait_bypass_count[12]_i_2_n_0 ,\wait_bypass_count[12]_i_3_n_0 ,\wait_bypass_count[12]_i_4_n_0 ,\wait_bypass_count[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[13] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1_n_6 ),
        .Q(wait_bypass_count_reg[13]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[14] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1_n_5 ),
        .Q(wait_bypass_count_reg[14]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[15] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1_n_4 ),
        .Q(wait_bypass_count_reg[15]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[16] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[16]_i_1_n_7 ),
        .Q(wait_bypass_count_reg[16]),
        .R(clear));
  CARRY4 \wait_bypass_count_reg[16]_i_1 
       (.CI(\wait_bypass_count_reg[12]_i_1_n_0 ),
        .CO(\NLW_wait_bypass_count_reg[16]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_wait_bypass_count_reg[16]_i_1_O_UNCONNECTED [3:1],\wait_bypass_count_reg[16]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,\wait_bypass_count[16]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[1] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3_n_6 ),
        .Q(wait_bypass_count_reg[1]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[2] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3_n_5 ),
        .Q(wait_bypass_count_reg[2]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[3] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3_n_4 ),
        .Q(wait_bypass_count_reg[3]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[4] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1_n_7 ),
        .Q(wait_bypass_count_reg[4]),
        .R(clear));
  CARRY4 \wait_bypass_count_reg[4]_i_1 
       (.CI(\wait_bypass_count_reg[0]_i_3_n_0 ),
        .CO({\wait_bypass_count_reg[4]_i_1_n_0 ,\wait_bypass_count_reg[4]_i_1_n_1 ,\wait_bypass_count_reg[4]_i_1_n_2 ,\wait_bypass_count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[4]_i_1_n_4 ,\wait_bypass_count_reg[4]_i_1_n_5 ,\wait_bypass_count_reg[4]_i_1_n_6 ,\wait_bypass_count_reg[4]_i_1_n_7 }),
        .S({\wait_bypass_count[4]_i_2_n_0 ,\wait_bypass_count[4]_i_3_n_0 ,\wait_bypass_count[4]_i_4_n_0 ,\wait_bypass_count[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[5] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1_n_6 ),
        .Q(wait_bypass_count_reg[5]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[6] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1_n_5 ),
        .Q(wait_bypass_count_reg[6]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[7] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1_n_4 ),
        .Q(wait_bypass_count_reg[7]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[8] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1_n_7 ),
        .Q(wait_bypass_count_reg[8]),
        .R(clear));
  CARRY4 \wait_bypass_count_reg[8]_i_1 
       (.CI(\wait_bypass_count_reg[4]_i_1_n_0 ),
        .CO({\wait_bypass_count_reg[8]_i_1_n_0 ,\wait_bypass_count_reg[8]_i_1_n_1 ,\wait_bypass_count_reg[8]_i_1_n_2 ,\wait_bypass_count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[8]_i_1_n_4 ,\wait_bypass_count_reg[8]_i_1_n_5 ,\wait_bypass_count_reg[8]_i_1_n_6 ,\wait_bypass_count_reg[8]_i_1_n_7 }),
        .S({\wait_bypass_count[8]_i_2_n_0 ,\wait_bypass_count[8]_i_3_n_0 ,\wait_bypass_count[8]_i_4_n_0 ,\wait_bypass_count[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[9] 
       (.C(gt0_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1_n_6 ),
        .Q(wait_bypass_count_reg[9]),
        .R(clear));
  LUT4 #(
    .INIT(16'h040C)) 
    \wait_time_cnt[0]_i_1 
       (.I0(tx_state[2]),
        .I1(tx_state[0]),
        .I2(tx_state[3]),
        .I3(tx_state[1]),
        .O(\wait_time_cnt[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_2 
       (.I0(wait_time_cnt_reg[1]),
        .I1(wait_time_cnt_reg[0]),
        .I2(wait_time_cnt_reg[3]),
        .I3(wait_time_cnt_reg[2]),
        .I4(\wait_time_cnt[0]_i_4_n_0 ),
        .I5(\wait_time_cnt[0]_i_5_n_0 ),
        .O(sel));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_4 
       (.I0(wait_time_cnt_reg[14]),
        .I1(wait_time_cnt_reg[15]),
        .I2(wait_time_cnt_reg[12]),
        .I3(wait_time_cnt_reg[13]),
        .I4(wait_time_cnt_reg[11]),
        .I5(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_5 
       (.I0(wait_time_cnt_reg[8]),
        .I1(wait_time_cnt_reg[9]),
        .I2(wait_time_cnt_reg[6]),
        .I3(wait_time_cnt_reg[7]),
        .I4(wait_time_cnt_reg[5]),
        .I5(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_6 
       (.I0(wait_time_cnt_reg[3]),
        .O(\wait_time_cnt[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_7 
       (.I0(wait_time_cnt_reg[2]),
        .O(\wait_time_cnt[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_8 
       (.I0(wait_time_cnt_reg[1]),
        .O(\wait_time_cnt[0]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_9 
       (.I0(wait_time_cnt_reg[0]),
        .O(\wait_time_cnt[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_2 
       (.I0(wait_time_cnt_reg[15]),
        .O(\wait_time_cnt[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_3 
       (.I0(wait_time_cnt_reg[14]),
        .O(\wait_time_cnt[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_4 
       (.I0(wait_time_cnt_reg[13]),
        .O(\wait_time_cnt[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_5 
       (.I0(wait_time_cnt_reg[12]),
        .O(\wait_time_cnt[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_2 
       (.I0(wait_time_cnt_reg[7]),
        .O(\wait_time_cnt[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_3 
       (.I0(wait_time_cnt_reg[6]),
        .O(\wait_time_cnt[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_4 
       (.I0(wait_time_cnt_reg[5]),
        .O(\wait_time_cnt[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_5 
       (.I0(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_2 
       (.I0(wait_time_cnt_reg[11]),
        .O(\wait_time_cnt[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_3 
       (.I0(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_4 
       (.I0(wait_time_cnt_reg[9]),
        .O(\wait_time_cnt[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_5 
       (.I0(wait_time_cnt_reg[8]),
        .O(\wait_time_cnt[8]_i_5_n_0 ));
  FDRE \wait_time_cnt_reg[0] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[0]_i_3_n_7 ),
        .Q(wait_time_cnt_reg[0]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  CARRY4 \wait_time_cnt_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\wait_time_cnt_reg[0]_i_3_n_0 ,\wait_time_cnt_reg[0]_i_3_n_1 ,\wait_time_cnt_reg[0]_i_3_n_2 ,\wait_time_cnt_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[0]_i_3_n_4 ,\wait_time_cnt_reg[0]_i_3_n_5 ,\wait_time_cnt_reg[0]_i_3_n_6 ,\wait_time_cnt_reg[0]_i_3_n_7 }),
        .S({\wait_time_cnt[0]_i_6_n_0 ,\wait_time_cnt[0]_i_7_n_0 ,\wait_time_cnt[0]_i_8_n_0 ,\wait_time_cnt[0]_i_9_n_0 }));
  FDRE \wait_time_cnt_reg[10] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[8]_i_1_n_5 ),
        .Q(wait_time_cnt_reg[10]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE \wait_time_cnt_reg[11] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[8]_i_1_n_4 ),
        .Q(wait_time_cnt_reg[11]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE \wait_time_cnt_reg[12] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[12]_i_1_n_7 ),
        .Q(wait_time_cnt_reg[12]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  CARRY4 \wait_time_cnt_reg[12]_i_1 
       (.CI(\wait_time_cnt_reg[8]_i_1_n_0 ),
        .CO({\NLW_wait_time_cnt_reg[12]_i_1_CO_UNCONNECTED [3],\wait_time_cnt_reg[12]_i_1_n_1 ,\wait_time_cnt_reg[12]_i_1_n_2 ,\wait_time_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[12]_i_1_n_4 ,\wait_time_cnt_reg[12]_i_1_n_5 ,\wait_time_cnt_reg[12]_i_1_n_6 ,\wait_time_cnt_reg[12]_i_1_n_7 }),
        .S({\wait_time_cnt[12]_i_2_n_0 ,\wait_time_cnt[12]_i_3_n_0 ,\wait_time_cnt[12]_i_4_n_0 ,\wait_time_cnt[12]_i_5_n_0 }));
  FDRE \wait_time_cnt_reg[13] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[12]_i_1_n_6 ),
        .Q(wait_time_cnt_reg[13]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE \wait_time_cnt_reg[14] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[12]_i_1_n_5 ),
        .Q(wait_time_cnt_reg[14]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE \wait_time_cnt_reg[15] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[12]_i_1_n_4 ),
        .Q(wait_time_cnt_reg[15]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE \wait_time_cnt_reg[1] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[0]_i_3_n_6 ),
        .Q(wait_time_cnt_reg[1]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE \wait_time_cnt_reg[2] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[0]_i_3_n_5 ),
        .Q(wait_time_cnt_reg[2]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDSE \wait_time_cnt_reg[3] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[0]_i_3_n_4 ),
        .Q(wait_time_cnt_reg[3]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE \wait_time_cnt_reg[4] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[4]_i_1_n_7 ),
        .Q(wait_time_cnt_reg[4]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  CARRY4 \wait_time_cnt_reg[4]_i_1 
       (.CI(\wait_time_cnt_reg[0]_i_3_n_0 ),
        .CO({\wait_time_cnt_reg[4]_i_1_n_0 ,\wait_time_cnt_reg[4]_i_1_n_1 ,\wait_time_cnt_reg[4]_i_1_n_2 ,\wait_time_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[4]_i_1_n_4 ,\wait_time_cnt_reg[4]_i_1_n_5 ,\wait_time_cnt_reg[4]_i_1_n_6 ,\wait_time_cnt_reg[4]_i_1_n_7 }),
        .S({\wait_time_cnt[4]_i_2_n_0 ,\wait_time_cnt[4]_i_3_n_0 ,\wait_time_cnt[4]_i_4_n_0 ,\wait_time_cnt[4]_i_5_n_0 }));
  FDSE \wait_time_cnt_reg[5] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[4]_i_1_n_6 ),
        .Q(wait_time_cnt_reg[5]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
  FDSE \wait_time_cnt_reg[6] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[4]_i_1_n_5 ),
        .Q(wait_time_cnt_reg[6]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
  FDSE \wait_time_cnt_reg[7] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[4]_i_1_n_4 ),
        .Q(wait_time_cnt_reg[7]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
  FDSE \wait_time_cnt_reg[8] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[8]_i_1_n_7 ),
        .Q(wait_time_cnt_reg[8]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
  CARRY4 \wait_time_cnt_reg[8]_i_1 
       (.CI(\wait_time_cnt_reg[4]_i_1_n_0 ),
        .CO({\wait_time_cnt_reg[8]_i_1_n_0 ,\wait_time_cnt_reg[8]_i_1_n_1 ,\wait_time_cnt_reg[8]_i_1_n_2 ,\wait_time_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[8]_i_1_n_4 ,\wait_time_cnt_reg[8]_i_1_n_5 ,\wait_time_cnt_reg[8]_i_1_n_6 ,\wait_time_cnt_reg[8]_i_1_n_7 }),
        .S({\wait_time_cnt[8]_i_2_n_0 ,\wait_time_cnt[8]_i_3_n_0 ,\wait_time_cnt[8]_i_4_n_0 ,\wait_time_cnt[8]_i_5_n_0 }));
  FDSE \wait_time_cnt_reg[9] 
       (.C(sysclk_in),
        .CE(sel),
        .D(\wait_time_cnt_reg[8]_i_1_n_6 ),
        .Q(wait_time_cnt_reg[9]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
endmodule

(* ORIG_REF_NAME = "gtx3g_TX_STARTUP_FSM" *) 
module gtx3g_bert_0_gtx3g_TX_STARTUP_FSM_2
   (gt1_gttxreset_in,
    gt1_tx_fsm_reset_done_out,
    gt1_txuserrdy_in,
    data_in,
    gt1_rst_tx_phalignment_i,
    sysclk_in,
    gt1_txusrclk_in,
    soft_reset_tx_in,
    gt0_qpllrefclklost_in,
    gt1_txresetdone_out,
    gt0_qplllock_in,
    gt0_tx_phalignment_done_i);
  output gt1_gttxreset_in;
  output gt1_tx_fsm_reset_done_out;
  output gt1_txuserrdy_in;
  output data_in;
  output gt1_rst_tx_phalignment_i;
  input sysclk_in;
  input gt1_txusrclk_in;
  input soft_reset_tx_in;
  input gt0_qpllrefclklost_in;
  input gt1_txresetdone_out;
  input gt0_qplllock_in;
  input gt0_tx_phalignment_done_i;

  wire \FSM_sequential_tx_state[0]_i_1__0_n_0 ;
  wire \FSM_sequential_tx_state[0]_i_2__0_n_0 ;
  wire \FSM_sequential_tx_state[1]_i_1__0_n_0 ;
  wire \FSM_sequential_tx_state[2]_i_1__0_n_0 ;
  wire \FSM_sequential_tx_state[2]_i_2__0_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_11__0_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_12__0_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_13__0_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_14__0_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_2__0_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_4__0_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_6__0_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_7__0_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_8__0_n_0 ;
  wire \FSM_sequential_tx_state_reg[3]_i_3__0_n_0 ;
  wire RESET_PHALIGNMENT_i_1__0_n_0;
  wire TXUSERRDY_i_1__0_n_0;
  wire data_in;
  wire gt0_qplllock_in;
  wire gt0_qpllrefclklost_in;
  wire gt0_tx_phalignment_done_i;
  wire gt1_gttxreset_in;
  wire gt1_rst_tx_phalignment_i;
  wire gt1_tx_fsm_reset_done_out;
  wire gt1_txresetdone_out;
  wire gt1_txuserrdy_in;
  wire gt1_txusrclk_in;
  wire gttxreset_i_i_1__0_n_0;
  wire init_wait_count;
  wire \init_wait_count[0]_i_1__0_n_0 ;
  wire \init_wait_count[6]_i_2__0_n_0 ;
  wire \init_wait_count[7]_i_3__0_n_0 ;
  wire [7:0]init_wait_count_reg__0;
  wire init_wait_done_i_1__0_n_0;
  wire init_wait_done_reg_n_0;
  wire \mmcm_lock_count[2]_i_1__0_n_0 ;
  wire \mmcm_lock_count[3]_i_1__0_n_0 ;
  wire \mmcm_lock_count[4]_i_1__0_n_0 ;
  wire \mmcm_lock_count[5]_i_1__0_n_0 ;
  wire \mmcm_lock_count[6]_i_1__0_n_0 ;
  wire \mmcm_lock_count[7]_i_1__0_n_0 ;
  wire \mmcm_lock_count[8]_i_1__0_n_0 ;
  wire \mmcm_lock_count[9]_i_2__0_n_0 ;
  wire \mmcm_lock_count[9]_i_4__0_n_0 ;
  wire [9:0]mmcm_lock_count_reg__0;
  wire mmcm_lock_reclocked;
  wire mmcm_lock_reclocked_i_2__0_n_0;
  wire [7:1]p_0_in;
  wire [9:0]p_0_in__0;
  wire pll_reset_asserted_i_1__0_n_0;
  wire pll_reset_asserted_reg_n_0;
  wire reset_time_out_reg_n_0;
  wire run_phase_alignment_int_i_1__0_n_0;
  wire run_phase_alignment_int_s2;
  wire run_phase_alignment_int_s3_reg_n_0;
  wire soft_reset_tx_in;
  wire sync_mmcm_lock_reclocked_n_0;
  wire sync_mmcm_lock_reclocked_n_1;
  wire sync_qplllock_n_0;
  wire sync_qplllock_n_1;
  wire sysclk_in;
  wire time_out_2ms_i_1__2_n_0;
  wire time_out_2ms_i_2__0_n_0;
  wire time_out_2ms_reg_n_0;
  wire time_out_500us_i_1__0_n_0;
  wire time_out_500us_i_2__0_n_0;
  wire time_out_500us_reg_n_0;
  wire time_out_counter;
  wire \time_out_counter[0]_i_10__0_n_0 ;
  wire \time_out_counter[0]_i_11__0_n_0 ;
  wire \time_out_counter[0]_i_3__2_n_0 ;
  wire \time_out_counter[0]_i_4__0_n_0 ;
  wire \time_out_counter[0]_i_5__2_n_0 ;
  wire \time_out_counter[0]_i_6__0_n_0 ;
  wire \time_out_counter[0]_i_7__0_n_0 ;
  wire \time_out_counter[0]_i_8__0_n_0 ;
  wire \time_out_counter[0]_i_9__0_n_0 ;
  wire \time_out_counter[12]_i_2__0_n_0 ;
  wire \time_out_counter[12]_i_3__0_n_0 ;
  wire \time_out_counter[12]_i_4__0_n_0 ;
  wire \time_out_counter[12]_i_5__0_n_0 ;
  wire \time_out_counter[16]_i_2__0_n_0 ;
  wire \time_out_counter[16]_i_3__0_n_0 ;
  wire \time_out_counter[4]_i_2__0_n_0 ;
  wire \time_out_counter[4]_i_3__0_n_0 ;
  wire \time_out_counter[4]_i_4__0_n_0 ;
  wire \time_out_counter[4]_i_5__0_n_0 ;
  wire \time_out_counter[8]_i_2__0_n_0 ;
  wire \time_out_counter[8]_i_3__0_n_0 ;
  wire \time_out_counter[8]_i_4__0_n_0 ;
  wire \time_out_counter[8]_i_5__0_n_0 ;
  wire [17:0]time_out_counter_reg;
  wire \time_out_counter_reg[0]_i_2__0_n_0 ;
  wire \time_out_counter_reg[0]_i_2__0_n_1 ;
  wire \time_out_counter_reg[0]_i_2__0_n_2 ;
  wire \time_out_counter_reg[0]_i_2__0_n_3 ;
  wire \time_out_counter_reg[0]_i_2__0_n_4 ;
  wire \time_out_counter_reg[0]_i_2__0_n_5 ;
  wire \time_out_counter_reg[0]_i_2__0_n_6 ;
  wire \time_out_counter_reg[0]_i_2__0_n_7 ;
  wire \time_out_counter_reg[12]_i_1__0_n_0 ;
  wire \time_out_counter_reg[12]_i_1__0_n_1 ;
  wire \time_out_counter_reg[12]_i_1__0_n_2 ;
  wire \time_out_counter_reg[12]_i_1__0_n_3 ;
  wire \time_out_counter_reg[12]_i_1__0_n_4 ;
  wire \time_out_counter_reg[12]_i_1__0_n_5 ;
  wire \time_out_counter_reg[12]_i_1__0_n_6 ;
  wire \time_out_counter_reg[12]_i_1__0_n_7 ;
  wire \time_out_counter_reg[16]_i_1__0_n_3 ;
  wire \time_out_counter_reg[16]_i_1__0_n_6 ;
  wire \time_out_counter_reg[16]_i_1__0_n_7 ;
  wire \time_out_counter_reg[4]_i_1__0_n_0 ;
  wire \time_out_counter_reg[4]_i_1__0_n_1 ;
  wire \time_out_counter_reg[4]_i_1__0_n_2 ;
  wire \time_out_counter_reg[4]_i_1__0_n_3 ;
  wire \time_out_counter_reg[4]_i_1__0_n_4 ;
  wire \time_out_counter_reg[4]_i_1__0_n_5 ;
  wire \time_out_counter_reg[4]_i_1__0_n_6 ;
  wire \time_out_counter_reg[4]_i_1__0_n_7 ;
  wire \time_out_counter_reg[8]_i_1__0_n_0 ;
  wire \time_out_counter_reg[8]_i_1__0_n_1 ;
  wire \time_out_counter_reg[8]_i_1__0_n_2 ;
  wire \time_out_counter_reg[8]_i_1__0_n_3 ;
  wire \time_out_counter_reg[8]_i_1__0_n_4 ;
  wire \time_out_counter_reg[8]_i_1__0_n_5 ;
  wire \time_out_counter_reg[8]_i_1__0_n_6 ;
  wire \time_out_counter_reg[8]_i_1__0_n_7 ;
  wire time_out_wait_bypass_i_1__0_n_0;
  wire time_out_wait_bypass_reg_n_0;
  wire time_out_wait_bypass_s2;
  wire time_out_wait_bypass_s3;
  wire time_tlock_max_i_1__2_n_0;
  wire time_tlock_max_i_2__2_n_0;
  wire time_tlock_max_i_3__2_n_0;
  wire time_tlock_max_reg_n_0;
  wire tx_fsm_reset_done_int_i_1__0_n_0;
  wire tx_fsm_reset_done_int_s2;
  wire tx_fsm_reset_done_int_s3_reg_n_0;
  (* RTL_KEEP = "yes" *) wire [3:0]tx_state;
  wire tx_state1;
  wire tx_state13_out;
  wire txresetdone_s2;
  wire txresetdone_s3;
  wire \wait_bypass_count[0]_i_10__0_n_0 ;
  wire \wait_bypass_count[0]_i_11__0_n_0 ;
  wire \wait_bypass_count[0]_i_12__0_n_0 ;
  wire \wait_bypass_count[0]_i_1__0_n_0 ;
  wire \wait_bypass_count[0]_i_2__0_n_0 ;
  wire \wait_bypass_count[0]_i_4__0_n_0 ;
  wire \wait_bypass_count[0]_i_5__0_n_0 ;
  wire \wait_bypass_count[0]_i_6__0_n_0 ;
  wire \wait_bypass_count[0]_i_7__0_n_0 ;
  wire \wait_bypass_count[0]_i_8__0_n_0 ;
  wire \wait_bypass_count[0]_i_9__0_n_0 ;
  wire \wait_bypass_count[12]_i_2__0_n_0 ;
  wire \wait_bypass_count[12]_i_3__0_n_0 ;
  wire \wait_bypass_count[12]_i_4__0_n_0 ;
  wire \wait_bypass_count[12]_i_5__0_n_0 ;
  wire \wait_bypass_count[16]_i_2__0_n_0 ;
  wire \wait_bypass_count[4]_i_2__0_n_0 ;
  wire \wait_bypass_count[4]_i_3__0_n_0 ;
  wire \wait_bypass_count[4]_i_4__0_n_0 ;
  wire \wait_bypass_count[4]_i_5__0_n_0 ;
  wire \wait_bypass_count[8]_i_2__0_n_0 ;
  wire \wait_bypass_count[8]_i_3__0_n_0 ;
  wire \wait_bypass_count[8]_i_4__0_n_0 ;
  wire \wait_bypass_count[8]_i_5__0_n_0 ;
  wire [16:0]wait_bypass_count_reg;
  wire \wait_bypass_count_reg[0]_i_3__0_n_0 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_1 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_2 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_3 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_4 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_5 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_6 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_7 ;
  wire \wait_bypass_count_reg[12]_i_1__0_n_0 ;
  wire \wait_bypass_count_reg[12]_i_1__0_n_1 ;
  wire \wait_bypass_count_reg[12]_i_1__0_n_2 ;
  wire \wait_bypass_count_reg[12]_i_1__0_n_3 ;
  wire \wait_bypass_count_reg[12]_i_1__0_n_4 ;
  wire \wait_bypass_count_reg[12]_i_1__0_n_5 ;
  wire \wait_bypass_count_reg[12]_i_1__0_n_6 ;
  wire \wait_bypass_count_reg[12]_i_1__0_n_7 ;
  wire \wait_bypass_count_reg[16]_i_1__0_n_7 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_0 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_1 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_2 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_3 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_4 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_5 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_6 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_7 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_0 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_1 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_2 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_3 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_4 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_5 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_6 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_7 ;
  wire \wait_time_cnt[0]_i_1__0_n_0 ;
  wire \wait_time_cnt[0]_i_2__0_n_0 ;
  wire \wait_time_cnt[0]_i_4__0_n_0 ;
  wire \wait_time_cnt[0]_i_5__0_n_0 ;
  wire \wait_time_cnt[0]_i_6__0_n_0 ;
  wire \wait_time_cnt[0]_i_7__0_n_0 ;
  wire \wait_time_cnt[0]_i_8__0_n_0 ;
  wire \wait_time_cnt[0]_i_9__0_n_0 ;
  wire \wait_time_cnt[12]_i_2__0_n_0 ;
  wire \wait_time_cnt[12]_i_3__0_n_0 ;
  wire \wait_time_cnt[12]_i_4__0_n_0 ;
  wire \wait_time_cnt[12]_i_5__0_n_0 ;
  wire \wait_time_cnt[4]_i_2__0_n_0 ;
  wire \wait_time_cnt[4]_i_3__0_n_0 ;
  wire \wait_time_cnt[4]_i_4__0_n_0 ;
  wire \wait_time_cnt[4]_i_5__0_n_0 ;
  wire \wait_time_cnt[8]_i_2__0_n_0 ;
  wire \wait_time_cnt[8]_i_3__0_n_0 ;
  wire \wait_time_cnt[8]_i_4__0_n_0 ;
  wire \wait_time_cnt[8]_i_5__0_n_0 ;
  wire [15:0]wait_time_cnt_reg;
  wire \wait_time_cnt_reg[0]_i_3__0_n_0 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_1 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_2 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_3 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_4 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_5 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_6 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_7 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_1 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_2 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_3 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_4 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_5 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_6 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_7 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_0 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_1 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_2 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_3 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_4 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_5 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_6 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_7 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_0 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_1 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_2 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_3 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_4 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_5 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_6 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_7 ;
  wire [3:1]\NLW_time_out_counter_reg[16]_i_1__0_CO_UNCONNECTED ;
  wire [3:2]\NLW_time_out_counter_reg[16]_i_1__0_O_UNCONNECTED ;
  wire [3:0]\NLW_wait_bypass_count_reg[16]_i_1__0_CO_UNCONNECTED ;
  wire [3:1]\NLW_wait_bypass_count_reg[16]_i_1__0_O_UNCONNECTED ;
  wire [3:3]\NLW_wait_time_cnt_reg[12]_i_1__0_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h2222220222220A0A)) 
    \FSM_sequential_tx_state[0]_i_1__0 
       (.I0(\FSM_sequential_tx_state[0]_i_2__0_n_0 ),
        .I1(tx_state[3]),
        .I2(tx_state[0]),
        .I3(time_out_2ms_reg_n_0),
        .I4(tx_state[2]),
        .I5(tx_state[1]),
        .O(\FSM_sequential_tx_state[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h3B33BBBBBBBBBBBB)) 
    \FSM_sequential_tx_state[0]_i_2__0 
       (.I0(\FSM_sequential_tx_state[2]_i_2__0_n_0 ),
        .I1(tx_state[0]),
        .I2(reset_time_out_reg_n_0),
        .I3(time_out_500us_reg_n_0),
        .I4(tx_state[1]),
        .I5(tx_state[2]),
        .O(\FSM_sequential_tx_state[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h11110444)) 
    \FSM_sequential_tx_state[1]_i_1__0 
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state13_out),
        .I3(tx_state[2]),
        .I4(tx_state[1]),
        .O(\FSM_sequential_tx_state[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \FSM_sequential_tx_state[1]_i_2__0 
       (.I0(mmcm_lock_reclocked),
        .I1(reset_time_out_reg_n_0),
        .I2(time_tlock_max_reg_n_0),
        .O(tx_state13_out));
  LUT6 #(
    .INIT(64'h1111004055550040)) 
    \FSM_sequential_tx_state[2]_i_1__0 
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[1]),
        .I3(time_out_2ms_reg_n_0),
        .I4(tx_state[2]),
        .I5(\FSM_sequential_tx_state[2]_i_2__0_n_0 ),
        .O(\FSM_sequential_tx_state[2]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFF02)) 
    \FSM_sequential_tx_state[2]_i_2__0 
       (.I0(time_tlock_max_reg_n_0),
        .I1(reset_time_out_reg_n_0),
        .I2(mmcm_lock_reclocked),
        .I3(tx_state[1]),
        .O(\FSM_sequential_tx_state[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \FSM_sequential_tx_state[3]_i_11__0 
       (.I0(reset_time_out_reg_n_0),
        .I1(time_tlock_max_reg_n_0),
        .I2(mmcm_lock_reclocked),
        .O(\FSM_sequential_tx_state[3]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_sequential_tx_state[3]_i_12__0 
       (.I0(wait_time_cnt_reg[12]),
        .I1(wait_time_cnt_reg[13]),
        .I2(wait_time_cnt_reg[10]),
        .I3(wait_time_cnt_reg[11]),
        .I4(wait_time_cnt_reg[15]),
        .I5(wait_time_cnt_reg[14]),
        .O(\FSM_sequential_tx_state[3]_i_12__0_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_tx_state[3]_i_13__0 
       (.I0(wait_time_cnt_reg[1]),
        .I1(wait_time_cnt_reg[0]),
        .I2(wait_time_cnt_reg[3]),
        .I3(wait_time_cnt_reg[2]),
        .O(\FSM_sequential_tx_state[3]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_sequential_tx_state[3]_i_14__0 
       (.I0(wait_time_cnt_reg[6]),
        .I1(wait_time_cnt_reg[7]),
        .I2(wait_time_cnt_reg[4]),
        .I3(wait_time_cnt_reg[5]),
        .I4(wait_time_cnt_reg[9]),
        .I5(wait_time_cnt_reg[8]),
        .O(\FSM_sequential_tx_state[3]_i_14__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_tx_state[3]_i_15__0 
       (.I0(time_out_500us_reg_n_0),
        .I1(reset_time_out_reg_n_0),
        .O(tx_state1));
  LUT5 #(
    .INIT(32'h00A00B00)) 
    \FSM_sequential_tx_state[3]_i_2__0 
       (.I0(\FSM_sequential_tx_state[3]_i_6__0_n_0 ),
        .I1(time_out_wait_bypass_s3),
        .I2(tx_state[2]),
        .I3(tx_state[3]),
        .I4(tx_state[1]),
        .O(\FSM_sequential_tx_state[3]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \FSM_sequential_tx_state[3]_i_4__0 
       (.I0(tx_state[0]),
        .I1(tx_state[3]),
        .I2(tx_state[2]),
        .O(\FSM_sequential_tx_state[3]_i_4__0_n_0 ));
  LUT3 #(
    .INIT(8'h8A)) 
    \FSM_sequential_tx_state[3]_i_6__0 
       (.I0(tx_state[0]),
        .I1(reset_time_out_reg_n_0),
        .I2(time_out_500us_reg_n_0),
        .O(\FSM_sequential_tx_state[3]_i_6__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \FSM_sequential_tx_state[3]_i_7__0 
       (.I0(\FSM_sequential_tx_state[3]_i_11__0_n_0 ),
        .I1(tx_state[0]),
        .I2(\FSM_sequential_tx_state[3]_i_12__0_n_0 ),
        .I3(\FSM_sequential_tx_state[3]_i_13__0_n_0 ),
        .I4(\FSM_sequential_tx_state[3]_i_14__0_n_0 ),
        .O(\FSM_sequential_tx_state[3]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hEFE0E0E0E0E0E0E0)) 
    \FSM_sequential_tx_state[3]_i_8__0 
       (.I0(tx_state1),
        .I1(txresetdone_s3),
        .I2(tx_state[0]),
        .I3(\FSM_sequential_tx_state[3]_i_12__0_n_0 ),
        .I4(\FSM_sequential_tx_state[3]_i_13__0_n_0 ),
        .I5(\FSM_sequential_tx_state[3]_i_14__0_n_0 ),
        .O(\FSM_sequential_tx_state[3]_i_8__0_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_tx_state_reg[0] 
       (.C(sysclk_in),
        .CE(sync_qplllock_n_1),
        .D(\FSM_sequential_tx_state[0]_i_1__0_n_0 ),
        .Q(tx_state[0]),
        .R(soft_reset_tx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_tx_state_reg[1] 
       (.C(sysclk_in),
        .CE(sync_qplllock_n_1),
        .D(\FSM_sequential_tx_state[1]_i_1__0_n_0 ),
        .Q(tx_state[1]),
        .R(soft_reset_tx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_tx_state_reg[2] 
       (.C(sysclk_in),
        .CE(sync_qplllock_n_1),
        .D(\FSM_sequential_tx_state[2]_i_1__0_n_0 ),
        .Q(tx_state[2]),
        .R(soft_reset_tx_in));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_tx_state_reg[3] 
       (.C(sysclk_in),
        .CE(sync_qplllock_n_1),
        .D(\FSM_sequential_tx_state[3]_i_2__0_n_0 ),
        .Q(tx_state[3]),
        .R(soft_reset_tx_in));
  MUXF7 \FSM_sequential_tx_state_reg[3]_i_3__0 
       (.I0(\FSM_sequential_tx_state[3]_i_7__0_n_0 ),
        .I1(\FSM_sequential_tx_state[3]_i_8__0_n_0 ),
        .O(\FSM_sequential_tx_state_reg[3]_i_3__0_n_0 ),
        .S(tx_state[1]));
  LUT5 #(
    .INIT(32'hFFFD0004)) 
    RESET_PHALIGNMENT_i_1__0
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[2]),
        .I3(tx_state[1]),
        .I4(gt1_rst_tx_phalignment_i),
        .O(RESET_PHALIGNMENT_i_1__0_n_0));
  FDSE #(
    .INIT(1'b0)) 
    RESET_PHALIGNMENT_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(RESET_PHALIGNMENT_i_1__0_n_0),
        .Q(gt1_rst_tx_phalignment_i),
        .S(soft_reset_tx_in));
  LUT5 #(
    .INIT(32'hFFFB4000)) 
    TXUSERRDY_i_1__0
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[1]),
        .I3(tx_state[2]),
        .I4(gt1_txuserrdy_in),
        .O(TXUSERRDY_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    TXUSERRDY_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(TXUSERRDY_i_1__0_n_0),
        .Q(gt1_txuserrdy_in),
        .R(soft_reset_tx_in));
  LUT5 #(
    .INIT(32'hFFFD0004)) 
    gttxreset_i_i_1__0
       (.I0(tx_state[2]),
        .I1(tx_state[0]),
        .I2(tx_state[3]),
        .I3(tx_state[1]),
        .I4(gt1_gttxreset_in),
        .O(gttxreset_i_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gttxreset_i_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gttxreset_i_i_1__0_n_0),
        .Q(gt1_gttxreset_in),
        .R(soft_reset_tx_in));
  LUT1 #(
    .INIT(2'h1)) 
    \init_wait_count[0]_i_1__0 
       (.I0(init_wait_count_reg__0[0]),
        .O(\init_wait_count[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[1]_i_1__0 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \init_wait_count[2]_i_1__0 
       (.I0(init_wait_count_reg__0[1]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \init_wait_count[3]_i_1__0 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[1]),
        .I3(init_wait_count_reg__0[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \init_wait_count[4]_i_1__0 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[3]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[1]),
        .I4(init_wait_count_reg__0[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[5]_i_1__0 
       (.I0(init_wait_count_reg__0[3]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[4]),
        .I3(init_wait_count_reg__0[0]),
        .I4(init_wait_count_reg__0[1]),
        .I5(init_wait_count_reg__0[5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[6]_i_1__0 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[5]),
        .I4(\init_wait_count[6]_i_2__0_n_0 ),
        .I5(init_wait_count_reg__0[6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \init_wait_count[6]_i_2__0 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(\init_wait_count[6]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \init_wait_count[7]_i_1__0 
       (.I0(init_wait_count_reg__0[6]),
        .I1(init_wait_count_reg__0[7]),
        .I2(init_wait_count_reg__0[0]),
        .I3(\init_wait_count[7]_i_3__0_n_0 ),
        .I4(init_wait_count_reg__0[1]),
        .O(init_wait_count));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \init_wait_count[7]_i_2__0 
       (.I0(\init_wait_count[7]_i_3__0_n_0 ),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[6]),
        .I4(init_wait_count_reg__0[7]),
        .O(p_0_in[7]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \init_wait_count[7]_i_3__0 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[5]),
        .O(\init_wait_count[7]_i_3__0_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[0] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(\init_wait_count[0]_i_1__0_n_0 ),
        .Q(init_wait_count_reg__0[0]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[1] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[1]),
        .Q(init_wait_count_reg__0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[2] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[2]),
        .Q(init_wait_count_reg__0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[3] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[3]),
        .Q(init_wait_count_reg__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[4] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[4]),
        .Q(init_wait_count_reg__0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[5] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[5]),
        .Q(init_wait_count_reg__0[5]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[6] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[6]),
        .Q(init_wait_count_reg__0[6]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[7] 
       (.C(sysclk_in),
        .CE(init_wait_count),
        .CLR(soft_reset_tx_in),
        .D(p_0_in[7]),
        .Q(init_wait_count_reg__0[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    init_wait_done_i_1__0
       (.I0(\init_wait_count[7]_i_3__0_n_0 ),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[7]),
        .I4(init_wait_count_reg__0[6]),
        .I5(init_wait_done_reg_n_0),
        .O(init_wait_done_i_1__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    init_wait_done_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .CLR(soft_reset_tx_in),
        .D(init_wait_done_i_1__0_n_0),
        .Q(init_wait_done_reg_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[0]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mmcm_lock_count[1]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[0]),
        .I1(mmcm_lock_count_reg__0[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \mmcm_lock_count[2]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[1]),
        .I1(mmcm_lock_count_reg__0[0]),
        .I2(mmcm_lock_count_reg__0[2]),
        .O(\mmcm_lock_count[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \mmcm_lock_count[3]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[2]),
        .I1(mmcm_lock_count_reg__0[0]),
        .I2(mmcm_lock_count_reg__0[1]),
        .I3(mmcm_lock_count_reg__0[3]),
        .O(\mmcm_lock_count[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \mmcm_lock_count[4]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[3]),
        .I1(mmcm_lock_count_reg__0[1]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[2]),
        .I4(mmcm_lock_count_reg__0[4]),
        .O(\mmcm_lock_count[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \mmcm_lock_count[5]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[2]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[1]),
        .I4(mmcm_lock_count_reg__0[3]),
        .I5(mmcm_lock_count_reg__0[5]),
        .O(\mmcm_lock_count[5]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \mmcm_lock_count[6]_i_1__0 
       (.I0(\mmcm_lock_count[9]_i_4__0_n_0 ),
        .I1(mmcm_lock_count_reg__0[6]),
        .O(\mmcm_lock_count[6]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    \mmcm_lock_count[7]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__0_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .O(\mmcm_lock_count[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT4 #(
    .INIT(16'hDF20)) 
    \mmcm_lock_count[8]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[7]),
        .I1(\mmcm_lock_count[9]_i_4__0_n_0 ),
        .I2(mmcm_lock_count_reg__0[6]),
        .I3(mmcm_lock_count_reg__0[8]),
        .O(\mmcm_lock_count[8]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h000000DF)) 
    \mmcm_lock_count[9]_i_2__0 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__0_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .I3(mmcm_lock_count_reg__0[8]),
        .I4(mmcm_lock_count_reg__0[9]),
        .O(\mmcm_lock_count[9]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \mmcm_lock_count[9]_i_3__0 
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__0_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .I3(mmcm_lock_count_reg__0[8]),
        .I4(mmcm_lock_count_reg__0[9]),
        .O(p_0_in__0[9]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \mmcm_lock_count[9]_i_4__0 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[2]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[1]),
        .I4(mmcm_lock_count_reg__0[3]),
        .I5(mmcm_lock_count_reg__0[5]),
        .O(\mmcm_lock_count[9]_i_4__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[0] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__0_n_0 ),
        .D(p_0_in__0[0]),
        .Q(mmcm_lock_count_reg__0[0]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[1] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__0_n_0 ),
        .D(p_0_in__0[1]),
        .Q(mmcm_lock_count_reg__0[1]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[2] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__0_n_0 ),
        .D(\mmcm_lock_count[2]_i_1__0_n_0 ),
        .Q(mmcm_lock_count_reg__0[2]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[3] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__0_n_0 ),
        .D(\mmcm_lock_count[3]_i_1__0_n_0 ),
        .Q(mmcm_lock_count_reg__0[3]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[4] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__0_n_0 ),
        .D(\mmcm_lock_count[4]_i_1__0_n_0 ),
        .Q(mmcm_lock_count_reg__0[4]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[5] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__0_n_0 ),
        .D(\mmcm_lock_count[5]_i_1__0_n_0 ),
        .Q(mmcm_lock_count_reg__0[5]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[6] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__0_n_0 ),
        .D(\mmcm_lock_count[6]_i_1__0_n_0 ),
        .Q(mmcm_lock_count_reg__0[6]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[7] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__0_n_0 ),
        .D(\mmcm_lock_count[7]_i_1__0_n_0 ),
        .Q(mmcm_lock_count_reg__0[7]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[8] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__0_n_0 ),
        .D(\mmcm_lock_count[8]_i_1__0_n_0 ),
        .Q(mmcm_lock_count_reg__0[8]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[9] 
       (.C(sysclk_in),
        .CE(\mmcm_lock_count[9]_i_2__0_n_0 ),
        .D(p_0_in__0[9]),
        .Q(mmcm_lock_count_reg__0[9]),
        .R(sync_mmcm_lock_reclocked_n_0));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    mmcm_lock_reclocked_i_2__0
       (.I0(mmcm_lock_count_reg__0[6]),
        .I1(\mmcm_lock_count[9]_i_4__0_n_0 ),
        .I2(mmcm_lock_count_reg__0[7]),
        .O(mmcm_lock_reclocked_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mmcm_lock_reclocked_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync_mmcm_lock_reclocked_n_1),
        .Q(mmcm_lock_reclocked),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEFFFEFFF00000010)) 
    pll_reset_asserted_i_1__0
       (.I0(tx_state[3]),
        .I1(tx_state[2]),
        .I2(tx_state[0]),
        .I3(tx_state[1]),
        .I4(gt0_qpllrefclklost_in),
        .I5(pll_reset_asserted_reg_n_0),
        .O(pll_reset_asserted_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pll_reset_asserted_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(pll_reset_asserted_i_1__0_n_0),
        .Q(pll_reset_asserted_reg_n_0),
        .R(soft_reset_tx_in));
  FDRE #(
    .INIT(1'b0)) 
    reset_time_out_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync_qplllock_n_0),
        .Q(reset_time_out_reg_n_0),
        .R(soft_reset_tx_in));
  LUT5 #(
    .INIT(32'hFFFB0002)) 
    run_phase_alignment_int_i_1__0
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[2]),
        .I3(tx_state[1]),
        .I4(data_in),
        .O(run_phase_alignment_int_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(run_phase_alignment_int_i_1__0_n_0),
        .Q(data_in),
        .R(soft_reset_tx_in));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_s3_reg
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(run_phase_alignment_int_s2),
        .Q(run_phase_alignment_int_s3_reg_n_0),
        .R(1'b0));
  gtx3g_bert_0_gtx3g_sync_block sync_TXRESETDONE
       (.data_out(txresetdone_s2),
        .gt1_txresetdone_out(gt1_txresetdone_out),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_4 sync_mmcm_lock_reclocked
       (.Q(mmcm_lock_count_reg__0[9:8]),
        .SR(sync_mmcm_lock_reclocked_n_0),
        .\mmcm_lock_count_reg[6] (mmcm_lock_reclocked_i_2__0_n_0),
        .mmcm_lock_reclocked(mmcm_lock_reclocked),
        .mmcm_lock_reclocked_reg(sync_mmcm_lock_reclocked_n_1),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_5 sync_qplllock
       (.E(sync_qplllock_n_1),
        .\FSM_sequential_tx_state_reg[0] (\FSM_sequential_tx_state[3]_i_4__0_n_0 ),
        .\FSM_sequential_tx_state_reg[1] (\FSM_sequential_tx_state_reg[3]_i_3__0_n_0 ),
        .gt0_qplllock_in(gt0_qplllock_in),
        .gt0_tx_phalignment_done_i(gt0_tx_phalignment_done_i),
        .init_wait_done_reg(init_wait_done_reg_n_0),
        .mmcm_lock_reclocked(mmcm_lock_reclocked),
        .out(tx_state),
        .pll_reset_asserted_reg(pll_reset_asserted_reg_n_0),
        .reset_time_out_reg(sync_qplllock_n_0),
        .reset_time_out_reg_0(reset_time_out_reg_n_0),
        .sysclk_in(sysclk_in),
        .time_out_2ms_reg(time_out_2ms_reg_n_0),
        .time_out_wait_bypass_s3(time_out_wait_bypass_s3),
        .txresetdone_s3(txresetdone_s3),
        .\wait_time_cnt_reg[12] (\FSM_sequential_tx_state[3]_i_12__0_n_0 ),
        .\wait_time_cnt_reg[1] (\FSM_sequential_tx_state[3]_i_13__0_n_0 ),
        .\wait_time_cnt_reg[6] (\FSM_sequential_tx_state[3]_i_14__0_n_0 ));
  gtx3g_bert_0_gtx3g_sync_block_6 sync_run_phase_alignment_int
       (.data_in(data_in),
        .data_out(run_phase_alignment_int_s2),
        .gt1_txusrclk_in(gt1_txusrclk_in));
  gtx3g_bert_0_gtx3g_sync_block_7 sync_time_out_wait_bypass
       (.data_in(time_out_wait_bypass_reg_n_0),
        .data_out(time_out_wait_bypass_s2),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_sync_block_8 sync_tx_fsm_reset_done_int
       (.data_out(tx_fsm_reset_done_int_s2),
        .gt1_tx_fsm_reset_done_out(gt1_tx_fsm_reset_done_out),
        .gt1_txusrclk_in(gt1_txusrclk_in));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT4 #(
    .INIT(16'h00AE)) 
    time_out_2ms_i_1__2
       (.I0(time_out_2ms_reg_n_0),
        .I1(time_out_2ms_i_2__0_n_0),
        .I2(\time_out_counter[0]_i_3__2_n_0 ),
        .I3(reset_time_out_reg_n_0),
        .O(time_out_2ms_i_1__2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    time_out_2ms_i_2__0
       (.I0(time_out_counter_reg[16]),
        .I1(time_out_counter_reg[17]),
        .I2(time_out_counter_reg[9]),
        .I3(time_out_counter_reg[11]),
        .I4(time_out_counter_reg[4]),
        .I5(\time_out_counter[0]_i_4__0_n_0 ),
        .O(time_out_2ms_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_2ms_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_2ms_i_1__2_n_0),
        .Q(time_out_2ms_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000AAAAEAAA)) 
    time_out_500us_i_1__0
       (.I0(time_out_500us_reg_n_0),
        .I1(time_out_500us_i_2__0_n_0),
        .I2(time_out_counter_reg[4]),
        .I3(time_out_counter_reg[9]),
        .I4(\time_out_counter[0]_i_3__2_n_0 ),
        .I5(reset_time_out_reg_n_0),
        .O(time_out_500us_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    time_out_500us_i_2__0
       (.I0(time_out_counter_reg[14]),
        .I1(time_out_counter_reg[15]),
        .I2(time_out_counter_reg[10]),
        .I3(time_out_counter_reg[11]),
        .I4(time_out_counter_reg[17]),
        .I5(time_out_counter_reg[16]),
        .O(time_out_500us_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_500us_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_500us_i_1__0_n_0),
        .Q(time_out_500us_reg_n_0),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \time_out_counter[0]_i_10__0 
       (.I0(time_out_counter_reg[7]),
        .I1(time_out_counter_reg[5]),
        .I2(time_out_counter_reg[8]),
        .I3(time_out_counter_reg[12]),
        .O(\time_out_counter[0]_i_10__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \time_out_counter[0]_i_11__0 
       (.I0(time_out_counter_reg[1]),
        .I1(time_out_counter_reg[0]),
        .I2(time_out_counter_reg[3]),
        .I3(time_out_counter_reg[2]),
        .O(\time_out_counter[0]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFBFFFF)) 
    \time_out_counter[0]_i_1__2 
       (.I0(\time_out_counter[0]_i_3__2_n_0 ),
        .I1(time_out_counter_reg[11]),
        .I2(\time_out_counter[0]_i_4__0_n_0 ),
        .I3(time_out_counter_reg[9]),
        .I4(\time_out_counter[0]_i_5__2_n_0 ),
        .I5(time_out_counter_reg[4]),
        .O(time_out_counter));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \time_out_counter[0]_i_3__2 
       (.I0(time_out_counter_reg[6]),
        .I1(time_out_counter_reg[13]),
        .I2(\time_out_counter[0]_i_10__0_n_0 ),
        .I3(\time_out_counter[0]_i_11__0_n_0 ),
        .O(\time_out_counter[0]_i_3__2_n_0 ));
  LUT3 #(
    .INIT(8'hEF)) 
    \time_out_counter[0]_i_4__0 
       (.I0(time_out_counter_reg[15]),
        .I1(time_out_counter_reg[14]),
        .I2(time_out_counter_reg[10]),
        .O(\time_out_counter[0]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \time_out_counter[0]_i_5__2 
       (.I0(time_out_counter_reg[16]),
        .I1(time_out_counter_reg[17]),
        .O(\time_out_counter[0]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_6__0 
       (.I0(time_out_counter_reg[3]),
        .O(\time_out_counter[0]_i_6__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_7__0 
       (.I0(time_out_counter_reg[2]),
        .O(\time_out_counter[0]_i_7__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[0]_i_8__0 
       (.I0(time_out_counter_reg[1]),
        .O(\time_out_counter[0]_i_8__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \time_out_counter[0]_i_9__0 
       (.I0(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_9__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_2__0 
       (.I0(time_out_counter_reg[15]),
        .O(\time_out_counter[12]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_3__0 
       (.I0(time_out_counter_reg[14]),
        .O(\time_out_counter[12]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_4__0 
       (.I0(time_out_counter_reg[13]),
        .O(\time_out_counter[12]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[12]_i_5__0 
       (.I0(time_out_counter_reg[12]),
        .O(\time_out_counter[12]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[16]_i_2__0 
       (.I0(time_out_counter_reg[17]),
        .O(\time_out_counter[16]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[16]_i_3__0 
       (.I0(time_out_counter_reg[16]),
        .O(\time_out_counter[16]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_2__0 
       (.I0(time_out_counter_reg[7]),
        .O(\time_out_counter[4]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_3__0 
       (.I0(time_out_counter_reg[6]),
        .O(\time_out_counter[4]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_4__0 
       (.I0(time_out_counter_reg[5]),
        .O(\time_out_counter[4]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[4]_i_5__0 
       (.I0(time_out_counter_reg[4]),
        .O(\time_out_counter[4]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_2__0 
       (.I0(time_out_counter_reg[11]),
        .O(\time_out_counter[8]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_3__0 
       (.I0(time_out_counter_reg[10]),
        .O(\time_out_counter[8]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_4__0 
       (.I0(time_out_counter_reg[9]),
        .O(\time_out_counter[8]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \time_out_counter[8]_i_5__0 
       (.I0(time_out_counter_reg[8]),
        .O(\time_out_counter[8]_i_5__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[0] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__0_n_7 ),
        .Q(time_out_counter_reg[0]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\time_out_counter_reg[0]_i_2__0_n_0 ,\time_out_counter_reg[0]_i_2__0_n_1 ,\time_out_counter_reg[0]_i_2__0_n_2 ,\time_out_counter_reg[0]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\time_out_counter_reg[0]_i_2__0_n_4 ,\time_out_counter_reg[0]_i_2__0_n_5 ,\time_out_counter_reg[0]_i_2__0_n_6 ,\time_out_counter_reg[0]_i_2__0_n_7 }),
        .S({\time_out_counter[0]_i_6__0_n_0 ,\time_out_counter[0]_i_7__0_n_0 ,\time_out_counter[0]_i_8__0_n_0 ,\time_out_counter[0]_i_9__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[10] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__0_n_5 ),
        .Q(time_out_counter_reg[10]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[11] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__0_n_4 ),
        .Q(time_out_counter_reg[11]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[12] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__0_n_7 ),
        .Q(time_out_counter_reg[12]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[12]_i_1__0 
       (.CI(\time_out_counter_reg[8]_i_1__0_n_0 ),
        .CO({\time_out_counter_reg[12]_i_1__0_n_0 ,\time_out_counter_reg[12]_i_1__0_n_1 ,\time_out_counter_reg[12]_i_1__0_n_2 ,\time_out_counter_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[12]_i_1__0_n_4 ,\time_out_counter_reg[12]_i_1__0_n_5 ,\time_out_counter_reg[12]_i_1__0_n_6 ,\time_out_counter_reg[12]_i_1__0_n_7 }),
        .S({\time_out_counter[12]_i_2__0_n_0 ,\time_out_counter[12]_i_3__0_n_0 ,\time_out_counter[12]_i_4__0_n_0 ,\time_out_counter[12]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[13] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__0_n_6 ),
        .Q(time_out_counter_reg[13]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[14] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__0_n_5 ),
        .Q(time_out_counter_reg[14]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[15] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__0_n_4 ),
        .Q(time_out_counter_reg[15]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[16] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1__0_n_7 ),
        .Q(time_out_counter_reg[16]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[16]_i_1__0 
       (.CI(\time_out_counter_reg[12]_i_1__0_n_0 ),
        .CO({\NLW_time_out_counter_reg[16]_i_1__0_CO_UNCONNECTED [3:1],\time_out_counter_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_time_out_counter_reg[16]_i_1__0_O_UNCONNECTED [3:2],\time_out_counter_reg[16]_i_1__0_n_6 ,\time_out_counter_reg[16]_i_1__0_n_7 }),
        .S({1'b0,1'b0,\time_out_counter[16]_i_2__0_n_0 ,\time_out_counter[16]_i_3__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[17] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1__0_n_6 ),
        .Q(time_out_counter_reg[17]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[1] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__0_n_6 ),
        .Q(time_out_counter_reg[1]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[2] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__0_n_5 ),
        .Q(time_out_counter_reg[2]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[3] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__0_n_4 ),
        .Q(time_out_counter_reg[3]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[4] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__0_n_7 ),
        .Q(time_out_counter_reg[4]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[4]_i_1__0 
       (.CI(\time_out_counter_reg[0]_i_2__0_n_0 ),
        .CO({\time_out_counter_reg[4]_i_1__0_n_0 ,\time_out_counter_reg[4]_i_1__0_n_1 ,\time_out_counter_reg[4]_i_1__0_n_2 ,\time_out_counter_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[4]_i_1__0_n_4 ,\time_out_counter_reg[4]_i_1__0_n_5 ,\time_out_counter_reg[4]_i_1__0_n_6 ,\time_out_counter_reg[4]_i_1__0_n_7 }),
        .S({\time_out_counter[4]_i_2__0_n_0 ,\time_out_counter[4]_i_3__0_n_0 ,\time_out_counter[4]_i_4__0_n_0 ,\time_out_counter[4]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[5] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__0_n_6 ),
        .Q(time_out_counter_reg[5]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[6] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__0_n_5 ),
        .Q(time_out_counter_reg[6]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[7] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__0_n_4 ),
        .Q(time_out_counter_reg[7]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[8] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__0_n_7 ),
        .Q(time_out_counter_reg[8]),
        .R(reset_time_out_reg_n_0));
  CARRY4 \time_out_counter_reg[8]_i_1__0 
       (.CI(\time_out_counter_reg[4]_i_1__0_n_0 ),
        .CO({\time_out_counter_reg[8]_i_1__0_n_0 ,\time_out_counter_reg[8]_i_1__0_n_1 ,\time_out_counter_reg[8]_i_1__0_n_2 ,\time_out_counter_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[8]_i_1__0_n_4 ,\time_out_counter_reg[8]_i_1__0_n_5 ,\time_out_counter_reg[8]_i_1__0_n_6 ,\time_out_counter_reg[8]_i_1__0_n_7 }),
        .S({\time_out_counter[8]_i_2__0_n_0 ,\time_out_counter[8]_i_3__0_n_0 ,\time_out_counter[8]_i_4__0_n_0 ,\time_out_counter[8]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[9] 
       (.C(sysclk_in),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__0_n_6 ),
        .Q(time_out_counter_reg[9]),
        .R(reset_time_out_reg_n_0));
  LUT4 #(
    .INIT(16'hAB00)) 
    time_out_wait_bypass_i_1__0
       (.I0(time_out_wait_bypass_reg_n_0),
        .I1(\wait_bypass_count[0]_i_4__0_n_0 ),
        .I2(tx_fsm_reset_done_int_s3_reg_n_0),
        .I3(run_phase_alignment_int_s3_reg_n_0),
        .O(time_out_wait_bypass_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_reg
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(time_out_wait_bypass_i_1__0_n_0),
        .Q(time_out_wait_bypass_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_s3_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_out_wait_bypass_s2),
        .Q(time_out_wait_bypass_s3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000AABAAAAA)) 
    time_tlock_max_i_1__2
       (.I0(time_tlock_max_reg_n_0),
        .I1(time_tlock_max_i_2__2_n_0),
        .I2(time_out_counter_reg[4]),
        .I3(\time_out_counter[0]_i_4__0_n_0 ),
        .I4(time_tlock_max_i_3__2_n_0),
        .I5(reset_time_out_reg_n_0),
        .O(time_tlock_max_i_1__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    time_tlock_max_i_2__2
       (.I0(time_out_counter_reg[2]),
        .I1(time_out_counter_reg[3]),
        .I2(time_out_counter_reg[0]),
        .I3(time_out_counter_reg[1]),
        .I4(\time_out_counter[0]_i_10__0_n_0 ),
        .O(time_tlock_max_i_2__2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    time_tlock_max_i_3__2
       (.I0(time_out_counter_reg[13]),
        .I1(time_out_counter_reg[11]),
        .I2(time_out_counter_reg[9]),
        .I3(time_out_counter_reg[6]),
        .I4(time_out_counter_reg[17]),
        .I5(time_out_counter_reg[16]),
        .O(time_tlock_max_i_3__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_tlock_max_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(time_tlock_max_i_1__2_n_0),
        .Q(time_tlock_max_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFF0008)) 
    tx_fsm_reset_done_int_i_1__0
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[2]),
        .I3(tx_state[1]),
        .I4(gt1_tx_fsm_reset_done_out),
        .O(tx_fsm_reset_done_int_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_fsm_reset_done_int_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(tx_fsm_reset_done_int_i_1__0_n_0),
        .Q(gt1_tx_fsm_reset_done_out),
        .R(soft_reset_tx_in));
  FDRE #(
    .INIT(1'b0)) 
    tx_fsm_reset_done_int_s3_reg
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(tx_fsm_reset_done_int_s2),
        .Q(tx_fsm_reset_done_int_s3_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txresetdone_s3_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(txresetdone_s2),
        .Q(txresetdone_s3),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hDFFFFFFF)) 
    \wait_bypass_count[0]_i_10__0 
       (.I0(wait_bypass_count_reg[0]),
        .I1(wait_bypass_count_reg[15]),
        .I2(wait_bypass_count_reg[16]),
        .I3(wait_bypass_count_reg[2]),
        .I4(wait_bypass_count_reg[1]),
        .O(\wait_bypass_count[0]_i_10__0_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \wait_bypass_count[0]_i_11__0 
       (.I0(wait_bypass_count_reg[12]),
        .I1(wait_bypass_count_reg[11]),
        .I2(wait_bypass_count_reg[14]),
        .I3(wait_bypass_count_reg[13]),
        .O(\wait_bypass_count[0]_i_11__0_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \wait_bypass_count[0]_i_12__0 
       (.I0(wait_bypass_count_reg[8]),
        .I1(wait_bypass_count_reg[7]),
        .I2(wait_bypass_count_reg[10]),
        .I3(wait_bypass_count_reg[9]),
        .O(\wait_bypass_count[0]_i_12__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_1__0 
       (.I0(run_phase_alignment_int_s3_reg_n_0),
        .O(\wait_bypass_count[0]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \wait_bypass_count[0]_i_2__0 
       (.I0(\wait_bypass_count[0]_i_4__0_n_0 ),
        .I1(tx_fsm_reset_done_int_s3_reg_n_0),
        .O(\wait_bypass_count[0]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_bypass_count[0]_i_4__0 
       (.I0(\wait_bypass_count[0]_i_9__0_n_0 ),
        .I1(\wait_bypass_count[0]_i_10__0_n_0 ),
        .I2(\wait_bypass_count[0]_i_11__0_n_0 ),
        .I3(\wait_bypass_count[0]_i_12__0_n_0 ),
        .O(\wait_bypass_count[0]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_5__0 
       (.I0(wait_bypass_count_reg[3]),
        .O(\wait_bypass_count[0]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_6__0 
       (.I0(wait_bypass_count_reg[2]),
        .O(\wait_bypass_count[0]_i_6__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[0]_i_7__0 
       (.I0(wait_bypass_count_reg[1]),
        .O(\wait_bypass_count[0]_i_7__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_8__0 
       (.I0(wait_bypass_count_reg[0]),
        .O(\wait_bypass_count[0]_i_8__0_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \wait_bypass_count[0]_i_9__0 
       (.I0(wait_bypass_count_reg[4]),
        .I1(wait_bypass_count_reg[3]),
        .I2(wait_bypass_count_reg[6]),
        .I3(wait_bypass_count_reg[5]),
        .O(\wait_bypass_count[0]_i_9__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[12]_i_2__0 
       (.I0(wait_bypass_count_reg[15]),
        .O(\wait_bypass_count[12]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[12]_i_3__0 
       (.I0(wait_bypass_count_reg[14]),
        .O(\wait_bypass_count[12]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[12]_i_4__0 
       (.I0(wait_bypass_count_reg[13]),
        .O(\wait_bypass_count[12]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[12]_i_5__0 
       (.I0(wait_bypass_count_reg[12]),
        .O(\wait_bypass_count[12]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[16]_i_2__0 
       (.I0(wait_bypass_count_reg[16]),
        .O(\wait_bypass_count[16]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_2__0 
       (.I0(wait_bypass_count_reg[7]),
        .O(\wait_bypass_count[4]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_3__0 
       (.I0(wait_bypass_count_reg[6]),
        .O(\wait_bypass_count[4]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_4__0 
       (.I0(wait_bypass_count_reg[5]),
        .O(\wait_bypass_count[4]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[4]_i_5__0 
       (.I0(wait_bypass_count_reg[4]),
        .O(\wait_bypass_count[4]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_2__0 
       (.I0(wait_bypass_count_reg[11]),
        .O(\wait_bypass_count[8]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_3__0 
       (.I0(wait_bypass_count_reg[10]),
        .O(\wait_bypass_count[8]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_4__0 
       (.I0(wait_bypass_count_reg[9]),
        .O(\wait_bypass_count[8]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \wait_bypass_count[8]_i_5__0 
       (.I0(wait_bypass_count_reg[8]),
        .O(\wait_bypass_count[8]_i_5__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[0] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__0_n_7 ),
        .Q(wait_bypass_count_reg[0]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  CARRY4 \wait_bypass_count_reg[0]_i_3__0 
       (.CI(1'b0),
        .CO({\wait_bypass_count_reg[0]_i_3__0_n_0 ,\wait_bypass_count_reg[0]_i_3__0_n_1 ,\wait_bypass_count_reg[0]_i_3__0_n_2 ,\wait_bypass_count_reg[0]_i_3__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\wait_bypass_count_reg[0]_i_3__0_n_4 ,\wait_bypass_count_reg[0]_i_3__0_n_5 ,\wait_bypass_count_reg[0]_i_3__0_n_6 ,\wait_bypass_count_reg[0]_i_3__0_n_7 }),
        .S({\wait_bypass_count[0]_i_5__0_n_0 ,\wait_bypass_count[0]_i_6__0_n_0 ,\wait_bypass_count[0]_i_7__0_n_0 ,\wait_bypass_count[0]_i_8__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[10] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__0_n_5 ),
        .Q(wait_bypass_count_reg[10]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[11] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__0_n_4 ),
        .Q(wait_bypass_count_reg[11]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[12] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1__0_n_7 ),
        .Q(wait_bypass_count_reg[12]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  CARRY4 \wait_bypass_count_reg[12]_i_1__0 
       (.CI(\wait_bypass_count_reg[8]_i_1__0_n_0 ),
        .CO({\wait_bypass_count_reg[12]_i_1__0_n_0 ,\wait_bypass_count_reg[12]_i_1__0_n_1 ,\wait_bypass_count_reg[12]_i_1__0_n_2 ,\wait_bypass_count_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[12]_i_1__0_n_4 ,\wait_bypass_count_reg[12]_i_1__0_n_5 ,\wait_bypass_count_reg[12]_i_1__0_n_6 ,\wait_bypass_count_reg[12]_i_1__0_n_7 }),
        .S({\wait_bypass_count[12]_i_2__0_n_0 ,\wait_bypass_count[12]_i_3__0_n_0 ,\wait_bypass_count[12]_i_4__0_n_0 ,\wait_bypass_count[12]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[13] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1__0_n_6 ),
        .Q(wait_bypass_count_reg[13]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[14] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1__0_n_5 ),
        .Q(wait_bypass_count_reg[14]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[15] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1__0_n_4 ),
        .Q(wait_bypass_count_reg[15]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[16] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[16]_i_1__0_n_7 ),
        .Q(wait_bypass_count_reg[16]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  CARRY4 \wait_bypass_count_reg[16]_i_1__0 
       (.CI(\wait_bypass_count_reg[12]_i_1__0_n_0 ),
        .CO(\NLW_wait_bypass_count_reg[16]_i_1__0_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_wait_bypass_count_reg[16]_i_1__0_O_UNCONNECTED [3:1],\wait_bypass_count_reg[16]_i_1__0_n_7 }),
        .S({1'b0,1'b0,1'b0,\wait_bypass_count[16]_i_2__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[1] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__0_n_6 ),
        .Q(wait_bypass_count_reg[1]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[2] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__0_n_5 ),
        .Q(wait_bypass_count_reg[2]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[3] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__0_n_4 ),
        .Q(wait_bypass_count_reg[3]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[4] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__0_n_7 ),
        .Q(wait_bypass_count_reg[4]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  CARRY4 \wait_bypass_count_reg[4]_i_1__0 
       (.CI(\wait_bypass_count_reg[0]_i_3__0_n_0 ),
        .CO({\wait_bypass_count_reg[4]_i_1__0_n_0 ,\wait_bypass_count_reg[4]_i_1__0_n_1 ,\wait_bypass_count_reg[4]_i_1__0_n_2 ,\wait_bypass_count_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[4]_i_1__0_n_4 ,\wait_bypass_count_reg[4]_i_1__0_n_5 ,\wait_bypass_count_reg[4]_i_1__0_n_6 ,\wait_bypass_count_reg[4]_i_1__0_n_7 }),
        .S({\wait_bypass_count[4]_i_2__0_n_0 ,\wait_bypass_count[4]_i_3__0_n_0 ,\wait_bypass_count[4]_i_4__0_n_0 ,\wait_bypass_count[4]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[5] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__0_n_6 ),
        .Q(wait_bypass_count_reg[5]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[6] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__0_n_5 ),
        .Q(wait_bypass_count_reg[6]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[7] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__0_n_4 ),
        .Q(wait_bypass_count_reg[7]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[8] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__0_n_7 ),
        .Q(wait_bypass_count_reg[8]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  CARRY4 \wait_bypass_count_reg[8]_i_1__0 
       (.CI(\wait_bypass_count_reg[4]_i_1__0_n_0 ),
        .CO({\wait_bypass_count_reg[8]_i_1__0_n_0 ,\wait_bypass_count_reg[8]_i_1__0_n_1 ,\wait_bypass_count_reg[8]_i_1__0_n_2 ,\wait_bypass_count_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[8]_i_1__0_n_4 ,\wait_bypass_count_reg[8]_i_1__0_n_5 ,\wait_bypass_count_reg[8]_i_1__0_n_6 ,\wait_bypass_count_reg[8]_i_1__0_n_7 }),
        .S({\wait_bypass_count[8]_i_2__0_n_0 ,\wait_bypass_count[8]_i_3__0_n_0 ,\wait_bypass_count[8]_i_4__0_n_0 ,\wait_bypass_count[8]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[9] 
       (.C(gt1_txusrclk_in),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__0_n_6 ),
        .Q(wait_bypass_count_reg[9]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h040C)) 
    \wait_time_cnt[0]_i_1__0 
       (.I0(tx_state[2]),
        .I1(tx_state[0]),
        .I2(tx_state[3]),
        .I3(tx_state[1]),
        .O(\wait_time_cnt[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_2__0 
       (.I0(wait_time_cnt_reg[1]),
        .I1(wait_time_cnt_reg[0]),
        .I2(wait_time_cnt_reg[3]),
        .I3(wait_time_cnt_reg[2]),
        .I4(\wait_time_cnt[0]_i_4__0_n_0 ),
        .I5(\wait_time_cnt[0]_i_5__0_n_0 ),
        .O(\wait_time_cnt[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_4__0 
       (.I0(wait_time_cnt_reg[14]),
        .I1(wait_time_cnt_reg[15]),
        .I2(wait_time_cnt_reg[12]),
        .I3(wait_time_cnt_reg[13]),
        .I4(wait_time_cnt_reg[11]),
        .I5(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_time_cnt[0]_i_5__0 
       (.I0(wait_time_cnt_reg[8]),
        .I1(wait_time_cnt_reg[9]),
        .I2(wait_time_cnt_reg[6]),
        .I3(wait_time_cnt_reg[7]),
        .I4(wait_time_cnt_reg[5]),
        .I5(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[0]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_6__0 
       (.I0(wait_time_cnt_reg[3]),
        .O(\wait_time_cnt[0]_i_6__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_7__0 
       (.I0(wait_time_cnt_reg[2]),
        .O(\wait_time_cnt[0]_i_7__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_8__0 
       (.I0(wait_time_cnt_reg[1]),
        .O(\wait_time_cnt[0]_i_8__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_9__0 
       (.I0(wait_time_cnt_reg[0]),
        .O(\wait_time_cnt[0]_i_9__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_2__0 
       (.I0(wait_time_cnt_reg[15]),
        .O(\wait_time_cnt[12]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_3__0 
       (.I0(wait_time_cnt_reg[14]),
        .O(\wait_time_cnt[12]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_4__0 
       (.I0(wait_time_cnt_reg[13]),
        .O(\wait_time_cnt[12]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_5__0 
       (.I0(wait_time_cnt_reg[12]),
        .O(\wait_time_cnt[12]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_2__0 
       (.I0(wait_time_cnt_reg[7]),
        .O(\wait_time_cnt[4]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_3__0 
       (.I0(wait_time_cnt_reg[6]),
        .O(\wait_time_cnt[4]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_4__0 
       (.I0(wait_time_cnt_reg[5]),
        .O(\wait_time_cnt[4]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_5__0 
       (.I0(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[4]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_2__0 
       (.I0(wait_time_cnt_reg[11]),
        .O(\wait_time_cnt[8]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_3__0 
       (.I0(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[8]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_4__0 
       (.I0(wait_time_cnt_reg[9]),
        .O(\wait_time_cnt[8]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_5__0 
       (.I0(wait_time_cnt_reg[8]),
        .O(\wait_time_cnt[8]_i_5__0_n_0 ));
  FDRE \wait_time_cnt_reg[0] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__0_n_7 ),
        .Q(wait_time_cnt_reg[0]),
        .R(\wait_time_cnt[0]_i_1__0_n_0 ));
  CARRY4 \wait_time_cnt_reg[0]_i_3__0 
       (.CI(1'b0),
        .CO({\wait_time_cnt_reg[0]_i_3__0_n_0 ,\wait_time_cnt_reg[0]_i_3__0_n_1 ,\wait_time_cnt_reg[0]_i_3__0_n_2 ,\wait_time_cnt_reg[0]_i_3__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[0]_i_3__0_n_4 ,\wait_time_cnt_reg[0]_i_3__0_n_5 ,\wait_time_cnt_reg[0]_i_3__0_n_6 ,\wait_time_cnt_reg[0]_i_3__0_n_7 }),
        .S({\wait_time_cnt[0]_i_6__0_n_0 ,\wait_time_cnt[0]_i_7__0_n_0 ,\wait_time_cnt[0]_i_8__0_n_0 ,\wait_time_cnt[0]_i_9__0_n_0 }));
  FDRE \wait_time_cnt_reg[10] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__0_n_5 ),
        .Q(wait_time_cnt_reg[10]),
        .R(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDRE \wait_time_cnt_reg[11] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__0_n_4 ),
        .Q(wait_time_cnt_reg[11]),
        .R(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDRE \wait_time_cnt_reg[12] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__0_n_7 ),
        .Q(wait_time_cnt_reg[12]),
        .R(\wait_time_cnt[0]_i_1__0_n_0 ));
  CARRY4 \wait_time_cnt_reg[12]_i_1__0 
       (.CI(\wait_time_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\NLW_wait_time_cnt_reg[12]_i_1__0_CO_UNCONNECTED [3],\wait_time_cnt_reg[12]_i_1__0_n_1 ,\wait_time_cnt_reg[12]_i_1__0_n_2 ,\wait_time_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[12]_i_1__0_n_4 ,\wait_time_cnt_reg[12]_i_1__0_n_5 ,\wait_time_cnt_reg[12]_i_1__0_n_6 ,\wait_time_cnt_reg[12]_i_1__0_n_7 }),
        .S({\wait_time_cnt[12]_i_2__0_n_0 ,\wait_time_cnt[12]_i_3__0_n_0 ,\wait_time_cnt[12]_i_4__0_n_0 ,\wait_time_cnt[12]_i_5__0_n_0 }));
  FDRE \wait_time_cnt_reg[13] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__0_n_6 ),
        .Q(wait_time_cnt_reg[13]),
        .R(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDRE \wait_time_cnt_reg[14] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__0_n_5 ),
        .Q(wait_time_cnt_reg[14]),
        .R(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDRE \wait_time_cnt_reg[15] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__0_n_4 ),
        .Q(wait_time_cnt_reg[15]),
        .R(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDRE \wait_time_cnt_reg[1] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__0_n_6 ),
        .Q(wait_time_cnt_reg[1]),
        .R(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDRE \wait_time_cnt_reg[2] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__0_n_5 ),
        .Q(wait_time_cnt_reg[2]),
        .R(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDSE \wait_time_cnt_reg[3] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__0_n_4 ),
        .Q(wait_time_cnt_reg[3]),
        .S(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDRE \wait_time_cnt_reg[4] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__0_n_7 ),
        .Q(wait_time_cnt_reg[4]),
        .R(\wait_time_cnt[0]_i_1__0_n_0 ));
  CARRY4 \wait_time_cnt_reg[4]_i_1__0 
       (.CI(\wait_time_cnt_reg[0]_i_3__0_n_0 ),
        .CO({\wait_time_cnt_reg[4]_i_1__0_n_0 ,\wait_time_cnt_reg[4]_i_1__0_n_1 ,\wait_time_cnt_reg[4]_i_1__0_n_2 ,\wait_time_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[4]_i_1__0_n_4 ,\wait_time_cnt_reg[4]_i_1__0_n_5 ,\wait_time_cnt_reg[4]_i_1__0_n_6 ,\wait_time_cnt_reg[4]_i_1__0_n_7 }),
        .S({\wait_time_cnt[4]_i_2__0_n_0 ,\wait_time_cnt[4]_i_3__0_n_0 ,\wait_time_cnt[4]_i_4__0_n_0 ,\wait_time_cnt[4]_i_5__0_n_0 }));
  FDSE \wait_time_cnt_reg[5] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__0_n_6 ),
        .Q(wait_time_cnt_reg[5]),
        .S(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDSE \wait_time_cnt_reg[6] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__0_n_5 ),
        .Q(wait_time_cnt_reg[6]),
        .S(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDSE \wait_time_cnt_reg[7] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__0_n_4 ),
        .Q(wait_time_cnt_reg[7]),
        .S(\wait_time_cnt[0]_i_1__0_n_0 ));
  FDSE \wait_time_cnt_reg[8] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__0_n_7 ),
        .Q(wait_time_cnt_reg[8]),
        .S(\wait_time_cnt[0]_i_1__0_n_0 ));
  CARRY4 \wait_time_cnt_reg[8]_i_1__0 
       (.CI(\wait_time_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\wait_time_cnt_reg[8]_i_1__0_n_0 ,\wait_time_cnt_reg[8]_i_1__0_n_1 ,\wait_time_cnt_reg[8]_i_1__0_n_2 ,\wait_time_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[8]_i_1__0_n_4 ,\wait_time_cnt_reg[8]_i_1__0_n_5 ,\wait_time_cnt_reg[8]_i_1__0_n_6 ,\wait_time_cnt_reg[8]_i_1__0_n_7 }),
        .S({\wait_time_cnt[8]_i_2__0_n_0 ,\wait_time_cnt[8]_i_3__0_n_0 ,\wait_time_cnt[8]_i_4__0_n_0 ,\wait_time_cnt[8]_i_5__0_n_0 }));
  FDSE \wait_time_cnt_reg[9] 
       (.C(sysclk_in),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__0_n_6 ),
        .Q(wait_time_cnt_reg[9]),
        .S(\wait_time_cnt[0]_i_1__0_n_0 ));
endmodule

(* ORIG_REF_NAME = "gtx3g_common" *) 
module gtx3g_bert_0_gtx3g_common
   (gt0_qplllock_in,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    gt0_qpllrefclklost_in,
    Q0_CLK1_GTREFCLK_OUT,
    CLK,
    gt0_qpllreset_t);
  output gt0_qplllock_in;
  output gt0_qplloutclk_in;
  output gt0_qplloutrefclk_in;
  output gt0_qpllrefclklost_in;
  input Q0_CLK1_GTREFCLK_OUT;
  input CLK;
  input gt0_qpllreset_t;

  wire CLK;
  wire Q0_CLK1_GTREFCLK_OUT;
  wire gt0_qplllock_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_qpllrefclklost_in;
  wire gt0_qpllreset_t;
  wire NLW_gtxe2_common_i_DRPRDY_UNCONNECTED;
  wire NLW_gtxe2_common_i_QPLLFBCLKLOST_UNCONNECTED;
  wire NLW_gtxe2_common_i_REFCLKOUTMONITOR_UNCONNECTED;
  wire [15:0]NLW_gtxe2_common_i_DRPDO_UNCONNECTED;
  wire [7:0]NLW_gtxe2_common_i_QPLLDMONITOR_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  GTXE2_COMMON #(
    .BIAS_CFG(64'h0000040000001000),
    .COMMON_CFG(32'h00000000),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_QPLLLOCKDETCLK_INVERTED(1'b0),
    .QPLL_CFG(27'h06801C1),
    .QPLL_CLKOUT_CFG(4'b0000),
    .QPLL_COARSE_FREQ_OVRD(6'b010000),
    .QPLL_COARSE_FREQ_OVRD_EN(1'b0),
    .QPLL_CP(10'b0000011111),
    .QPLL_CP_MONITOR_EN(1'b0),
    .QPLL_DMONITOR_SEL(1'b0),
    .QPLL_FBDIV(10'b0010000000),
    .QPLL_FBDIV_MONITOR_EN(1'b0),
    .QPLL_FBDIV_RATIO(1'b1),
    .QPLL_INIT_CFG(24'h000006),
    .QPLL_LOCK_CFG(16'h21E8),
    .QPLL_LPF(4'b1111),
    .QPLL_REFCLK_DIV(1),
    .SIM_QPLLREFCLK_SEL(3'b010),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_VERSION("4.0")) 
    gtxe2_common_i
       (.BGBYPASSB(1'b1),
        .BGMONITORENB(1'b1),
        .BGPDB(1'b1),
        .BGRCALOVRD({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(1'b0),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO(NLW_gtxe2_common_i_DRPDO_UNCONNECTED[15:0]),
        .DRPEN(1'b0),
        .DRPRDY(NLW_gtxe2_common_i_DRPRDY_UNCONNECTED),
        .DRPWE(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(1'b0),
        .GTREFCLK1(Q0_CLK1_GTREFCLK_OUT),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .PMARSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLDMONITOR(NLW_gtxe2_common_i_QPLLDMONITOR_UNCONNECTED[7:0]),
        .QPLLFBCLKLOST(NLW_gtxe2_common_i_QPLLFBCLKLOST_UNCONNECTED),
        .QPLLLOCK(gt0_qplllock_in),
        .QPLLLOCKDETCLK(CLK),
        .QPLLLOCKEN(1'b1),
        .QPLLOUTCLK(gt0_qplloutclk_in),
        .QPLLOUTREFCLK(gt0_qplloutrefclk_in),
        .QPLLOUTRESET(1'b0),
        .QPLLPD(1'b0),
        .QPLLREFCLKLOST(gt0_qpllrefclklost_in),
        .QPLLREFCLKSEL({1'b0,1'b1,1'b0}),
        .QPLLRESET(gt0_qpllreset_t),
        .QPLLRSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLRSVD2({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .RCALENB(1'b1),
        .REFCLKOUTMONITOR(NLW_gtxe2_common_i_REFCLKOUTMONITOR_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "gtx3g_common_reset" *) 
module gtx3g_bert_0_gtx3g_common_reset
   (gt0_qpllreset_t,
    CLK,
    gt0_qpllreset_out);
  output gt0_qpllreset_t;
  input CLK;
  input gt0_qpllreset_out;

  wire CLK;
  wire COMMON_RESET_i_1_n_0;
  wire common_reset_asserted;
  wire common_reset_asserted_i_1_n_0;
  wire commonreset_i;
  wire gt0_qpllreset_out;
  wire gt0_qpllreset_t;
  wire init_wait_count;
  wire \init_wait_count[0]_i_1_n_0 ;
  wire \init_wait_count[6]_i_2_n_0 ;
  wire \init_wait_count[7]_i_3_n_0 ;
  wire [7:0]init_wait_count_reg__0;
  wire init_wait_done_i_1_n_0;
  wire init_wait_done_reg_n_0;
  wire [7:1]p_0_in;
  wire state;
  wire state_i_1_n_0;

  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'h74)) 
    COMMON_RESET_i_1
       (.I0(common_reset_asserted),
        .I1(state),
        .I2(commonreset_i),
        .O(COMMON_RESET_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    COMMON_RESET_reg
       (.C(CLK),
        .CE(1'b1),
        .D(COMMON_RESET_i_1_n_0),
        .Q(commonreset_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'hE)) 
    common_reset_asserted_i_1
       (.I0(state),
        .I1(common_reset_asserted),
        .O(common_reset_asserted_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    common_reset_asserted_reg
       (.C(CLK),
        .CE(1'b1),
        .D(common_reset_asserted_i_1_n_0),
        .Q(common_reset_asserted),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    gtxe2_common_i_i_1
       (.I0(commonreset_i),
        .I1(gt0_qpllreset_out),
        .O(gt0_qpllreset_t));
  LUT1 #(
    .INIT(2'h1)) 
    \init_wait_count[0]_i_1 
       (.I0(init_wait_count_reg__0[0]),
        .O(\init_wait_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[1]_i_1 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \init_wait_count[2]_i_1 
       (.I0(init_wait_count_reg__0[1]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \init_wait_count[3]_i_1 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[1]),
        .I3(init_wait_count_reg__0[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \init_wait_count[4]_i_1 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[3]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[1]),
        .I4(init_wait_count_reg__0[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[5]_i_1 
       (.I0(init_wait_count_reg__0[3]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[4]),
        .I3(init_wait_count_reg__0[0]),
        .I4(init_wait_count_reg__0[1]),
        .I5(init_wait_count_reg__0[5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[6]_i_1 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[5]),
        .I4(\init_wait_count[6]_i_2_n_0 ),
        .I5(init_wait_count_reg__0[6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \init_wait_count[6]_i_2 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(\init_wait_count[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \init_wait_count[7]_i_1 
       (.I0(init_wait_count_reg__0[6]),
        .I1(init_wait_count_reg__0[7]),
        .I2(init_wait_count_reg__0[0]),
        .I3(\init_wait_count[7]_i_3_n_0 ),
        .I4(init_wait_count_reg__0[1]),
        .O(init_wait_count));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \init_wait_count[7]_i_2 
       (.I0(\init_wait_count[7]_i_3_n_0 ),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[6]),
        .I4(init_wait_count_reg__0[7]),
        .O(p_0_in[7]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \init_wait_count[7]_i_3 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[5]),
        .O(\init_wait_count[7]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[0] 
       (.C(CLK),
        .CE(init_wait_count),
        .D(\init_wait_count[0]_i_1_n_0 ),
        .Q(init_wait_count_reg__0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[1] 
       (.C(CLK),
        .CE(init_wait_count),
        .D(p_0_in[1]),
        .Q(init_wait_count_reg__0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[2] 
       (.C(CLK),
        .CE(init_wait_count),
        .D(p_0_in[2]),
        .Q(init_wait_count_reg__0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[3] 
       (.C(CLK),
        .CE(init_wait_count),
        .D(p_0_in[3]),
        .Q(init_wait_count_reg__0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[4] 
       (.C(CLK),
        .CE(init_wait_count),
        .D(p_0_in[4]),
        .Q(init_wait_count_reg__0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[5] 
       (.C(CLK),
        .CE(init_wait_count),
        .D(p_0_in[5]),
        .Q(init_wait_count_reg__0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[6] 
       (.C(CLK),
        .CE(init_wait_count),
        .D(p_0_in[6]),
        .Q(init_wait_count_reg__0[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[7] 
       (.C(CLK),
        .CE(init_wait_count),
        .D(p_0_in[7]),
        .Q(init_wait_count_reg__0[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    init_wait_done_i_1
       (.I0(init_wait_done_reg_n_0),
        .I1(\init_wait_count[7]_i_3_n_0 ),
        .I2(init_wait_count_reg__0[1]),
        .I3(init_wait_count_reg__0[0]),
        .I4(init_wait_count_reg__0[7]),
        .I5(init_wait_count_reg__0[6]),
        .O(init_wait_done_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    init_wait_done_reg
       (.C(CLK),
        .CE(1'b1),
        .D(init_wait_done_i_1_n_0),
        .Q(init_wait_done_reg_n_0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    state_i_1
       (.I0(init_wait_done_reg_n_0),
        .I1(state),
        .O(state_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    state_reg
       (.C(CLK),
        .CE(1'b1),
        .D(state_i_1_n_0),
        .Q(state),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* EXAMPLE_CONFIG_INDEPENDENT_LANES = "1" *) (* EXAMPLE_LANE_WITH_START_CHAR = "0" *) 
(* EXAMPLE_SIM_GTRESET_SPEEDUP = "TRUE" *) (* EXAMPLE_USE_CHIPSCOPE = "0" *) (* EXAMPLE_WORDS_IN_BRAM = "512" *) 
(* LOOPBACK_MODE = "3'b010" *) (* ORIG_REF_NAME = "gtx3g_exdes" *) (* STABLE_CLOCK_PERIOD = "10" *) 
module gtx3g_bert_0_gtx3g_exdes
   (Q0_CLK1_GTREFCLK_PAD_N_IN,
    Q0_CLK1_GTREFCLK_PAD_P_IN,
    DRPCLK_IN,
    TRACK_DATA_OUT,
    RXN_IN,
    RXP_IN,
    TXN_OUT,
    TXP_OUT,
    TEST_RESET,
    PATTERN_MODE,
    ERROR_INSERT_MASK,
    ECC_CODE_EN,
    USER_CLK,
    DATA_COUNT_OUT,
    PATTERN_ERROR_COUNT_OUT,
    TEST_OVER_OUT,
    PATTERN_ERROR_OUT,
    BLOCK_ERROR_OUT,
    RXDATA_OUT,
    GTX_RESETDONE_OUT);
  input Q0_CLK1_GTREFCLK_PAD_N_IN;
  input Q0_CLK1_GTREFCLK_PAD_P_IN;
  input DRPCLK_IN;
  output TRACK_DATA_OUT;
  input [1:0]RXN_IN;
  input [1:0]RXP_IN;
  output [1:0]TXN_OUT;
  output [1:0]TXP_OUT;
  input TEST_RESET;
  input [2:0]PATTERN_MODE;
  input [31:0]ERROR_INSERT_MASK;
  input ECC_CODE_EN;
  output USER_CLK;
  output [31:0]DATA_COUNT_OUT;
  output [31:0]PATTERN_ERROR_COUNT_OUT;
  output TEST_OVER_OUT;
  output PATTERN_ERROR_OUT;
  output [3:0]BLOCK_ERROR_OUT;
  output [15:0]RXDATA_OUT;
  output GTX_RESETDONE_OUT;

  wire \<const0> ;
  wire [1:0]\^BLOCK_ERROR_OUT ;
  wire [31:0]DATA_COUNT_OUT;
  wire DRPCLK_IN;
  wire ECC_CODE_EN;
  wire GTX_RESETDONE_OUT;
  wire [31:0]PATTERN_ERROR_COUNT_OUT;
  wire PATTERN_ERROR_OUT;
  wire [2:0]PATTERN_MODE;
  wire Q0_CLK1_GTREFCLK_PAD_N_IN;
  wire Q0_CLK1_GTREFCLK_PAD_P_IN;
  wire [15:0]RXDATA_OUT;
  wire [1:0]RXN_IN;
  wire [1:0]RXP_IN;
  wire TEST_OVER_OUT;
  wire TEST_RESET;
  wire TRACK_DATA_OUT;
  wire [1:0]TXN_OUT;
  wire [1:0]TXP_OUT;
  wire USER_CLK;
  wire drpclk_in_i;
  wire [1:0]gt0_rxcharisk_i;
  (* async_reg = "true" *) wire gt0_rxfsmresetdone_r;
  (* async_reg = "true" *) wire gt0_rxfsmresetdone_r2;
  wire gt0_rxmcommaalignen_i;
  (* async_reg = "true" *) wire gt0_rxresetdone_r;
  (* async_reg = "true" *) wire gt0_rxresetdone_r2;
  (* async_reg = "true" *) wire gt0_rxresetdone_r3;
  (* async_reg = "true" *) wire gt0_rxresetdone_vio_r;
  (* async_reg = "true" *) wire gt0_rxresetdone_vio_r2;
  (* async_reg = "true" *) wire gt0_rxresetdone_vio_r3;
  wire gt0_track_data_i;
  wire [0:0]gt0_txcharisk_i;
  wire [15:0]gt0_txdata_i;
  (* async_reg = "true" *) wire gt0_txfsmresetdone_r;
  (* async_reg = "true" *) wire gt0_txfsmresetdone_r2;
  wire [1:0]gt1_rxcharisk_i;
  wire [15:0]gt1_rxdata_i;
  (* async_reg = "true" *) wire gt1_rxfsmresetdone_r;
  (* async_reg = "true" *) wire gt1_rxfsmresetdone_r2;
  wire gt1_rxmcommaalignen_i;
  (* async_reg = "true" *) wire gt1_rxresetdone_r;
  (* async_reg = "true" *) wire gt1_rxresetdone_r2;
  (* async_reg = "true" *) wire gt1_rxresetdone_r3;
  (* async_reg = "true" *) wire gt1_rxresetdone_vio_r;
  (* async_reg = "true" *) wire gt1_rxresetdone_vio_r2;
  (* async_reg = "true" *) wire gt1_rxresetdone_vio_r3;
  wire gt1_track_data_i;
  wire [0:0]gt1_txcharisk_i;
  wire [15:0]gt1_txdata_i;
  (* async_reg = "true" *) wire gt1_txfsmresetdone_r;
  (* async_reg = "true" *) wire gt1_txfsmresetdone_r2;
  (* async_reg = "true" *) wire gt_txfsmresetdone_r;
  (* async_reg = "true" *) wire gt_txfsmresetdone_r2;
  wire gtx3g_support_i_n_41;
  wire gtx3g_support_i_n_42;
  wire gtx3g_support_i_n_43;
  wire gtx3g_support_i_n_44;
  (* MARK_DEBUG *) wire rxresetdone_vio_i;
  (* MARK_DEBUG *) wire soft_reset_vio_i;

  assign BLOCK_ERROR_OUT[3] = \<const0> ;
  assign BLOCK_ERROR_OUT[2] = \<const0> ;
  assign BLOCK_ERROR_OUT[1:0] = \^BLOCK_ERROR_OUT [1:0];
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG DRP_CLK_BUFG
       (.I(DRPCLK_IN),
        .O(drpclk_in_i));
  GND GND
       (.G(\<const0> ));
  LUT3 #(
    .INIT(8'h80)) 
    GTX_RESETDONE_OUT_INST_0
       (.I0(gt0_rxresetdone_r3),
        .I1(gt1_txfsmresetdone_r2),
        .I2(gt0_txfsmresetdone_r2),
        .O(GTX_RESETDONE_OUT));
  gtx3g_bert_0_gtx3g_GT_FRAME_CHECK__xdcDup__1 gt0_frame_check
       (.BLOCK_ERROR_OUT(\^BLOCK_ERROR_OUT ),
        .D(gt0_rxcharisk_i),
        .DATA_COUNT_OUT(DATA_COUNT_OUT),
        .ECC_CODE_EN(ECC_CODE_EN),
        .GT0_TXUSRCLK_OUT(USER_CLK),
        .PATTERN_ERROR_COUNT_OUT(PATTERN_ERROR_COUNT_OUT),
        .PATTERN_ERROR_OUT(PATTERN_ERROR_OUT),
        .PATTERN_MODE(PATTERN_MODE),
        .RXDATA_OUT(RXDATA_OUT),
        .TEST_OVER_OUT(TEST_OVER_OUT),
        .TEST_RESET(TEST_RESET),
        .TRACK_DATA_OUT(TRACK_DATA_OUT),
        .gt0_rxpcommaalignen_in(gt0_rxmcommaalignen_i),
        .gt0_track_data_i(gt0_track_data_i),
        .gt1_track_data_i(gt1_track_data_i),
        .out(gt0_rxresetdone_r3));
  gtx3g_bert_0_gtx3g_GT_FRAME_GEN gt0_frame_gen
       (.ECC_CODE_EN(ECC_CODE_EN),
        .GT0_TXUSRCLK_OUT(USER_CLK),
        .PATTERN_MODE(PATTERN_MODE),
        .Q(gt0_txdata_i),
        .TEST_RESET(TEST_RESET),
        .gt0_txcharisk_in(gt0_txcharisk_i),
        .out(gt0_txfsmresetdone_r2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE gt0_rxresetdone_r2_reg
       (.C(USER_CLK),
        .CE(1'b1),
        .CLR(gtx3g_support_i_n_43),
        .D(gt0_rxresetdone_r),
        .Q(gt0_rxresetdone_r2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE gt0_rxresetdone_r3_reg
       (.C(USER_CLK),
        .CE(1'b1),
        .CLR(gtx3g_support_i_n_43),
        .D(gt0_rxresetdone_r2),
        .Q(gt0_rxresetdone_r3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE gt0_rxresetdone_r_reg
       (.C(USER_CLK),
        .CE(1'b1),
        .CLR(gtx3g_support_i_n_43),
        .D(1'b1),
        .Q(gt0_rxresetdone_r));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE gt0_txfsmresetdone_r2_reg
       (.C(USER_CLK),
        .CE(1'b1),
        .CLR(gtx3g_support_i_n_42),
        .D(gt0_txfsmresetdone_r),
        .Q(gt0_txfsmresetdone_r2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE gt0_txfsmresetdone_r_reg
       (.C(USER_CLK),
        .CE(1'b1),
        .CLR(gtx3g_support_i_n_42),
        .D(1'b1),
        .Q(gt0_txfsmresetdone_r));
  gtx3g_bert_0_gtx3g_GT_FRAME_CHECK gt1_frame_check
       (.D(gt1_rxdata_i),
        .ECC_CODE_EN(ECC_CODE_EN),
        .GT0_TXUSRCLK_OUT(USER_CLK),
        .TEST_RESET(TEST_RESET),
        .gt1_rxpcommaalignen_in(gt1_rxmcommaalignen_i),
        .gt1_track_data_i(gt1_track_data_i),
        .gtrxreset_i_reg(gt1_rxcharisk_i),
        .out(gt1_rxresetdone_r3));
  gtx3g_bert_0_gtx3g_GT_FRAME_GEN_0 gt1_frame_gen
       (.ECC_CODE_EN(ECC_CODE_EN),
        .GT0_TXUSRCLK_OUT(USER_CLK),
        .PATTERN_MODE(PATTERN_MODE),
        .Q(gt1_txdata_i),
        .TEST_RESET(TEST_RESET),
        .gt1_txcharisk_in(gt1_txcharisk_i),
        .out(gt1_txfsmresetdone_r2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE gt1_rxresetdone_r2_reg
       (.C(USER_CLK),
        .CE(1'b1),
        .CLR(gtx3g_support_i_n_44),
        .D(gt1_rxresetdone_r),
        .Q(gt1_rxresetdone_r2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE gt1_rxresetdone_r3_reg
       (.C(USER_CLK),
        .CE(1'b1),
        .CLR(gtx3g_support_i_n_44),
        .D(gt1_rxresetdone_r2),
        .Q(gt1_rxresetdone_r3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE gt1_rxresetdone_r_reg
       (.C(USER_CLK),
        .CE(1'b1),
        .CLR(gtx3g_support_i_n_44),
        .D(1'b1),
        .Q(gt1_rxresetdone_r));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE gt1_txfsmresetdone_r2_reg
       (.C(USER_CLK),
        .CE(1'b1),
        .CLR(gtx3g_support_i_n_41),
        .D(gt1_txfsmresetdone_r),
        .Q(gt1_txfsmresetdone_r2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE gt1_txfsmresetdone_r_reg
       (.C(USER_CLK),
        .CE(1'b1),
        .CLR(gtx3g_support_i_n_41),
        .D(1'b1),
        .Q(gt1_txfsmresetdone_r));
  gtx3g_bert_0_gtx3g_support gtx3g_support_i
       (.CLK(drpclk_in_i),
        .GT1_RXUSRCLK2_OUT(USER_CLK),
        .Q(gt0_txdata_i),
        .Q0_CLK1_GTREFCLK_PAD_N_IN(Q0_CLK1_GTREFCLK_PAD_N_IN),
        .Q0_CLK1_GTREFCLK_PAD_P_IN(Q0_CLK1_GTREFCLK_PAD_P_IN),
        .RXDATA_OUT(RXDATA_OUT),
        .RXN_IN(RXN_IN),
        .RXP_IN(RXP_IN),
        .TXN_OUT(TXN_OUT),
        .TXP_OUT(TXP_OUT),
        .\TX_DATA_OUT_reg[15] (gt1_txdata_i),
        .gt0_rxcharisk_out(gt0_rxcharisk_i),
        .gt0_rxpcommaalignen_in(gt0_rxmcommaalignen_i),
        .gt0_rxresetdone_r_reg(gtx3g_support_i_n_43),
        .gt0_track_data_i(gt0_track_data_i),
        .gt0_txcharisk_in(gt0_txcharisk_i),
        .gt0_txfsmresetdone_r_reg(gtx3g_support_i_n_42),
        .gt1_rxcharisk_out(gt1_rxcharisk_i),
        .gt1_rxdata_out(gt1_rxdata_i),
        .gt1_rxpcommaalignen_in(gt1_rxmcommaalignen_i),
        .gt1_rxresetdone_r_reg(gtx3g_support_i_n_44),
        .gt1_track_data_i(gt1_track_data_i),
        .gt1_txcharisk_in(gt1_txcharisk_i),
        .gt1_txfsmresetdone_r_reg(gtx3g_support_i_n_41));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(soft_reset_vio_i));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(gt_txfsmresetdone_r));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(gt1_rxresetdone_vio_r));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(gt1_rxresetdone_vio_r2));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(gt1_rxresetdone_vio_r3));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(rxresetdone_vio_i));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(gt_txfsmresetdone_r2));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(gt0_rxfsmresetdone_r));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(gt0_rxfsmresetdone_r2));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(gt0_rxresetdone_vio_r));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(gt0_rxresetdone_vio_r2));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(gt0_rxresetdone_vio_r3));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(gt1_rxfsmresetdone_r));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(gt1_rxfsmresetdone_r2));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* EXAMPLE_SIMULATION = "0" *) (* EXAMPLE_SIM_GTRESET_SPEEDUP = "TRUE" *) 
(* EXAMPLE_USE_CHIPSCOPE = "0" *) (* ORIG_REF_NAME = "gtx3g_init" *) (* RX_CDRLOCK_TIME = "33333" *) 
(* STABLE_CLOCK_PERIOD = "10" *) (* WAIT_TIME_CDRLOCK = "3333" *) 
module gtx3g_bert_0_gtx3g_init
   (sysclk_in,
    soft_reset_tx_in,
    soft_reset_rx_in,
    dont_reset_on_data_error_in,
    gt0_tx_fsm_reset_done_out,
    gt0_rx_fsm_reset_done_out,
    gt0_data_valid_in,
    gt1_tx_fsm_reset_done_out,
    gt1_rx_fsm_reset_done_out,
    gt1_data_valid_in,
    gt0_drpaddr_in,
    gt0_drpclk_in,
    gt0_drpdi_in,
    gt0_drpdo_out,
    gt0_drpen_in,
    gt0_drprdy_out,
    gt0_drpwe_in,
    gt0_dmonitorout_out,
    gt0_loopback_in,
    gt0_rxrate_in,
    gt0_rxpd_in,
    gt0_txpd_in,
    gt0_eyescanreset_in,
    gt0_rxuserrdy_in,
    gt0_eyescandataerror_out,
    gt0_eyescantrigger_in,
    gt0_rxcdrhold_in,
    gt0_rxclkcorcnt_out,
    gt0_rxusrclk_in,
    gt0_rxusrclk2_in,
    gt0_rxdata_out,
    gt0_rxprbserr_out,
    gt0_rxprbssel_in,
    gt0_rxprbscntreset_in,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    gt0_gtxrxp_in,
    gt0_gtxrxn_in,
    gt0_rxbufreset_in,
    gt0_rxbufstatus_out,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    gt0_rxmcommaalignen_in,
    gt0_rxpcommaalignen_in,
    gt0_rxdfelpmreset_in,
    gt0_rxmonitorout_out,
    gt0_rxmonitorsel_in,
    gt0_rxratedone_out,
    gt0_rxoutclkfabric_out,
    gt0_gtrxreset_in,
    gt0_rxpcsreset_in,
    gt0_rxpmareset_in,
    gt0_rxlpmen_in,
    gt0_rxpolarity_in,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxresetdone_out,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    gt0_gttxreset_in,
    gt0_txuserrdy_in,
    gt0_txusrclk_in,
    gt0_txusrclk2_in,
    gt0_txelecidle_in,
    gt0_txprbsforceerr_in,
    gt0_txdiffctrl_in,
    gt0_txdata_in,
    gt0_gtxtxn_out,
    gt0_gtxtxp_out,
    gt0_txoutclk_out,
    gt0_txoutclkfabric_out,
    gt0_txoutclkpcs_out,
    gt0_txcharisk_in,
    gt0_txpcsreset_in,
    gt0_txpmareset_in,
    gt0_txresetdone_out,
    gt0_txpolarity_in,
    gt0_tx8b10bbypass_in,
    gt0_txprbssel_in,
    gt1_drpaddr_in,
    gt1_drpclk_in,
    gt1_drpdi_in,
    gt1_drpdo_out,
    gt1_drpen_in,
    gt1_drprdy_out,
    gt1_drpwe_in,
    gt1_dmonitorout_out,
    gt1_loopback_in,
    gt1_rxrate_in,
    gt1_rxpd_in,
    gt1_txpd_in,
    gt1_eyescanreset_in,
    gt1_rxuserrdy_in,
    gt1_eyescandataerror_out,
    gt1_eyescantrigger_in,
    gt1_rxcdrhold_in,
    gt1_rxclkcorcnt_out,
    gt1_rxusrclk_in,
    gt1_rxusrclk2_in,
    gt1_rxdata_out,
    gt1_rxprbserr_out,
    gt1_rxprbssel_in,
    gt1_rxprbscntreset_in,
    gt1_rxdisperr_out,
    gt1_rxnotintable_out,
    gt1_gtxrxp_in,
    gt1_gtxrxn_in,
    gt1_rxbufreset_in,
    gt1_rxbufstatus_out,
    gt1_rxbyteisaligned_out,
    gt1_rxbyterealign_out,
    gt1_rxcommadet_out,
    gt1_rxmcommaalignen_in,
    gt1_rxpcommaalignen_in,
    gt1_rxdfelpmreset_in,
    gt1_rxmonitorout_out,
    gt1_rxmonitorsel_in,
    gt1_rxratedone_out,
    gt1_rxoutclkfabric_out,
    gt1_gtrxreset_in,
    gt1_rxpcsreset_in,
    gt1_rxpmareset_in,
    gt1_rxlpmen_in,
    gt1_rxpolarity_in,
    gt1_rxchariscomma_out,
    gt1_rxcharisk_out,
    gt1_rxresetdone_out,
    gt1_txpostcursor_in,
    gt1_txprecursor_in,
    gt1_gttxreset_in,
    gt1_txuserrdy_in,
    gt1_txusrclk_in,
    gt1_txusrclk2_in,
    gt1_txelecidle_in,
    gt1_txprbsforceerr_in,
    gt1_txdiffctrl_in,
    gt1_txdata_in,
    gt1_gtxtxn_out,
    gt1_gtxtxp_out,
    gt1_txoutclk_out,
    gt1_txoutclkfabric_out,
    gt1_txoutclkpcs_out,
    gt1_txcharisk_in,
    gt1_txpcsreset_in,
    gt1_txpmareset_in,
    gt1_txresetdone_out,
    gt1_txpolarity_in,
    gt1_tx8b10bbypass_in,
    gt1_txprbssel_in,
    gt0_qplllock_in,
    gt0_qpllrefclklost_in,
    gt0_qpllreset_out,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in);
  input sysclk_in;
  input soft_reset_tx_in;
  input soft_reset_rx_in;
  input dont_reset_on_data_error_in;
  output gt0_tx_fsm_reset_done_out;
  output gt0_rx_fsm_reset_done_out;
  input gt0_data_valid_in;
  output gt1_tx_fsm_reset_done_out;
  output gt1_rx_fsm_reset_done_out;
  input gt1_data_valid_in;
  input [8:0]gt0_drpaddr_in;
  input gt0_drpclk_in;
  input [15:0]gt0_drpdi_in;
  output [15:0]gt0_drpdo_out;
  input gt0_drpen_in;
  output gt0_drprdy_out;
  input gt0_drpwe_in;
  output [7:0]gt0_dmonitorout_out;
  input [2:0]gt0_loopback_in;
  input [2:0]gt0_rxrate_in;
  input [1:0]gt0_rxpd_in;
  input [1:0]gt0_txpd_in;
  input gt0_eyescanreset_in;
  input gt0_rxuserrdy_in;
  output gt0_eyescandataerror_out;
  input gt0_eyescantrigger_in;
  input gt0_rxcdrhold_in;
  output [1:0]gt0_rxclkcorcnt_out;
  input gt0_rxusrclk_in;
  input gt0_rxusrclk2_in;
  output [15:0]gt0_rxdata_out;
  output gt0_rxprbserr_out;
  input [2:0]gt0_rxprbssel_in;
  input gt0_rxprbscntreset_in;
  output [1:0]gt0_rxdisperr_out;
  output [1:0]gt0_rxnotintable_out;
  input gt0_gtxrxp_in;
  input gt0_gtxrxn_in;
  input gt0_rxbufreset_in;
  output [2:0]gt0_rxbufstatus_out;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  input gt0_rxmcommaalignen_in;
  input gt0_rxpcommaalignen_in;
  input gt0_rxdfelpmreset_in;
  output [6:0]gt0_rxmonitorout_out;
  input [1:0]gt0_rxmonitorsel_in;
  output gt0_rxratedone_out;
  output gt0_rxoutclkfabric_out;
  input gt0_gtrxreset_in;
  input gt0_rxpcsreset_in;
  input gt0_rxpmareset_in;
  input gt0_rxlpmen_in;
  input gt0_rxpolarity_in;
  output [1:0]gt0_rxchariscomma_out;
  output [1:0]gt0_rxcharisk_out;
  output gt0_rxresetdone_out;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input gt0_gttxreset_in;
  input gt0_txuserrdy_in;
  input gt0_txusrclk_in;
  input gt0_txusrclk2_in;
  input gt0_txelecidle_in;
  input gt0_txprbsforceerr_in;
  input [3:0]gt0_txdiffctrl_in;
  input [15:0]gt0_txdata_in;
  output gt0_gtxtxn_out;
  output gt0_gtxtxp_out;
  output gt0_txoutclk_out;
  output gt0_txoutclkfabric_out;
  output gt0_txoutclkpcs_out;
  input [1:0]gt0_txcharisk_in;
  input gt0_txpcsreset_in;
  input gt0_txpmareset_in;
  output gt0_txresetdone_out;
  input gt0_txpolarity_in;
  input [1:0]gt0_tx8b10bbypass_in;
  input [2:0]gt0_txprbssel_in;
  input [8:0]gt1_drpaddr_in;
  input gt1_drpclk_in;
  input [15:0]gt1_drpdi_in;
  output [15:0]gt1_drpdo_out;
  input gt1_drpen_in;
  output gt1_drprdy_out;
  input gt1_drpwe_in;
  output [7:0]gt1_dmonitorout_out;
  input [2:0]gt1_loopback_in;
  input [2:0]gt1_rxrate_in;
  input [1:0]gt1_rxpd_in;
  input [1:0]gt1_txpd_in;
  input gt1_eyescanreset_in;
  input gt1_rxuserrdy_in;
  output gt1_eyescandataerror_out;
  input gt1_eyescantrigger_in;
  input gt1_rxcdrhold_in;
  output [1:0]gt1_rxclkcorcnt_out;
  input gt1_rxusrclk_in;
  input gt1_rxusrclk2_in;
  output [15:0]gt1_rxdata_out;
  output gt1_rxprbserr_out;
  input [2:0]gt1_rxprbssel_in;
  input gt1_rxprbscntreset_in;
  output [1:0]gt1_rxdisperr_out;
  output [1:0]gt1_rxnotintable_out;
  input gt1_gtxrxp_in;
  input gt1_gtxrxn_in;
  input gt1_rxbufreset_in;
  output [2:0]gt1_rxbufstatus_out;
  output gt1_rxbyteisaligned_out;
  output gt1_rxbyterealign_out;
  output gt1_rxcommadet_out;
  input gt1_rxmcommaalignen_in;
  input gt1_rxpcommaalignen_in;
  input gt1_rxdfelpmreset_in;
  output [6:0]gt1_rxmonitorout_out;
  input [1:0]gt1_rxmonitorsel_in;
  output gt1_rxratedone_out;
  output gt1_rxoutclkfabric_out;
  input gt1_gtrxreset_in;
  input gt1_rxpcsreset_in;
  input gt1_rxpmareset_in;
  input gt1_rxlpmen_in;
  input gt1_rxpolarity_in;
  output [1:0]gt1_rxchariscomma_out;
  output [1:0]gt1_rxcharisk_out;
  output gt1_rxresetdone_out;
  input [4:0]gt1_txpostcursor_in;
  input [4:0]gt1_txprecursor_in;
  input gt1_gttxreset_in;
  input gt1_txuserrdy_in;
  input gt1_txusrclk_in;
  input gt1_txusrclk2_in;
  input gt1_txelecidle_in;
  input gt1_txprbsforceerr_in;
  input [3:0]gt1_txdiffctrl_in;
  input [15:0]gt1_txdata_in;
  output gt1_gtxtxn_out;
  output gt1_gtxtxp_out;
  output gt1_txoutclk_out;
  output gt1_txoutclkfabric_out;
  output gt1_txoutclkpcs_out;
  input [1:0]gt1_txcharisk_in;
  input gt1_txpcsreset_in;
  input gt1_txpmareset_in;
  output gt1_txresetdone_out;
  input gt1_txpolarity_in;
  input [1:0]gt1_tx8b10bbypass_in;
  input [2:0]gt1_txprbssel_in;
  input gt0_qplllock_in;
  input gt0_qpllrefclklost_in;
  output gt0_qpllreset_out;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;

  wire U0_TXDLYEN;
  wire [1:0]U0_TXDLYSRESET;
  wire [1:0]U0_TXDLYSRESETDONE;
  wire [1:0]U0_TXPHALIGN;
  wire [1:0]U0_TXPHALIGNDONE;
  wire [1:0]U0_TXPHINIT;
  wire [1:0]U0_TXPHINITDONE;
  wire U0_rst_tx_phalignment_i;
  wire [31:1]data0;
  wire dont_reset_on_data_error_in;
  wire gt0_data_valid_in;
  wire [7:0]gt0_dmonitorout_out;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gtrxreset_i;
  wire gt0_gttxreset_i;
  wire gt0_gtxrxn_in;
  wire gt0_gtxrxp_in;
  wire gt0_gtxtxn_out;
  wire gt0_gtxtxp_out;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplllock_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_qpllrefclklost_in;
  wire gt0_qpllreset_out;
  wire gt0_run_tx_phalignment_i;
  wire [31:1]gt0_rx_cdrlock_counter;
  wire \gt0_rx_cdrlock_counter[0]_i_1_n_0 ;
  wire \gt0_rx_cdrlock_counter[12]_i_3_n_0 ;
  wire \gt0_rx_cdrlock_counter[12]_i_4_n_0 ;
  wire \gt0_rx_cdrlock_counter[12]_i_5_n_0 ;
  wire \gt0_rx_cdrlock_counter[12]_i_6_n_0 ;
  wire \gt0_rx_cdrlock_counter[16]_i_3_n_0 ;
  wire \gt0_rx_cdrlock_counter[16]_i_4_n_0 ;
  wire \gt0_rx_cdrlock_counter[16]_i_5_n_0 ;
  wire \gt0_rx_cdrlock_counter[16]_i_6_n_0 ;
  wire \gt0_rx_cdrlock_counter[20]_i_3_n_0 ;
  wire \gt0_rx_cdrlock_counter[20]_i_4_n_0 ;
  wire \gt0_rx_cdrlock_counter[20]_i_5_n_0 ;
  wire \gt0_rx_cdrlock_counter[20]_i_6_n_0 ;
  wire \gt0_rx_cdrlock_counter[24]_i_3_n_0 ;
  wire \gt0_rx_cdrlock_counter[24]_i_4_n_0 ;
  wire \gt0_rx_cdrlock_counter[24]_i_5_n_0 ;
  wire \gt0_rx_cdrlock_counter[24]_i_6_n_0 ;
  wire \gt0_rx_cdrlock_counter[28]_i_3_n_0 ;
  wire \gt0_rx_cdrlock_counter[28]_i_4_n_0 ;
  wire \gt0_rx_cdrlock_counter[28]_i_5_n_0 ;
  wire \gt0_rx_cdrlock_counter[28]_i_6_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_10_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_11_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_12_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_13_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_2_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_3_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_4_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_5_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_7_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_8_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_9_n_0 ;
  wire \gt0_rx_cdrlock_counter[4]_i_3_n_0 ;
  wire \gt0_rx_cdrlock_counter[4]_i_4_n_0 ;
  wire \gt0_rx_cdrlock_counter[4]_i_5_n_0 ;
  wire \gt0_rx_cdrlock_counter[4]_i_6_n_0 ;
  wire \gt0_rx_cdrlock_counter[8]_i_3_n_0 ;
  wire \gt0_rx_cdrlock_counter[8]_i_4_n_0 ;
  wire \gt0_rx_cdrlock_counter[8]_i_5_n_0 ;
  wire \gt0_rx_cdrlock_counter[8]_i_6_n_0 ;
  wire \gt0_rx_cdrlock_counter_reg[12]_i_2_n_0 ;
  wire \gt0_rx_cdrlock_counter_reg[12]_i_2_n_1 ;
  wire \gt0_rx_cdrlock_counter_reg[12]_i_2_n_2 ;
  wire \gt0_rx_cdrlock_counter_reg[12]_i_2_n_3 ;
  wire \gt0_rx_cdrlock_counter_reg[16]_i_2_n_0 ;
  wire \gt0_rx_cdrlock_counter_reg[16]_i_2_n_1 ;
  wire \gt0_rx_cdrlock_counter_reg[16]_i_2_n_2 ;
  wire \gt0_rx_cdrlock_counter_reg[16]_i_2_n_3 ;
  wire \gt0_rx_cdrlock_counter_reg[20]_i_2_n_0 ;
  wire \gt0_rx_cdrlock_counter_reg[20]_i_2_n_1 ;
  wire \gt0_rx_cdrlock_counter_reg[20]_i_2_n_2 ;
  wire \gt0_rx_cdrlock_counter_reg[20]_i_2_n_3 ;
  wire \gt0_rx_cdrlock_counter_reg[24]_i_2_n_0 ;
  wire \gt0_rx_cdrlock_counter_reg[24]_i_2_n_1 ;
  wire \gt0_rx_cdrlock_counter_reg[24]_i_2_n_2 ;
  wire \gt0_rx_cdrlock_counter_reg[24]_i_2_n_3 ;
  wire \gt0_rx_cdrlock_counter_reg[28]_i_2_n_0 ;
  wire \gt0_rx_cdrlock_counter_reg[28]_i_2_n_1 ;
  wire \gt0_rx_cdrlock_counter_reg[28]_i_2_n_2 ;
  wire \gt0_rx_cdrlock_counter_reg[28]_i_2_n_3 ;
  wire \gt0_rx_cdrlock_counter_reg[31]_i_6_n_2 ;
  wire \gt0_rx_cdrlock_counter_reg[31]_i_6_n_3 ;
  wire \gt0_rx_cdrlock_counter_reg[4]_i_2_n_0 ;
  wire \gt0_rx_cdrlock_counter_reg[4]_i_2_n_1 ;
  wire \gt0_rx_cdrlock_counter_reg[4]_i_2_n_2 ;
  wire \gt0_rx_cdrlock_counter_reg[4]_i_2_n_3 ;
  wire \gt0_rx_cdrlock_counter_reg[8]_i_2_n_0 ;
  wire \gt0_rx_cdrlock_counter_reg[8]_i_2_n_1 ;
  wire \gt0_rx_cdrlock_counter_reg[8]_i_2_n_2 ;
  wire \gt0_rx_cdrlock_counter_reg[8]_i_2_n_3 ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[0] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[10] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[11] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[12] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[13] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[14] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[15] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[16] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[17] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[18] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[19] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[1] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[20] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[21] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[22] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[23] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[24] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[25] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[26] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[27] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[28] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[29] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[2] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[30] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[31] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[3] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[4] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[5] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[6] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[7] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[8] ;
  wire \gt0_rx_cdrlock_counter_reg_n_0_[9] ;
  wire gt0_rx_cdrlocked_i_1_n_0;
  wire gt0_rx_cdrlocked_reg_n_0;
  wire gt0_rx_fsm_reset_done_out;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [1:0]gt0_rxchariscomma_out;
  wire [1:0]gt0_rxcharisk_out;
  wire [1:0]gt0_rxclkcorcnt_out;
  wire gt0_rxcommadet_out;
  wire [15:0]gt0_rxdata_out;
  wire gt0_rxdfelpmreset_in;
  wire [1:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire gt0_rxmcommaalignen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [1:0]gt0_rxnotintable_out;
  wire gt0_rxoutclkfabric_out;
  wire gt0_rxpcommaalignen_in;
  wire gt0_rxpcsreset_in;
  wire [1:0]gt0_rxpd_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire gt0_rxresetdone_out;
  wire gt0_rxuserrdy_i;
  wire gt0_rxusrclk2_in;
  wire gt0_rxusrclk_in;
  wire [1:0]gt0_tx8b10bbypass_in;
  wire gt0_tx_fsm_reset_done_out;
  wire gt0_tx_phalignment_done_i;
  wire [1:0]gt0_txcharisk_in;
  wire [15:0]gt0_txdata_in;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txelecidle_in;
  wire gt0_txoutclk_out;
  wire gt0_txoutclkfabric_out;
  wire gt0_txoutclkpcs_out;
  wire gt0_txpcsreset_in;
  wire [1:0]gt0_txpd_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txresetdone_out;
  wire gt0_txuserrdy_i;
  wire gt0_txusrclk2_in;
  wire gt0_txusrclk_in;
  wire gt1_data_valid_in;
  wire [7:0]gt1_dmonitorout_out;
  wire [8:0]gt1_drpaddr_in;
  wire gt1_drpclk_in;
  wire [15:0]gt1_drpdi_in;
  wire [15:0]gt1_drpdo_out;
  wire gt1_drpen_in;
  wire gt1_drprdy_out;
  wire gt1_drpwe_in;
  wire gt1_eyescandataerror_out;
  wire gt1_eyescanreset_in;
  wire gt1_eyescantrigger_in;
  wire gt1_gtrxreset_i;
  wire gt1_gttxreset_i;
  wire gt1_gtxrxn_in;
  wire gt1_gtxrxp_in;
  wire gt1_gtxtxn_out;
  wire gt1_gtxtxp_out;
  wire [2:0]gt1_loopback_in;
  wire gt1_rst_tx_phalignment_i;
  wire gt1_run_tx_phalignment_i;
  wire [31:1]gt1_rx_cdrlock_counter;
  wire \gt1_rx_cdrlock_counter[0]_i_1_n_0 ;
  wire \gt1_rx_cdrlock_counter[12]_i_3_n_0 ;
  wire \gt1_rx_cdrlock_counter[12]_i_4_n_0 ;
  wire \gt1_rx_cdrlock_counter[12]_i_5_n_0 ;
  wire \gt1_rx_cdrlock_counter[12]_i_6_n_0 ;
  wire \gt1_rx_cdrlock_counter[16]_i_3_n_0 ;
  wire \gt1_rx_cdrlock_counter[16]_i_4_n_0 ;
  wire \gt1_rx_cdrlock_counter[16]_i_5_n_0 ;
  wire \gt1_rx_cdrlock_counter[16]_i_6_n_0 ;
  wire \gt1_rx_cdrlock_counter[20]_i_3_n_0 ;
  wire \gt1_rx_cdrlock_counter[20]_i_4_n_0 ;
  wire \gt1_rx_cdrlock_counter[20]_i_5_n_0 ;
  wire \gt1_rx_cdrlock_counter[20]_i_6_n_0 ;
  wire \gt1_rx_cdrlock_counter[24]_i_3_n_0 ;
  wire \gt1_rx_cdrlock_counter[24]_i_4_n_0 ;
  wire \gt1_rx_cdrlock_counter[24]_i_5_n_0 ;
  wire \gt1_rx_cdrlock_counter[24]_i_6_n_0 ;
  wire \gt1_rx_cdrlock_counter[28]_i_3_n_0 ;
  wire \gt1_rx_cdrlock_counter[28]_i_4_n_0 ;
  wire \gt1_rx_cdrlock_counter[28]_i_5_n_0 ;
  wire \gt1_rx_cdrlock_counter[28]_i_6_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_10_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_11_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_12_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_13_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_2_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_3_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_4_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_5_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_7_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_8_n_0 ;
  wire \gt1_rx_cdrlock_counter[31]_i_9_n_0 ;
  wire \gt1_rx_cdrlock_counter[4]_i_3_n_0 ;
  wire \gt1_rx_cdrlock_counter[4]_i_4_n_0 ;
  wire \gt1_rx_cdrlock_counter[4]_i_5_n_0 ;
  wire \gt1_rx_cdrlock_counter[4]_i_6_n_0 ;
  wire \gt1_rx_cdrlock_counter[8]_i_3_n_0 ;
  wire \gt1_rx_cdrlock_counter[8]_i_4_n_0 ;
  wire \gt1_rx_cdrlock_counter[8]_i_5_n_0 ;
  wire \gt1_rx_cdrlock_counter[8]_i_6_n_0 ;
  wire \gt1_rx_cdrlock_counter_reg[12]_i_2_n_0 ;
  wire \gt1_rx_cdrlock_counter_reg[12]_i_2_n_1 ;
  wire \gt1_rx_cdrlock_counter_reg[12]_i_2_n_2 ;
  wire \gt1_rx_cdrlock_counter_reg[12]_i_2_n_3 ;
  wire \gt1_rx_cdrlock_counter_reg[12]_i_2_n_4 ;
  wire \gt1_rx_cdrlock_counter_reg[12]_i_2_n_5 ;
  wire \gt1_rx_cdrlock_counter_reg[12]_i_2_n_6 ;
  wire \gt1_rx_cdrlock_counter_reg[12]_i_2_n_7 ;
  wire \gt1_rx_cdrlock_counter_reg[16]_i_2_n_0 ;
  wire \gt1_rx_cdrlock_counter_reg[16]_i_2_n_1 ;
  wire \gt1_rx_cdrlock_counter_reg[16]_i_2_n_2 ;
  wire \gt1_rx_cdrlock_counter_reg[16]_i_2_n_3 ;
  wire \gt1_rx_cdrlock_counter_reg[16]_i_2_n_4 ;
  wire \gt1_rx_cdrlock_counter_reg[16]_i_2_n_5 ;
  wire \gt1_rx_cdrlock_counter_reg[16]_i_2_n_6 ;
  wire \gt1_rx_cdrlock_counter_reg[16]_i_2_n_7 ;
  wire \gt1_rx_cdrlock_counter_reg[20]_i_2_n_0 ;
  wire \gt1_rx_cdrlock_counter_reg[20]_i_2_n_1 ;
  wire \gt1_rx_cdrlock_counter_reg[20]_i_2_n_2 ;
  wire \gt1_rx_cdrlock_counter_reg[20]_i_2_n_3 ;
  wire \gt1_rx_cdrlock_counter_reg[20]_i_2_n_4 ;
  wire \gt1_rx_cdrlock_counter_reg[20]_i_2_n_5 ;
  wire \gt1_rx_cdrlock_counter_reg[20]_i_2_n_6 ;
  wire \gt1_rx_cdrlock_counter_reg[20]_i_2_n_7 ;
  wire \gt1_rx_cdrlock_counter_reg[24]_i_2_n_0 ;
  wire \gt1_rx_cdrlock_counter_reg[24]_i_2_n_1 ;
  wire \gt1_rx_cdrlock_counter_reg[24]_i_2_n_2 ;
  wire \gt1_rx_cdrlock_counter_reg[24]_i_2_n_3 ;
  wire \gt1_rx_cdrlock_counter_reg[24]_i_2_n_4 ;
  wire \gt1_rx_cdrlock_counter_reg[24]_i_2_n_5 ;
  wire \gt1_rx_cdrlock_counter_reg[24]_i_2_n_6 ;
  wire \gt1_rx_cdrlock_counter_reg[24]_i_2_n_7 ;
  wire \gt1_rx_cdrlock_counter_reg[28]_i_2_n_0 ;
  wire \gt1_rx_cdrlock_counter_reg[28]_i_2_n_1 ;
  wire \gt1_rx_cdrlock_counter_reg[28]_i_2_n_2 ;
  wire \gt1_rx_cdrlock_counter_reg[28]_i_2_n_3 ;
  wire \gt1_rx_cdrlock_counter_reg[28]_i_2_n_4 ;
  wire \gt1_rx_cdrlock_counter_reg[28]_i_2_n_5 ;
  wire \gt1_rx_cdrlock_counter_reg[28]_i_2_n_6 ;
  wire \gt1_rx_cdrlock_counter_reg[28]_i_2_n_7 ;
  wire \gt1_rx_cdrlock_counter_reg[31]_i_6_n_2 ;
  wire \gt1_rx_cdrlock_counter_reg[31]_i_6_n_3 ;
  wire \gt1_rx_cdrlock_counter_reg[31]_i_6_n_5 ;
  wire \gt1_rx_cdrlock_counter_reg[31]_i_6_n_6 ;
  wire \gt1_rx_cdrlock_counter_reg[31]_i_6_n_7 ;
  wire \gt1_rx_cdrlock_counter_reg[4]_i_2_n_0 ;
  wire \gt1_rx_cdrlock_counter_reg[4]_i_2_n_1 ;
  wire \gt1_rx_cdrlock_counter_reg[4]_i_2_n_2 ;
  wire \gt1_rx_cdrlock_counter_reg[4]_i_2_n_3 ;
  wire \gt1_rx_cdrlock_counter_reg[4]_i_2_n_4 ;
  wire \gt1_rx_cdrlock_counter_reg[4]_i_2_n_5 ;
  wire \gt1_rx_cdrlock_counter_reg[4]_i_2_n_6 ;
  wire \gt1_rx_cdrlock_counter_reg[4]_i_2_n_7 ;
  wire \gt1_rx_cdrlock_counter_reg[8]_i_2_n_0 ;
  wire \gt1_rx_cdrlock_counter_reg[8]_i_2_n_1 ;
  wire \gt1_rx_cdrlock_counter_reg[8]_i_2_n_2 ;
  wire \gt1_rx_cdrlock_counter_reg[8]_i_2_n_3 ;
  wire \gt1_rx_cdrlock_counter_reg[8]_i_2_n_4 ;
  wire \gt1_rx_cdrlock_counter_reg[8]_i_2_n_5 ;
  wire \gt1_rx_cdrlock_counter_reg[8]_i_2_n_6 ;
  wire \gt1_rx_cdrlock_counter_reg[8]_i_2_n_7 ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[0] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[10] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[11] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[12] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[13] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[14] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[15] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[16] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[17] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[18] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[19] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[1] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[20] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[21] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[22] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[23] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[24] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[25] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[26] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[27] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[28] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[29] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[2] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[30] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[31] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[3] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[4] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[5] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[6] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[7] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[8] ;
  wire \gt1_rx_cdrlock_counter_reg_n_0_[9] ;
  wire gt1_rx_cdrlocked_i_1_n_0;
  wire gt1_rx_cdrlocked_reg_n_0;
  wire gt1_rx_fsm_reset_done_out;
  wire gt1_rxbufreset_in;
  wire [2:0]gt1_rxbufstatus_out;
  wire gt1_rxbyteisaligned_out;
  wire gt1_rxbyterealign_out;
  wire gt1_rxcdrhold_in;
  wire [1:0]gt1_rxchariscomma_out;
  wire [1:0]gt1_rxcharisk_out;
  wire [1:0]gt1_rxclkcorcnt_out;
  wire gt1_rxcommadet_out;
  wire [15:0]gt1_rxdata_out;
  wire gt1_rxdfelpmreset_in;
  wire [1:0]gt1_rxdisperr_out;
  wire gt1_rxlpmen_in;
  wire gt1_rxmcommaalignen_in;
  wire [6:0]gt1_rxmonitorout_out;
  wire [1:0]gt1_rxmonitorsel_in;
  wire [1:0]gt1_rxnotintable_out;
  wire gt1_rxoutclkfabric_out;
  wire gt1_rxpcommaalignen_in;
  wire gt1_rxpcsreset_in;
  wire [1:0]gt1_rxpd_in;
  wire gt1_rxpmareset_in;
  wire gt1_rxpolarity_in;
  wire gt1_rxprbscntreset_in;
  wire gt1_rxprbserr_out;
  wire [2:0]gt1_rxprbssel_in;
  wire [2:0]gt1_rxrate_in;
  wire gt1_rxratedone_out;
  wire gt1_rxresetdone_out;
  wire gt1_rxuserrdy_i;
  wire gt1_rxusrclk2_in;
  wire gt1_rxusrclk_in;
  wire [1:0]gt1_tx8b10bbypass_in;
  wire gt1_tx_fsm_reset_done_out;
  wire [1:0]gt1_txcharisk_in;
  wire [15:0]gt1_txdata_in;
  wire [3:0]gt1_txdiffctrl_in;
  wire gt1_txelecidle_in;
  wire gt1_txoutclk_out;
  wire gt1_txoutclkfabric_out;
  wire gt1_txoutclkpcs_out;
  wire gt1_txpcsreset_in;
  wire [1:0]gt1_txpd_in;
  wire gt1_txpmareset_in;
  wire gt1_txpolarity_in;
  wire [4:0]gt1_txpostcursor_in;
  wire gt1_txprbsforceerr_in;
  wire [2:0]gt1_txprbssel_in;
  wire [4:0]gt1_txprecursor_in;
  wire gt1_txresetdone_out;
  wire gt1_txuserrdy_i;
  wire gt1_txusrclk2_in;
  wire gt1_txusrclk_in;
  wire soft_reset_rx_in;
  wire soft_reset_tx_in;
  wire sysclk_in;
  wire [3:2]\NLW_gt0_rx_cdrlock_counter_reg[31]_i_6_CO_UNCONNECTED ;
  wire [3:3]\NLW_gt0_rx_cdrlock_counter_reg[31]_i_6_O_UNCONNECTED ;
  wire [3:2]\NLW_gt1_rx_cdrlock_counter_reg[31]_i_6_CO_UNCONNECTED ;
  wire [3:3]\NLW_gt1_rx_cdrlock_counter_reg[31]_i_6_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h0001FFFF)) 
    \gt0_rx_cdrlock_counter[0]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt0_rx_cdrlock_counter_reg_n_0_[0] ),
        .O(\gt0_rx_cdrlock_counter[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt0_rx_cdrlock_counter[10]_i_1 
       (.I0(data0[10]),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlock_counter[10]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt0_rx_cdrlock_counter[11]_i_1 
       (.I0(data0[11]),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlock_counter[11]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[12]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[12]),
        .O(gt0_rx_cdrlock_counter[12]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[12]_i_3 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[12] ),
        .O(\gt0_rx_cdrlock_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[12]_i_4 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[11] ),
        .O(\gt0_rx_cdrlock_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[12]_i_5 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[10] ),
        .O(\gt0_rx_cdrlock_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[12]_i_6 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[9] ),
        .O(\gt0_rx_cdrlock_counter[12]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[13]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[13]),
        .O(gt0_rx_cdrlock_counter[13]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[14]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[14]),
        .O(gt0_rx_cdrlock_counter[14]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[15]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[15]),
        .O(gt0_rx_cdrlock_counter[15]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[16]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[16]),
        .O(gt0_rx_cdrlock_counter[16]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[16]_i_3 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[16] ),
        .O(\gt0_rx_cdrlock_counter[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[16]_i_4 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[15] ),
        .O(\gt0_rx_cdrlock_counter[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[16]_i_5 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[14] ),
        .O(\gt0_rx_cdrlock_counter[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[16]_i_6 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[13] ),
        .O(\gt0_rx_cdrlock_counter[16]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[17]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[17]),
        .O(gt0_rx_cdrlock_counter[17]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[18]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[18]),
        .O(gt0_rx_cdrlock_counter[18]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[19]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[19]),
        .O(gt0_rx_cdrlock_counter[19]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[1]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[1]),
        .O(gt0_rx_cdrlock_counter[1]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[20]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[20]),
        .O(gt0_rx_cdrlock_counter[20]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[20]_i_3 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[20] ),
        .O(\gt0_rx_cdrlock_counter[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[20]_i_4 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[19] ),
        .O(\gt0_rx_cdrlock_counter[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[20]_i_5 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[18] ),
        .O(\gt0_rx_cdrlock_counter[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[20]_i_6 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[17] ),
        .O(\gt0_rx_cdrlock_counter[20]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[21]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[21]),
        .O(gt0_rx_cdrlock_counter[21]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[22]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[22]),
        .O(gt0_rx_cdrlock_counter[22]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[23]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[23]),
        .O(gt0_rx_cdrlock_counter[23]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[24]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[24]),
        .O(gt0_rx_cdrlock_counter[24]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[24]_i_3 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[24] ),
        .O(\gt0_rx_cdrlock_counter[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[24]_i_4 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[23] ),
        .O(\gt0_rx_cdrlock_counter[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[24]_i_5 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[22] ),
        .O(\gt0_rx_cdrlock_counter[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[24]_i_6 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[21] ),
        .O(\gt0_rx_cdrlock_counter[24]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[25]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[25]),
        .O(gt0_rx_cdrlock_counter[25]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[26]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[26]),
        .O(gt0_rx_cdrlock_counter[26]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[27]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[27]),
        .O(gt0_rx_cdrlock_counter[27]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[28]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[28]),
        .O(gt0_rx_cdrlock_counter[28]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[28]_i_3 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[28] ),
        .O(\gt0_rx_cdrlock_counter[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[28]_i_4 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[27] ),
        .O(\gt0_rx_cdrlock_counter[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[28]_i_5 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[26] ),
        .O(\gt0_rx_cdrlock_counter[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[28]_i_6 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[25] ),
        .O(\gt0_rx_cdrlock_counter[28]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[29]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[29]),
        .O(gt0_rx_cdrlock_counter[29]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt0_rx_cdrlock_counter[2]_i_1 
       (.I0(data0[2]),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlock_counter[2]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[30]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[30]),
        .O(gt0_rx_cdrlock_counter[30]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[31]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[31]),
        .O(gt0_rx_cdrlock_counter[31]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_10 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[13] ),
        .I1(\gt0_rx_cdrlock_counter_reg_n_0_[12] ),
        .I2(\gt0_rx_cdrlock_counter_reg_n_0_[15] ),
        .I3(\gt0_rx_cdrlock_counter_reg_n_0_[14] ),
        .O(\gt0_rx_cdrlock_counter[31]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[31]_i_11 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[31] ),
        .O(\gt0_rx_cdrlock_counter[31]_i_11_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[31]_i_12 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[30] ),
        .O(\gt0_rx_cdrlock_counter[31]_i_12_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[31]_i_13 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[29] ),
        .O(\gt0_rx_cdrlock_counter[31]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_2 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[18] ),
        .I1(\gt0_rx_cdrlock_counter_reg_n_0_[19] ),
        .I2(\gt0_rx_cdrlock_counter_reg_n_0_[16] ),
        .I3(\gt0_rx_cdrlock_counter_reg_n_0_[17] ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_7_n_0 ),
        .O(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_3 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[26] ),
        .I1(\gt0_rx_cdrlock_counter_reg_n_0_[27] ),
        .I2(\gt0_rx_cdrlock_counter_reg_n_0_[24] ),
        .I3(\gt0_rx_cdrlock_counter_reg_n_0_[25] ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_8_n_0 ),
        .O(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \gt0_rx_cdrlock_counter[31]_i_4 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[3] ),
        .I1(\gt0_rx_cdrlock_counter_reg_n_0_[2] ),
        .I2(\gt0_rx_cdrlock_counter_reg_n_0_[1] ),
        .I3(\gt0_rx_cdrlock_counter_reg_n_0_[0] ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_9_n_0 ),
        .O(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \gt0_rx_cdrlock_counter[31]_i_5 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[10] ),
        .I1(\gt0_rx_cdrlock_counter_reg_n_0_[11] ),
        .I2(\gt0_rx_cdrlock_counter_reg_n_0_[9] ),
        .I3(\gt0_rx_cdrlock_counter_reg_n_0_[8] ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_10_n_0 ),
        .O(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_7 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[21] ),
        .I1(\gt0_rx_cdrlock_counter_reg_n_0_[20] ),
        .I2(\gt0_rx_cdrlock_counter_reg_n_0_[23] ),
        .I3(\gt0_rx_cdrlock_counter_reg_n_0_[22] ),
        .O(\gt0_rx_cdrlock_counter[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_8 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[29] ),
        .I1(\gt0_rx_cdrlock_counter_reg_n_0_[28] ),
        .I2(\gt0_rx_cdrlock_counter_reg_n_0_[31] ),
        .I3(\gt0_rx_cdrlock_counter_reg_n_0_[30] ),
        .O(\gt0_rx_cdrlock_counter[31]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_9 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[5] ),
        .I1(\gt0_rx_cdrlock_counter_reg_n_0_[4] ),
        .I2(\gt0_rx_cdrlock_counter_reg_n_0_[7] ),
        .I3(\gt0_rx_cdrlock_counter_reg_n_0_[6] ),
        .O(\gt0_rx_cdrlock_counter[31]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[3]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[3]),
        .O(gt0_rx_cdrlock_counter[3]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[4]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[4]),
        .O(gt0_rx_cdrlock_counter[4]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[4]_i_3 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[4] ),
        .O(\gt0_rx_cdrlock_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[4]_i_4 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[3] ),
        .O(\gt0_rx_cdrlock_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[4]_i_5 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[2] ),
        .O(\gt0_rx_cdrlock_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[4]_i_6 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[1] ),
        .O(\gt0_rx_cdrlock_counter[4]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[5]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[5]),
        .O(gt0_rx_cdrlock_counter[5]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[6]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[6]),
        .O(gt0_rx_cdrlock_counter[6]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[7]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[7]),
        .O(gt0_rx_cdrlock_counter[7]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt0_rx_cdrlock_counter[8]_i_1 
       (.I0(data0[8]),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlock_counter[8]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[8]_i_3 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[8] ),
        .O(\gt0_rx_cdrlock_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[8]_i_4 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[7] ),
        .O(\gt0_rx_cdrlock_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[8]_i_5 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[6] ),
        .O(\gt0_rx_cdrlock_counter[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt0_rx_cdrlock_counter[8]_i_6 
       (.I0(\gt0_rx_cdrlock_counter_reg_n_0_[5] ),
        .O(\gt0_rx_cdrlock_counter[8]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[9]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[9]),
        .O(gt0_rx_cdrlock_counter[9]));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\gt0_rx_cdrlock_counter[0]_i_1_n_0 ),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[0] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[10] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[10]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[10] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[11] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[11]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[11] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[12] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[12]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[12] ),
        .R(gt0_gtrxreset_i));
  CARRY4 \gt0_rx_cdrlock_counter_reg[12]_i_2 
       (.CI(\gt0_rx_cdrlock_counter_reg[8]_i_2_n_0 ),
        .CO({\gt0_rx_cdrlock_counter_reg[12]_i_2_n_0 ,\gt0_rx_cdrlock_counter_reg[12]_i_2_n_1 ,\gt0_rx_cdrlock_counter_reg[12]_i_2_n_2 ,\gt0_rx_cdrlock_counter_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[12:9]),
        .S({\gt0_rx_cdrlock_counter[12]_i_3_n_0 ,\gt0_rx_cdrlock_counter[12]_i_4_n_0 ,\gt0_rx_cdrlock_counter[12]_i_5_n_0 ,\gt0_rx_cdrlock_counter[12]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[13] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[13]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[13] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[14] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[14]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[14] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[15] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[15]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[15] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[16] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[16]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[16] ),
        .R(gt0_gtrxreset_i));
  CARRY4 \gt0_rx_cdrlock_counter_reg[16]_i_2 
       (.CI(\gt0_rx_cdrlock_counter_reg[12]_i_2_n_0 ),
        .CO({\gt0_rx_cdrlock_counter_reg[16]_i_2_n_0 ,\gt0_rx_cdrlock_counter_reg[16]_i_2_n_1 ,\gt0_rx_cdrlock_counter_reg[16]_i_2_n_2 ,\gt0_rx_cdrlock_counter_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[16:13]),
        .S({\gt0_rx_cdrlock_counter[16]_i_3_n_0 ,\gt0_rx_cdrlock_counter[16]_i_4_n_0 ,\gt0_rx_cdrlock_counter[16]_i_5_n_0 ,\gt0_rx_cdrlock_counter[16]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[17] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[17]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[17] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[18] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[18]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[18] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[19] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[19]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[19] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[1]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[1] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[20] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[20]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[20] ),
        .R(gt0_gtrxreset_i));
  CARRY4 \gt0_rx_cdrlock_counter_reg[20]_i_2 
       (.CI(\gt0_rx_cdrlock_counter_reg[16]_i_2_n_0 ),
        .CO({\gt0_rx_cdrlock_counter_reg[20]_i_2_n_0 ,\gt0_rx_cdrlock_counter_reg[20]_i_2_n_1 ,\gt0_rx_cdrlock_counter_reg[20]_i_2_n_2 ,\gt0_rx_cdrlock_counter_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[20:17]),
        .S({\gt0_rx_cdrlock_counter[20]_i_3_n_0 ,\gt0_rx_cdrlock_counter[20]_i_4_n_0 ,\gt0_rx_cdrlock_counter[20]_i_5_n_0 ,\gt0_rx_cdrlock_counter[20]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[21] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[21]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[21] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[22] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[22]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[22] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[23] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[23]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[23] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[24] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[24]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[24] ),
        .R(gt0_gtrxreset_i));
  CARRY4 \gt0_rx_cdrlock_counter_reg[24]_i_2 
       (.CI(\gt0_rx_cdrlock_counter_reg[20]_i_2_n_0 ),
        .CO({\gt0_rx_cdrlock_counter_reg[24]_i_2_n_0 ,\gt0_rx_cdrlock_counter_reg[24]_i_2_n_1 ,\gt0_rx_cdrlock_counter_reg[24]_i_2_n_2 ,\gt0_rx_cdrlock_counter_reg[24]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[24:21]),
        .S({\gt0_rx_cdrlock_counter[24]_i_3_n_0 ,\gt0_rx_cdrlock_counter[24]_i_4_n_0 ,\gt0_rx_cdrlock_counter[24]_i_5_n_0 ,\gt0_rx_cdrlock_counter[24]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[25] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[25]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[25] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[26] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[26]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[26] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[27] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[27]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[27] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[28] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[28]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[28] ),
        .R(gt0_gtrxreset_i));
  CARRY4 \gt0_rx_cdrlock_counter_reg[28]_i_2 
       (.CI(\gt0_rx_cdrlock_counter_reg[24]_i_2_n_0 ),
        .CO({\gt0_rx_cdrlock_counter_reg[28]_i_2_n_0 ,\gt0_rx_cdrlock_counter_reg[28]_i_2_n_1 ,\gt0_rx_cdrlock_counter_reg[28]_i_2_n_2 ,\gt0_rx_cdrlock_counter_reg[28]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[28:25]),
        .S({\gt0_rx_cdrlock_counter[28]_i_3_n_0 ,\gt0_rx_cdrlock_counter[28]_i_4_n_0 ,\gt0_rx_cdrlock_counter[28]_i_5_n_0 ,\gt0_rx_cdrlock_counter[28]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[29] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[29]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[29] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[2] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[2]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[2] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[30] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[30]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[30] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[31] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[31]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[31] ),
        .R(gt0_gtrxreset_i));
  CARRY4 \gt0_rx_cdrlock_counter_reg[31]_i_6 
       (.CI(\gt0_rx_cdrlock_counter_reg[28]_i_2_n_0 ),
        .CO({\NLW_gt0_rx_cdrlock_counter_reg[31]_i_6_CO_UNCONNECTED [3:2],\gt0_rx_cdrlock_counter_reg[31]_i_6_n_2 ,\gt0_rx_cdrlock_counter_reg[31]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gt0_rx_cdrlock_counter_reg[31]_i_6_O_UNCONNECTED [3],data0[31:29]}),
        .S({1'b0,\gt0_rx_cdrlock_counter[31]_i_11_n_0 ,\gt0_rx_cdrlock_counter[31]_i_12_n_0 ,\gt0_rx_cdrlock_counter[31]_i_13_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[3] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[3]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[3] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[4] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[4]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[4] ),
        .R(gt0_gtrxreset_i));
  CARRY4 \gt0_rx_cdrlock_counter_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\gt0_rx_cdrlock_counter_reg[4]_i_2_n_0 ,\gt0_rx_cdrlock_counter_reg[4]_i_2_n_1 ,\gt0_rx_cdrlock_counter_reg[4]_i_2_n_2 ,\gt0_rx_cdrlock_counter_reg[4]_i_2_n_3 }),
        .CYINIT(\gt0_rx_cdrlock_counter_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[4:1]),
        .S({\gt0_rx_cdrlock_counter[4]_i_3_n_0 ,\gt0_rx_cdrlock_counter[4]_i_4_n_0 ,\gt0_rx_cdrlock_counter[4]_i_5_n_0 ,\gt0_rx_cdrlock_counter[4]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[5] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[5]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[5] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[6] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[6]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[6] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[7] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[7]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[7] ),
        .R(gt0_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[8] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[8]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[8] ),
        .R(gt0_gtrxreset_i));
  CARRY4 \gt0_rx_cdrlock_counter_reg[8]_i_2 
       (.CI(\gt0_rx_cdrlock_counter_reg[4]_i_2_n_0 ),
        .CO({\gt0_rx_cdrlock_counter_reg[8]_i_2_n_0 ,\gt0_rx_cdrlock_counter_reg[8]_i_2_n_1 ,\gt0_rx_cdrlock_counter_reg[8]_i_2_n_2 ,\gt0_rx_cdrlock_counter_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[8:5]),
        .S({\gt0_rx_cdrlock_counter[8]_i_3_n_0 ,\gt0_rx_cdrlock_counter[8]_i_4_n_0 ,\gt0_rx_cdrlock_counter[8]_i_5_n_0 ,\gt0_rx_cdrlock_counter[8]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[9] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter[9]),
        .Q(\gt0_rx_cdrlock_counter_reg_n_0_[9] ),
        .R(gt0_gtrxreset_i));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    gt0_rx_cdrlocked_i_1
       (.I0(gt0_rx_cdrlocked_reg_n_0),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlocked_i_1_n_0));
  FDRE gt0_rx_cdrlocked_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rx_cdrlocked_i_1_n_0),
        .Q(gt0_rx_cdrlocked_reg_n_0),
        .R(gt0_gtrxreset_i));
  gtx3g_bert_0_gtx3g_RX_STARTUP_FSM gt0_rxresetfsm_i
       (.SR(gt0_gtrxreset_i),
        .dont_reset_on_data_error_in(dont_reset_on_data_error_in),
        .gt0_data_valid_in(gt0_data_valid_in),
        .gt0_qplllock_in(gt0_qplllock_in),
        .gt0_rx_cdrlocked_reg(gt0_rx_cdrlocked_reg_n_0),
        .gt0_rx_fsm_reset_done_out(gt0_rx_fsm_reset_done_out),
        .gt0_rxresetdone_out(gt0_rxresetdone_out),
        .gt0_rxuserrdy_in(gt0_rxuserrdy_i),
        .gt0_rxusrclk_in(gt0_rxusrclk_in),
        .gt0_txuserrdy_in(gt0_txuserrdy_i),
        .soft_reset_rx_in(soft_reset_rx_in),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_TX_MANUAL_PHASE_ALIGN gt0_tx_manual_phase_i
       (.SR(U0_rst_tx_phalignment_i),
        .U0_TXDLYSRESET(U0_TXDLYSRESET),
        .U0_TXDLYSRESETDONE(U0_TXDLYSRESETDONE),
        .U0_TXPHALIGN(U0_TXPHALIGN),
        .U0_TXPHALIGNDONE(U0_TXPHALIGNDONE),
        .U0_TXPHINIT(U0_TXPHINIT),
        .U0_TXPHINITDONE(U0_TXPHINITDONE),
        .gt0_run_tx_phalignment_i(gt0_run_tx_phalignment_i),
        .gt0_tx_phalignment_done_i(gt0_tx_phalignment_done_i),
        .gt0_txdlyen_in(U0_TXDLYEN),
        .gt1_run_tx_phalignment_i(gt1_run_tx_phalignment_i),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_TX_STARTUP_FSM gt0_txresetfsm_i
       (.SR(U0_rst_tx_phalignment_i),
        .data_in(gt0_run_tx_phalignment_i),
        .gt0_gttxreset_in(gt0_gttxreset_i),
        .gt0_qplllock_in(gt0_qplllock_in),
        .gt0_qpllrefclklost_in(gt0_qpllrefclklost_in),
        .gt0_qpllreset_out(gt0_qpllreset_out),
        .gt0_tx_fsm_reset_done_out(gt0_tx_fsm_reset_done_out),
        .gt0_tx_phalignment_done_i(gt0_tx_phalignment_done_i),
        .gt0_txresetdone_out(gt0_txresetdone_out),
        .gt0_txuserrdy_in(gt0_txuserrdy_i),
        .gt0_txusrclk_in(gt0_txusrclk_in),
        .gt1_rst_tx_phalignment_i(gt1_rst_tx_phalignment_i),
        .soft_reset_tx_in(soft_reset_tx_in),
        .sysclk_in(sysclk_in));
  LUT5 #(
    .INIT(32'h0001FFFF)) 
    \gt1_rx_cdrlock_counter[0]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg_n_0_[0] ),
        .O(\gt1_rx_cdrlock_counter[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt1_rx_cdrlock_counter[10]_i_1 
       (.I0(\gt1_rx_cdrlock_counter_reg[12]_i_2_n_6 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt1_rx_cdrlock_counter[10]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt1_rx_cdrlock_counter[11]_i_1 
       (.I0(\gt1_rx_cdrlock_counter_reg[12]_i_2_n_5 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt1_rx_cdrlock_counter[11]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[12]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[12]_i_2_n_4 ),
        .O(gt1_rx_cdrlock_counter[12]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[12]_i_3 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[12] ),
        .O(\gt1_rx_cdrlock_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[12]_i_4 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[11] ),
        .O(\gt1_rx_cdrlock_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[12]_i_5 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[10] ),
        .O(\gt1_rx_cdrlock_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[12]_i_6 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[9] ),
        .O(\gt1_rx_cdrlock_counter[12]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[13]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[16]_i_2_n_7 ),
        .O(gt1_rx_cdrlock_counter[13]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[14]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[16]_i_2_n_6 ),
        .O(gt1_rx_cdrlock_counter[14]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[15]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[16]_i_2_n_5 ),
        .O(gt1_rx_cdrlock_counter[15]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[16]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[16]_i_2_n_4 ),
        .O(gt1_rx_cdrlock_counter[16]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[16]_i_3 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[16] ),
        .O(\gt1_rx_cdrlock_counter[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[16]_i_4 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[15] ),
        .O(\gt1_rx_cdrlock_counter[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[16]_i_5 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[14] ),
        .O(\gt1_rx_cdrlock_counter[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[16]_i_6 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[13] ),
        .O(\gt1_rx_cdrlock_counter[16]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[17]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[20]_i_2_n_7 ),
        .O(gt1_rx_cdrlock_counter[17]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[18]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[20]_i_2_n_6 ),
        .O(gt1_rx_cdrlock_counter[18]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[19]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[20]_i_2_n_5 ),
        .O(gt1_rx_cdrlock_counter[19]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[1]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[4]_i_2_n_7 ),
        .O(gt1_rx_cdrlock_counter[1]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[20]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[20]_i_2_n_4 ),
        .O(gt1_rx_cdrlock_counter[20]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[20]_i_3 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[20] ),
        .O(\gt1_rx_cdrlock_counter[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[20]_i_4 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[19] ),
        .O(\gt1_rx_cdrlock_counter[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[20]_i_5 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[18] ),
        .O(\gt1_rx_cdrlock_counter[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[20]_i_6 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[17] ),
        .O(\gt1_rx_cdrlock_counter[20]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[21]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[24]_i_2_n_7 ),
        .O(gt1_rx_cdrlock_counter[21]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[22]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[24]_i_2_n_6 ),
        .O(gt1_rx_cdrlock_counter[22]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[23]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[24]_i_2_n_5 ),
        .O(gt1_rx_cdrlock_counter[23]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[24]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[24]_i_2_n_4 ),
        .O(gt1_rx_cdrlock_counter[24]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[24]_i_3 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[24] ),
        .O(\gt1_rx_cdrlock_counter[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[24]_i_4 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[23] ),
        .O(\gt1_rx_cdrlock_counter[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[24]_i_5 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[22] ),
        .O(\gt1_rx_cdrlock_counter[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[24]_i_6 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[21] ),
        .O(\gt1_rx_cdrlock_counter[24]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[25]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[28]_i_2_n_7 ),
        .O(gt1_rx_cdrlock_counter[25]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[26]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[28]_i_2_n_6 ),
        .O(gt1_rx_cdrlock_counter[26]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[27]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[28]_i_2_n_5 ),
        .O(gt1_rx_cdrlock_counter[27]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[28]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[28]_i_2_n_4 ),
        .O(gt1_rx_cdrlock_counter[28]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[28]_i_3 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[28] ),
        .O(\gt1_rx_cdrlock_counter[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[28]_i_4 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[27] ),
        .O(\gt1_rx_cdrlock_counter[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[28]_i_5 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[26] ),
        .O(\gt1_rx_cdrlock_counter[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[28]_i_6 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[25] ),
        .O(\gt1_rx_cdrlock_counter[28]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[29]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[31]_i_6_n_7 ),
        .O(gt1_rx_cdrlock_counter[29]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt1_rx_cdrlock_counter[2]_i_1 
       (.I0(\gt1_rx_cdrlock_counter_reg[4]_i_2_n_6 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt1_rx_cdrlock_counter[2]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[30]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[31]_i_6_n_6 ),
        .O(gt1_rx_cdrlock_counter[30]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[31]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[31]_i_6_n_5 ),
        .O(gt1_rx_cdrlock_counter[31]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt1_rx_cdrlock_counter[31]_i_10 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[13] ),
        .I1(\gt1_rx_cdrlock_counter_reg_n_0_[12] ),
        .I2(\gt1_rx_cdrlock_counter_reg_n_0_[15] ),
        .I3(\gt1_rx_cdrlock_counter_reg_n_0_[14] ),
        .O(\gt1_rx_cdrlock_counter[31]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[31]_i_11 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[31] ),
        .O(\gt1_rx_cdrlock_counter[31]_i_11_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[31]_i_12 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[30] ),
        .O(\gt1_rx_cdrlock_counter[31]_i_12_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[31]_i_13 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[29] ),
        .O(\gt1_rx_cdrlock_counter[31]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gt1_rx_cdrlock_counter[31]_i_2 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[18] ),
        .I1(\gt1_rx_cdrlock_counter_reg_n_0_[19] ),
        .I2(\gt1_rx_cdrlock_counter_reg_n_0_[16] ),
        .I3(\gt1_rx_cdrlock_counter_reg_n_0_[17] ),
        .I4(\gt1_rx_cdrlock_counter[31]_i_7_n_0 ),
        .O(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gt1_rx_cdrlock_counter[31]_i_3 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[26] ),
        .I1(\gt1_rx_cdrlock_counter_reg_n_0_[27] ),
        .I2(\gt1_rx_cdrlock_counter_reg_n_0_[24] ),
        .I3(\gt1_rx_cdrlock_counter_reg_n_0_[25] ),
        .I4(\gt1_rx_cdrlock_counter[31]_i_8_n_0 ),
        .O(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \gt1_rx_cdrlock_counter[31]_i_4 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[3] ),
        .I1(\gt1_rx_cdrlock_counter_reg_n_0_[2] ),
        .I2(\gt1_rx_cdrlock_counter_reg_n_0_[1] ),
        .I3(\gt1_rx_cdrlock_counter_reg_n_0_[0] ),
        .I4(\gt1_rx_cdrlock_counter[31]_i_9_n_0 ),
        .O(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \gt1_rx_cdrlock_counter[31]_i_5 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[10] ),
        .I1(\gt1_rx_cdrlock_counter_reg_n_0_[11] ),
        .I2(\gt1_rx_cdrlock_counter_reg_n_0_[9] ),
        .I3(\gt1_rx_cdrlock_counter_reg_n_0_[8] ),
        .I4(\gt1_rx_cdrlock_counter[31]_i_10_n_0 ),
        .O(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt1_rx_cdrlock_counter[31]_i_7 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[21] ),
        .I1(\gt1_rx_cdrlock_counter_reg_n_0_[20] ),
        .I2(\gt1_rx_cdrlock_counter_reg_n_0_[23] ),
        .I3(\gt1_rx_cdrlock_counter_reg_n_0_[22] ),
        .O(\gt1_rx_cdrlock_counter[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt1_rx_cdrlock_counter[31]_i_8 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[29] ),
        .I1(\gt1_rx_cdrlock_counter_reg_n_0_[28] ),
        .I2(\gt1_rx_cdrlock_counter_reg_n_0_[31] ),
        .I3(\gt1_rx_cdrlock_counter_reg_n_0_[30] ),
        .O(\gt1_rx_cdrlock_counter[31]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt1_rx_cdrlock_counter[31]_i_9 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[5] ),
        .I1(\gt1_rx_cdrlock_counter_reg_n_0_[4] ),
        .I2(\gt1_rx_cdrlock_counter_reg_n_0_[7] ),
        .I3(\gt1_rx_cdrlock_counter_reg_n_0_[6] ),
        .O(\gt1_rx_cdrlock_counter[31]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[3]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[4]_i_2_n_5 ),
        .O(gt1_rx_cdrlock_counter[3]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[4]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[4]_i_2_n_4 ),
        .O(gt1_rx_cdrlock_counter[4]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[4]_i_3 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[4] ),
        .O(\gt1_rx_cdrlock_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[4]_i_4 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[3] ),
        .O(\gt1_rx_cdrlock_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[4]_i_5 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[2] ),
        .O(\gt1_rx_cdrlock_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[4]_i_6 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[1] ),
        .O(\gt1_rx_cdrlock_counter[4]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[5]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[8]_i_2_n_7 ),
        .O(gt1_rx_cdrlock_counter[5]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[6]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[8]_i_2_n_6 ),
        .O(gt1_rx_cdrlock_counter[6]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[7]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[8]_i_2_n_5 ),
        .O(gt1_rx_cdrlock_counter[7]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt1_rx_cdrlock_counter[8]_i_1 
       (.I0(\gt1_rx_cdrlock_counter_reg[8]_i_2_n_4 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt1_rx_cdrlock_counter[8]));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[8]_i_3 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[8] ),
        .O(\gt1_rx_cdrlock_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[8]_i_4 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[7] ),
        .O(\gt1_rx_cdrlock_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[8]_i_5 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[6] ),
        .O(\gt1_rx_cdrlock_counter[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \gt1_rx_cdrlock_counter[8]_i_6 
       (.I0(\gt1_rx_cdrlock_counter_reg_n_0_[5] ),
        .O(\gt1_rx_cdrlock_counter[8]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt1_rx_cdrlock_counter[9]_i_1 
       (.I0(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(\gt1_rx_cdrlock_counter_reg[12]_i_2_n_7 ),
        .O(gt1_rx_cdrlock_counter[9]));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\gt1_rx_cdrlock_counter[0]_i_1_n_0 ),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[0] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[10] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[10]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[10] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[11] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[11]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[11] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[12] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[12]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[12] ),
        .R(gt1_gtrxreset_i));
  CARRY4 \gt1_rx_cdrlock_counter_reg[12]_i_2 
       (.CI(\gt1_rx_cdrlock_counter_reg[8]_i_2_n_0 ),
        .CO({\gt1_rx_cdrlock_counter_reg[12]_i_2_n_0 ,\gt1_rx_cdrlock_counter_reg[12]_i_2_n_1 ,\gt1_rx_cdrlock_counter_reg[12]_i_2_n_2 ,\gt1_rx_cdrlock_counter_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gt1_rx_cdrlock_counter_reg[12]_i_2_n_4 ,\gt1_rx_cdrlock_counter_reg[12]_i_2_n_5 ,\gt1_rx_cdrlock_counter_reg[12]_i_2_n_6 ,\gt1_rx_cdrlock_counter_reg[12]_i_2_n_7 }),
        .S({\gt1_rx_cdrlock_counter[12]_i_3_n_0 ,\gt1_rx_cdrlock_counter[12]_i_4_n_0 ,\gt1_rx_cdrlock_counter[12]_i_5_n_0 ,\gt1_rx_cdrlock_counter[12]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[13] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[13]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[13] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[14] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[14]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[14] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[15] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[15]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[15] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[16] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[16]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[16] ),
        .R(gt1_gtrxreset_i));
  CARRY4 \gt1_rx_cdrlock_counter_reg[16]_i_2 
       (.CI(\gt1_rx_cdrlock_counter_reg[12]_i_2_n_0 ),
        .CO({\gt1_rx_cdrlock_counter_reg[16]_i_2_n_0 ,\gt1_rx_cdrlock_counter_reg[16]_i_2_n_1 ,\gt1_rx_cdrlock_counter_reg[16]_i_2_n_2 ,\gt1_rx_cdrlock_counter_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gt1_rx_cdrlock_counter_reg[16]_i_2_n_4 ,\gt1_rx_cdrlock_counter_reg[16]_i_2_n_5 ,\gt1_rx_cdrlock_counter_reg[16]_i_2_n_6 ,\gt1_rx_cdrlock_counter_reg[16]_i_2_n_7 }),
        .S({\gt1_rx_cdrlock_counter[16]_i_3_n_0 ,\gt1_rx_cdrlock_counter[16]_i_4_n_0 ,\gt1_rx_cdrlock_counter[16]_i_5_n_0 ,\gt1_rx_cdrlock_counter[16]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[17] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[17]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[17] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[18] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[18]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[18] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[19] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[19]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[19] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[1]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[1] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[20] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[20]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[20] ),
        .R(gt1_gtrxreset_i));
  CARRY4 \gt1_rx_cdrlock_counter_reg[20]_i_2 
       (.CI(\gt1_rx_cdrlock_counter_reg[16]_i_2_n_0 ),
        .CO({\gt1_rx_cdrlock_counter_reg[20]_i_2_n_0 ,\gt1_rx_cdrlock_counter_reg[20]_i_2_n_1 ,\gt1_rx_cdrlock_counter_reg[20]_i_2_n_2 ,\gt1_rx_cdrlock_counter_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gt1_rx_cdrlock_counter_reg[20]_i_2_n_4 ,\gt1_rx_cdrlock_counter_reg[20]_i_2_n_5 ,\gt1_rx_cdrlock_counter_reg[20]_i_2_n_6 ,\gt1_rx_cdrlock_counter_reg[20]_i_2_n_7 }),
        .S({\gt1_rx_cdrlock_counter[20]_i_3_n_0 ,\gt1_rx_cdrlock_counter[20]_i_4_n_0 ,\gt1_rx_cdrlock_counter[20]_i_5_n_0 ,\gt1_rx_cdrlock_counter[20]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[21] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[21]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[21] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[22] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[22]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[22] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[23] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[23]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[23] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[24] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[24]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[24] ),
        .R(gt1_gtrxreset_i));
  CARRY4 \gt1_rx_cdrlock_counter_reg[24]_i_2 
       (.CI(\gt1_rx_cdrlock_counter_reg[20]_i_2_n_0 ),
        .CO({\gt1_rx_cdrlock_counter_reg[24]_i_2_n_0 ,\gt1_rx_cdrlock_counter_reg[24]_i_2_n_1 ,\gt1_rx_cdrlock_counter_reg[24]_i_2_n_2 ,\gt1_rx_cdrlock_counter_reg[24]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gt1_rx_cdrlock_counter_reg[24]_i_2_n_4 ,\gt1_rx_cdrlock_counter_reg[24]_i_2_n_5 ,\gt1_rx_cdrlock_counter_reg[24]_i_2_n_6 ,\gt1_rx_cdrlock_counter_reg[24]_i_2_n_7 }),
        .S({\gt1_rx_cdrlock_counter[24]_i_3_n_0 ,\gt1_rx_cdrlock_counter[24]_i_4_n_0 ,\gt1_rx_cdrlock_counter[24]_i_5_n_0 ,\gt1_rx_cdrlock_counter[24]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[25] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[25]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[25] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[26] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[26]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[26] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[27] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[27]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[27] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[28] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[28]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[28] ),
        .R(gt1_gtrxreset_i));
  CARRY4 \gt1_rx_cdrlock_counter_reg[28]_i_2 
       (.CI(\gt1_rx_cdrlock_counter_reg[24]_i_2_n_0 ),
        .CO({\gt1_rx_cdrlock_counter_reg[28]_i_2_n_0 ,\gt1_rx_cdrlock_counter_reg[28]_i_2_n_1 ,\gt1_rx_cdrlock_counter_reg[28]_i_2_n_2 ,\gt1_rx_cdrlock_counter_reg[28]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gt1_rx_cdrlock_counter_reg[28]_i_2_n_4 ,\gt1_rx_cdrlock_counter_reg[28]_i_2_n_5 ,\gt1_rx_cdrlock_counter_reg[28]_i_2_n_6 ,\gt1_rx_cdrlock_counter_reg[28]_i_2_n_7 }),
        .S({\gt1_rx_cdrlock_counter[28]_i_3_n_0 ,\gt1_rx_cdrlock_counter[28]_i_4_n_0 ,\gt1_rx_cdrlock_counter[28]_i_5_n_0 ,\gt1_rx_cdrlock_counter[28]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[29] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[29]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[29] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[2] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[2]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[2] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[30] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[30]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[30] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[31] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[31]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[31] ),
        .R(gt1_gtrxreset_i));
  CARRY4 \gt1_rx_cdrlock_counter_reg[31]_i_6 
       (.CI(\gt1_rx_cdrlock_counter_reg[28]_i_2_n_0 ),
        .CO({\NLW_gt1_rx_cdrlock_counter_reg[31]_i_6_CO_UNCONNECTED [3:2],\gt1_rx_cdrlock_counter_reg[31]_i_6_n_2 ,\gt1_rx_cdrlock_counter_reg[31]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gt1_rx_cdrlock_counter_reg[31]_i_6_O_UNCONNECTED [3],\gt1_rx_cdrlock_counter_reg[31]_i_6_n_5 ,\gt1_rx_cdrlock_counter_reg[31]_i_6_n_6 ,\gt1_rx_cdrlock_counter_reg[31]_i_6_n_7 }),
        .S({1'b0,\gt1_rx_cdrlock_counter[31]_i_11_n_0 ,\gt1_rx_cdrlock_counter[31]_i_12_n_0 ,\gt1_rx_cdrlock_counter[31]_i_13_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[3] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[3]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[3] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[4] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[4]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[4] ),
        .R(gt1_gtrxreset_i));
  CARRY4 \gt1_rx_cdrlock_counter_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\gt1_rx_cdrlock_counter_reg[4]_i_2_n_0 ,\gt1_rx_cdrlock_counter_reg[4]_i_2_n_1 ,\gt1_rx_cdrlock_counter_reg[4]_i_2_n_2 ,\gt1_rx_cdrlock_counter_reg[4]_i_2_n_3 }),
        .CYINIT(\gt1_rx_cdrlock_counter_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gt1_rx_cdrlock_counter_reg[4]_i_2_n_4 ,\gt1_rx_cdrlock_counter_reg[4]_i_2_n_5 ,\gt1_rx_cdrlock_counter_reg[4]_i_2_n_6 ,\gt1_rx_cdrlock_counter_reg[4]_i_2_n_7 }),
        .S({\gt1_rx_cdrlock_counter[4]_i_3_n_0 ,\gt1_rx_cdrlock_counter[4]_i_4_n_0 ,\gt1_rx_cdrlock_counter[4]_i_5_n_0 ,\gt1_rx_cdrlock_counter[4]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[5] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[5]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[5] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[6] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[6]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[6] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[7] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[7]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[7] ),
        .R(gt1_gtrxreset_i));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[8] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[8]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[8] ),
        .R(gt1_gtrxreset_i));
  CARRY4 \gt1_rx_cdrlock_counter_reg[8]_i_2 
       (.CI(\gt1_rx_cdrlock_counter_reg[4]_i_2_n_0 ),
        .CO({\gt1_rx_cdrlock_counter_reg[8]_i_2_n_0 ,\gt1_rx_cdrlock_counter_reg[8]_i_2_n_1 ,\gt1_rx_cdrlock_counter_reg[8]_i_2_n_2 ,\gt1_rx_cdrlock_counter_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gt1_rx_cdrlock_counter_reg[8]_i_2_n_4 ,\gt1_rx_cdrlock_counter_reg[8]_i_2_n_5 ,\gt1_rx_cdrlock_counter_reg[8]_i_2_n_6 ,\gt1_rx_cdrlock_counter_reg[8]_i_2_n_7 }),
        .S({\gt1_rx_cdrlock_counter[8]_i_3_n_0 ,\gt1_rx_cdrlock_counter[8]_i_4_n_0 ,\gt1_rx_cdrlock_counter[8]_i_5_n_0 ,\gt1_rx_cdrlock_counter[8]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gt1_rx_cdrlock_counter_reg[9] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlock_counter[9]),
        .Q(\gt1_rx_cdrlock_counter_reg_n_0_[9] ),
        .R(gt1_gtrxreset_i));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    gt1_rx_cdrlocked_i_1
       (.I0(gt1_rx_cdrlocked_reg_n_0),
        .I1(\gt1_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt1_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt1_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt1_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt1_rx_cdrlocked_i_1_n_0));
  FDRE gt1_rx_cdrlocked_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rx_cdrlocked_i_1_n_0),
        .Q(gt1_rx_cdrlocked_reg_n_0),
        .R(gt1_gtrxreset_i));
  gtx3g_bert_0_gtx3g_RX_STARTUP_FSM_1 gt1_rxresetfsm_i
       (.SR(gt1_gtrxreset_i),
        .dont_reset_on_data_error_in(dont_reset_on_data_error_in),
        .gt0_qplllock_in(gt0_qplllock_in),
        .gt1_data_valid_in(gt1_data_valid_in),
        .gt1_rx_cdrlocked_reg(gt1_rx_cdrlocked_reg_n_0),
        .gt1_rx_fsm_reset_done_out(gt1_rx_fsm_reset_done_out),
        .gt1_rxresetdone_out(gt1_rxresetdone_out),
        .gt1_rxuserrdy_in(gt1_rxuserrdy_i),
        .gt1_rxusrclk_in(gt1_rxusrclk_in),
        .gt1_txuserrdy_in(gt1_txuserrdy_i),
        .soft_reset_rx_in(soft_reset_rx_in),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_TX_STARTUP_FSM_2 gt1_txresetfsm_i
       (.data_in(gt1_run_tx_phalignment_i),
        .gt0_qplllock_in(gt0_qplllock_in),
        .gt0_qpllrefclklost_in(gt0_qpllrefclklost_in),
        .gt0_tx_phalignment_done_i(gt0_tx_phalignment_done_i),
        .gt1_gttxreset_in(gt1_gttxreset_i),
        .gt1_rst_tx_phalignment_i(gt1_rst_tx_phalignment_i),
        .gt1_tx_fsm_reset_done_out(gt1_tx_fsm_reset_done_out),
        .gt1_txresetdone_out(gt1_txresetdone_out),
        .gt1_txuserrdy_in(gt1_txuserrdy_i),
        .gt1_txusrclk_in(gt1_txusrclk_in),
        .soft_reset_tx_in(soft_reset_tx_in),
        .sysclk_in(sysclk_in));
  gtx3g_bert_0_gtx3g_multi_gt gtx3g_i
       (.SR(gt0_gtrxreset_i),
        .U0_TXDLYSRESET(U0_TXDLYSRESET),
        .U0_TXDLYSRESETDONE(U0_TXDLYSRESETDONE),
        .U0_TXPHALIGN(U0_TXPHALIGN),
        .U0_TXPHALIGNDONE(U0_TXPHALIGNDONE),
        .U0_TXPHINIT(U0_TXPHINIT),
        .U0_TXPHINITDONE(U0_TXPHINITDONE),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drpaddr_in(gt0_drpaddr_in),
        .gt0_drpclk_in(gt0_drpclk_in),
        .gt0_drpdi_in(gt0_drpdi_in),
        .gt0_drpdo_out(gt0_drpdo_out),
        .gt0_drpen_in(gt0_drpen_in),
        .gt0_drprdy_out(gt0_drprdy_out),
        .gt0_drpwe_in(gt0_drpwe_in),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_gttxreset_in(gt0_gttxreset_i),
        .gt0_gtxrxn_in(gt0_gtxrxn_in),
        .gt0_gtxrxp_in(gt0_gtxrxp_in),
        .gt0_gtxtxn_out(gt0_gtxtxn_out),
        .gt0_gtxtxp_out(gt0_gtxtxp_out),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_qplloutclk_in(gt0_qplloutclk_in),
        .gt0_qplloutrefclk_in(gt0_qplloutrefclk_in),
        .gt0_rxbufreset_in(gt0_rxbufreset_in),
        .gt0_rxbufstatus_out(gt0_rxbufstatus_out),
        .gt0_rxbyteisaligned_out(gt0_rxbyteisaligned_out),
        .gt0_rxbyterealign_out(gt0_rxbyterealign_out),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxclkcorcnt_out(gt0_rxclkcorcnt_out),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxdata_out(gt0_rxdata_out),
        .gt0_rxdfelpmreset_in(gt0_rxdfelpmreset_in),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxlpmen_in(gt0_rxlpmen_in),
        .gt0_rxmcommaalignen_in(gt0_rxmcommaalignen_in),
        .gt0_rxmonitorout_out(gt0_rxmonitorout_out),
        .gt0_rxmonitorsel_in(gt0_rxmonitorsel_in),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .gt0_rxoutclkfabric_out(gt0_rxoutclkfabric_out),
        .gt0_rxpcommaalignen_in(gt0_rxpcommaalignen_in),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpd_in(gt0_rxpd_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxratedone_out(gt0_rxratedone_out),
        .gt0_rxresetdone_out(gt0_rxresetdone_out),
        .gt0_rxuserrdy_in(gt0_rxuserrdy_i),
        .gt0_rxusrclk2_in(gt0_rxusrclk2_in),
        .gt0_rxusrclk_in(gt0_rxusrclk_in),
        .gt0_tx8b10bbypass_in(gt0_tx8b10bbypass_in),
        .gt0_txcharisk_in(gt0_txcharisk_in),
        .gt0_txdata_in(gt0_txdata_in),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txdlyen_in(U0_TXDLYEN),
        .gt0_txelecidle_in(gt0_txelecidle_in),
        .gt0_txoutclk_out(gt0_txoutclk_out),
        .gt0_txoutclkfabric_out(gt0_txoutclkfabric_out),
        .gt0_txoutclkpcs_out(gt0_txoutclkpcs_out),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txpd_in(gt0_txpd_in),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gt0_txresetdone_out(gt0_txresetdone_out),
        .gt0_txuserrdy_in(gt0_txuserrdy_i),
        .gt0_txusrclk2_in(gt0_txusrclk2_in),
        .gt0_txusrclk_in(gt0_txusrclk_in),
        .gt1_dmonitorout_out(gt1_dmonitorout_out),
        .gt1_drpaddr_in(gt1_drpaddr_in),
        .gt1_drpclk_in(gt1_drpclk_in),
        .gt1_drpdi_in(gt1_drpdi_in),
        .gt1_drpdo_out(gt1_drpdo_out),
        .gt1_drpen_in(gt1_drpen_in),
        .gt1_drprdy_out(gt1_drprdy_out),
        .gt1_drpwe_in(gt1_drpwe_in),
        .gt1_eyescandataerror_out(gt1_eyescandataerror_out),
        .gt1_eyescanreset_in(gt1_eyescanreset_in),
        .gt1_eyescantrigger_in(gt1_eyescantrigger_in),
        .gt1_gttxreset_in(gt1_gttxreset_i),
        .gt1_gtxrxn_in(gt1_gtxrxn_in),
        .gt1_gtxrxp_in(gt1_gtxrxp_in),
        .gt1_gtxtxn_out(gt1_gtxtxn_out),
        .gt1_gtxtxp_out(gt1_gtxtxp_out),
        .gt1_loopback_in(gt1_loopback_in),
        .gt1_rxbufreset_in(gt1_rxbufreset_in),
        .gt1_rxbufstatus_out(gt1_rxbufstatus_out),
        .gt1_rxbyteisaligned_out(gt1_rxbyteisaligned_out),
        .gt1_rxbyterealign_out(gt1_rxbyterealign_out),
        .gt1_rxcdrhold_in(gt1_rxcdrhold_in),
        .gt1_rxchariscomma_out(gt1_rxchariscomma_out),
        .gt1_rxcharisk_out(gt1_rxcharisk_out),
        .gt1_rxclkcorcnt_out(gt1_rxclkcorcnt_out),
        .gt1_rxcommadet_out(gt1_rxcommadet_out),
        .gt1_rxdata_out(gt1_rxdata_out),
        .gt1_rxdfelpmreset_in(gt1_rxdfelpmreset_in),
        .gt1_rxdisperr_out(gt1_rxdisperr_out),
        .gt1_rxlpmen_in(gt1_rxlpmen_in),
        .gt1_rxmcommaalignen_in(gt1_rxmcommaalignen_in),
        .gt1_rxmonitorout_out(gt1_rxmonitorout_out),
        .gt1_rxmonitorsel_in(gt1_rxmonitorsel_in),
        .gt1_rxnotintable_out(gt1_rxnotintable_out),
        .gt1_rxoutclkfabric_out(gt1_rxoutclkfabric_out),
        .gt1_rxpcommaalignen_in(gt1_rxpcommaalignen_in),
        .gt1_rxpcsreset_in(gt1_rxpcsreset_in),
        .gt1_rxpd_in(gt1_rxpd_in),
        .gt1_rxpmareset_in(gt1_rxpmareset_in),
        .gt1_rxpolarity_in(gt1_rxpolarity_in),
        .gt1_rxprbscntreset_in(gt1_rxprbscntreset_in),
        .gt1_rxprbserr_out(gt1_rxprbserr_out),
        .gt1_rxprbssel_in(gt1_rxprbssel_in),
        .gt1_rxrate_in(gt1_rxrate_in),
        .gt1_rxratedone_out(gt1_rxratedone_out),
        .gt1_rxresetdone_out(gt1_rxresetdone_out),
        .gt1_rxuserrdy_in(gt1_rxuserrdy_i),
        .gt1_rxusrclk2_in(gt1_rxusrclk2_in),
        .gt1_rxusrclk_in(gt1_rxusrclk_in),
        .gt1_tx8b10bbypass_in(gt1_tx8b10bbypass_in),
        .gt1_txcharisk_in(gt1_txcharisk_in),
        .gt1_txdata_in(gt1_txdata_in),
        .gt1_txdiffctrl_in(gt1_txdiffctrl_in),
        .gt1_txelecidle_in(gt1_txelecidle_in),
        .gt1_txoutclk_out(gt1_txoutclk_out),
        .gt1_txoutclkfabric_out(gt1_txoutclkfabric_out),
        .gt1_txoutclkpcs_out(gt1_txoutclkpcs_out),
        .gt1_txpcsreset_in(gt1_txpcsreset_in),
        .gt1_txpd_in(gt1_txpd_in),
        .gt1_txpmareset_in(gt1_txpmareset_in),
        .gt1_txpolarity_in(gt1_txpolarity_in),
        .gt1_txpostcursor_in(gt1_txpostcursor_in),
        .gt1_txprbsforceerr_in(gt1_txprbsforceerr_in),
        .gt1_txprbssel_in(gt1_txprbssel_in),
        .gt1_txprecursor_in(gt1_txprecursor_in),
        .gt1_txresetdone_out(gt1_txresetdone_out),
        .gt1_txuserrdy_in(gt1_txuserrdy_i),
        .gt1_txusrclk2_in(gt1_txusrclk2_in),
        .gt1_txusrclk_in(gt1_txusrclk_in),
        .gtrxreset_i_reg(gt1_gtrxreset_i));
endmodule

(* ORIG_REF_NAME = "gtx3g_multi_gt" *) 
module gtx3g_bert_0_gtx3g_multi_gt
   (gt0_drprdy_out,
    gt0_eyescandataerror_out,
    gt0_gtxtxn_out,
    gt0_gtxtxp_out,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    gt0_rxoutclkfabric_out,
    gt0_rxprbserr_out,
    gt0_rxratedone_out,
    gt0_rxresetdone_out,
    U0_TXDLYSRESETDONE,
    gt0_txoutclk_out,
    gt0_txoutclkfabric_out,
    gt0_txoutclkpcs_out,
    U0_TXPHALIGNDONE,
    U0_TXPHINITDONE,
    gt0_txresetdone_out,
    gt0_drpdo_out,
    gt0_rxclkcorcnt_out,
    gt0_rxbufstatus_out,
    gt0_rxdata_out,
    gt0_rxmonitorout_out,
    gt0_dmonitorout_out,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    gt1_drprdy_out,
    gt1_eyescandataerror_out,
    gt1_gtxtxn_out,
    gt1_gtxtxp_out,
    gt1_rxbyteisaligned_out,
    gt1_rxbyterealign_out,
    gt1_rxcommadet_out,
    gt1_rxoutclkfabric_out,
    gt1_rxprbserr_out,
    gt1_rxratedone_out,
    gt1_rxresetdone_out,
    gt1_txoutclk_out,
    gt1_txoutclkfabric_out,
    gt1_txoutclkpcs_out,
    gt1_txresetdone_out,
    gt1_drpdo_out,
    gt1_rxclkcorcnt_out,
    gt1_rxbufstatus_out,
    gt1_rxdata_out,
    gt1_rxmonitorout_out,
    gt1_dmonitorout_out,
    gt1_rxchariscomma_out,
    gt1_rxcharisk_out,
    gt1_rxdisperr_out,
    gt1_rxnotintable_out,
    gt0_drpclk_in,
    gt0_drpen_in,
    gt0_drpwe_in,
    gt0_eyescanreset_in,
    gt0_eyescantrigger_in,
    SR,
    gt0_gttxreset_in,
    gt0_gtxrxn_in,
    gt0_gtxrxp_in,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    gt0_rxbufreset_in,
    gt0_rxcdrhold_in,
    gt0_rxdfelpmreset_in,
    gt0_rxlpmen_in,
    gt0_rxmcommaalignen_in,
    gt0_rxpcommaalignen_in,
    gt0_rxpcsreset_in,
    gt0_rxpmareset_in,
    gt0_rxpolarity_in,
    gt0_rxprbscntreset_in,
    gt0_rxuserrdy_in,
    gt0_rxusrclk_in,
    gt0_rxusrclk2_in,
    gt0_txdlyen_in,
    U0_TXDLYSRESET,
    gt0_txelecidle_in,
    gt0_txpcsreset_in,
    U0_TXPHALIGN,
    U0_TXPHINIT,
    gt0_txpmareset_in,
    gt0_txpolarity_in,
    gt0_txprbsforceerr_in,
    gt0_txuserrdy_in,
    gt0_txusrclk_in,
    gt0_txusrclk2_in,
    gt0_drpdi_in,
    gt0_rxmonitorsel_in,
    gt0_rxpd_in,
    gt0_txpd_in,
    gt0_loopback_in,
    gt0_rxprbssel_in,
    gt0_rxrate_in,
    gt0_txprbssel_in,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    gt0_txdata_in,
    gt0_tx8b10bbypass_in,
    gt0_txcharisk_in,
    gt0_drpaddr_in,
    gt1_drpclk_in,
    gt1_drpen_in,
    gt1_drpwe_in,
    gt1_eyescanreset_in,
    gt1_eyescantrigger_in,
    gtrxreset_i_reg,
    gt1_gttxreset_in,
    gt1_gtxrxn_in,
    gt1_gtxrxp_in,
    gt1_rxbufreset_in,
    gt1_rxcdrhold_in,
    gt1_rxdfelpmreset_in,
    gt1_rxlpmen_in,
    gt1_rxmcommaalignen_in,
    gt1_rxpcommaalignen_in,
    gt1_rxpcsreset_in,
    gt1_rxpmareset_in,
    gt1_rxpolarity_in,
    gt1_rxprbscntreset_in,
    gt1_rxuserrdy_in,
    gt1_rxusrclk_in,
    gt1_rxusrclk2_in,
    gt1_txelecidle_in,
    gt1_txpcsreset_in,
    gt1_txpmareset_in,
    gt1_txpolarity_in,
    gt1_txprbsforceerr_in,
    gt1_txuserrdy_in,
    gt1_txusrclk_in,
    gt1_txusrclk2_in,
    gt1_drpdi_in,
    gt1_rxmonitorsel_in,
    gt1_rxpd_in,
    gt1_txpd_in,
    gt1_loopback_in,
    gt1_rxprbssel_in,
    gt1_rxrate_in,
    gt1_txprbssel_in,
    gt1_txdiffctrl_in,
    gt1_txpostcursor_in,
    gt1_txprecursor_in,
    gt1_txdata_in,
    gt1_tx8b10bbypass_in,
    gt1_txcharisk_in,
    gt1_drpaddr_in);
  output gt0_drprdy_out;
  output gt0_eyescandataerror_out;
  output gt0_gtxtxn_out;
  output gt0_gtxtxp_out;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  output gt0_rxoutclkfabric_out;
  output gt0_rxprbserr_out;
  output gt0_rxratedone_out;
  output gt0_rxresetdone_out;
  output [1:0]U0_TXDLYSRESETDONE;
  output gt0_txoutclk_out;
  output gt0_txoutclkfabric_out;
  output gt0_txoutclkpcs_out;
  output [1:0]U0_TXPHALIGNDONE;
  output [1:0]U0_TXPHINITDONE;
  output gt0_txresetdone_out;
  output [15:0]gt0_drpdo_out;
  output [1:0]gt0_rxclkcorcnt_out;
  output [2:0]gt0_rxbufstatus_out;
  output [15:0]gt0_rxdata_out;
  output [6:0]gt0_rxmonitorout_out;
  output [7:0]gt0_dmonitorout_out;
  output [1:0]gt0_rxchariscomma_out;
  output [1:0]gt0_rxcharisk_out;
  output [1:0]gt0_rxdisperr_out;
  output [1:0]gt0_rxnotintable_out;
  output gt1_drprdy_out;
  output gt1_eyescandataerror_out;
  output gt1_gtxtxn_out;
  output gt1_gtxtxp_out;
  output gt1_rxbyteisaligned_out;
  output gt1_rxbyterealign_out;
  output gt1_rxcommadet_out;
  output gt1_rxoutclkfabric_out;
  output gt1_rxprbserr_out;
  output gt1_rxratedone_out;
  output gt1_rxresetdone_out;
  output gt1_txoutclk_out;
  output gt1_txoutclkfabric_out;
  output gt1_txoutclkpcs_out;
  output gt1_txresetdone_out;
  output [15:0]gt1_drpdo_out;
  output [1:0]gt1_rxclkcorcnt_out;
  output [2:0]gt1_rxbufstatus_out;
  output [15:0]gt1_rxdata_out;
  output [6:0]gt1_rxmonitorout_out;
  output [7:0]gt1_dmonitorout_out;
  output [1:0]gt1_rxchariscomma_out;
  output [1:0]gt1_rxcharisk_out;
  output [1:0]gt1_rxdisperr_out;
  output [1:0]gt1_rxnotintable_out;
  input gt0_drpclk_in;
  input gt0_drpen_in;
  input gt0_drpwe_in;
  input gt0_eyescanreset_in;
  input gt0_eyescantrigger_in;
  input [0:0]SR;
  input gt0_gttxreset_in;
  input gt0_gtxrxn_in;
  input gt0_gtxrxp_in;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;
  input gt0_rxbufreset_in;
  input gt0_rxcdrhold_in;
  input gt0_rxdfelpmreset_in;
  input gt0_rxlpmen_in;
  input gt0_rxmcommaalignen_in;
  input gt0_rxpcommaalignen_in;
  input gt0_rxpcsreset_in;
  input gt0_rxpmareset_in;
  input gt0_rxpolarity_in;
  input gt0_rxprbscntreset_in;
  input gt0_rxuserrdy_in;
  input gt0_rxusrclk_in;
  input gt0_rxusrclk2_in;
  input gt0_txdlyen_in;
  input [1:0]U0_TXDLYSRESET;
  input gt0_txelecidle_in;
  input gt0_txpcsreset_in;
  input [1:0]U0_TXPHALIGN;
  input [1:0]U0_TXPHINIT;
  input gt0_txpmareset_in;
  input gt0_txpolarity_in;
  input gt0_txprbsforceerr_in;
  input gt0_txuserrdy_in;
  input gt0_txusrclk_in;
  input gt0_txusrclk2_in;
  input [15:0]gt0_drpdi_in;
  input [1:0]gt0_rxmonitorsel_in;
  input [1:0]gt0_rxpd_in;
  input [1:0]gt0_txpd_in;
  input [2:0]gt0_loopback_in;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_rxrate_in;
  input [2:0]gt0_txprbssel_in;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input [15:0]gt0_txdata_in;
  input [1:0]gt0_tx8b10bbypass_in;
  input [1:0]gt0_txcharisk_in;
  input [8:0]gt0_drpaddr_in;
  input gt1_drpclk_in;
  input gt1_drpen_in;
  input gt1_drpwe_in;
  input gt1_eyescanreset_in;
  input gt1_eyescantrigger_in;
  input [0:0]gtrxreset_i_reg;
  input gt1_gttxreset_in;
  input gt1_gtxrxn_in;
  input gt1_gtxrxp_in;
  input gt1_rxbufreset_in;
  input gt1_rxcdrhold_in;
  input gt1_rxdfelpmreset_in;
  input gt1_rxlpmen_in;
  input gt1_rxmcommaalignen_in;
  input gt1_rxpcommaalignen_in;
  input gt1_rxpcsreset_in;
  input gt1_rxpmareset_in;
  input gt1_rxpolarity_in;
  input gt1_rxprbscntreset_in;
  input gt1_rxuserrdy_in;
  input gt1_rxusrclk_in;
  input gt1_rxusrclk2_in;
  input gt1_txelecidle_in;
  input gt1_txpcsreset_in;
  input gt1_txpmareset_in;
  input gt1_txpolarity_in;
  input gt1_txprbsforceerr_in;
  input gt1_txuserrdy_in;
  input gt1_txusrclk_in;
  input gt1_txusrclk2_in;
  input [15:0]gt1_drpdi_in;
  input [1:0]gt1_rxmonitorsel_in;
  input [1:0]gt1_rxpd_in;
  input [1:0]gt1_txpd_in;
  input [2:0]gt1_loopback_in;
  input [2:0]gt1_rxprbssel_in;
  input [2:0]gt1_rxrate_in;
  input [2:0]gt1_txprbssel_in;
  input [3:0]gt1_txdiffctrl_in;
  input [4:0]gt1_txpostcursor_in;
  input [4:0]gt1_txprecursor_in;
  input [15:0]gt1_txdata_in;
  input [1:0]gt1_tx8b10bbypass_in;
  input [1:0]gt1_txcharisk_in;
  input [8:0]gt1_drpaddr_in;

  wire [0:0]SR;
  wire [1:0]U0_TXDLYSRESET;
  wire [1:0]U0_TXDLYSRESETDONE;
  wire [1:0]U0_TXPHALIGN;
  wire [1:0]U0_TXPHALIGNDONE;
  wire [1:0]U0_TXPHINIT;
  wire [1:0]U0_TXPHINITDONE;
  wire [7:0]gt0_dmonitorout_out;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gttxreset_in;
  wire gt0_gtxrxn_in;
  wire gt0_gtxrxp_in;
  wire gt0_gtxtxn_out;
  wire gt0_gtxtxp_out;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [1:0]gt0_rxchariscomma_out;
  wire [1:0]gt0_rxcharisk_out;
  wire [1:0]gt0_rxclkcorcnt_out;
  wire gt0_rxcommadet_out;
  wire [15:0]gt0_rxdata_out;
  wire gt0_rxdfelpmreset_in;
  wire [1:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire gt0_rxmcommaalignen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [1:0]gt0_rxnotintable_out;
  wire gt0_rxoutclkfabric_out;
  wire gt0_rxpcommaalignen_in;
  wire gt0_rxpcsreset_in;
  wire [1:0]gt0_rxpd_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire gt0_rxresetdone_out;
  wire gt0_rxuserrdy_in;
  wire gt0_rxusrclk2_in;
  wire gt0_rxusrclk_in;
  wire [1:0]gt0_tx8b10bbypass_in;
  wire [1:0]gt0_txcharisk_in;
  wire [15:0]gt0_txdata_in;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txdlyen_in;
  wire gt0_txelecidle_in;
  wire gt0_txoutclk_out;
  wire gt0_txoutclkfabric_out;
  wire gt0_txoutclkpcs_out;
  wire gt0_txpcsreset_in;
  wire [1:0]gt0_txpd_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txresetdone_out;
  wire gt0_txuserrdy_in;
  wire gt0_txusrclk2_in;
  wire gt0_txusrclk_in;
  wire [7:0]gt1_dmonitorout_out;
  wire [8:0]gt1_drpaddr_in;
  wire gt1_drpclk_in;
  wire [15:0]gt1_drpdi_in;
  wire [15:0]gt1_drpdo_out;
  wire gt1_drpen_in;
  wire gt1_drprdy_out;
  wire gt1_drpwe_in;
  wire gt1_eyescandataerror_out;
  wire gt1_eyescanreset_in;
  wire gt1_eyescantrigger_in;
  wire gt1_gttxreset_in;
  wire gt1_gtxrxn_in;
  wire gt1_gtxrxp_in;
  wire gt1_gtxtxn_out;
  wire gt1_gtxtxp_out;
  wire [2:0]gt1_loopback_in;
  wire gt1_rxbufreset_in;
  wire [2:0]gt1_rxbufstatus_out;
  wire gt1_rxbyteisaligned_out;
  wire gt1_rxbyterealign_out;
  wire gt1_rxcdrhold_in;
  wire [1:0]gt1_rxchariscomma_out;
  wire [1:0]gt1_rxcharisk_out;
  wire [1:0]gt1_rxclkcorcnt_out;
  wire gt1_rxcommadet_out;
  wire [15:0]gt1_rxdata_out;
  wire gt1_rxdfelpmreset_in;
  wire [1:0]gt1_rxdisperr_out;
  wire gt1_rxlpmen_in;
  wire gt1_rxmcommaalignen_in;
  wire [6:0]gt1_rxmonitorout_out;
  wire [1:0]gt1_rxmonitorsel_in;
  wire [1:0]gt1_rxnotintable_out;
  wire gt1_rxoutclkfabric_out;
  wire gt1_rxpcommaalignen_in;
  wire gt1_rxpcsreset_in;
  wire [1:0]gt1_rxpd_in;
  wire gt1_rxpmareset_in;
  wire gt1_rxpolarity_in;
  wire gt1_rxprbscntreset_in;
  wire gt1_rxprbserr_out;
  wire [2:0]gt1_rxprbssel_in;
  wire [2:0]gt1_rxrate_in;
  wire gt1_rxratedone_out;
  wire gt1_rxresetdone_out;
  wire gt1_rxuserrdy_in;
  wire gt1_rxusrclk2_in;
  wire gt1_rxusrclk_in;
  wire [1:0]gt1_tx8b10bbypass_in;
  wire [1:0]gt1_txcharisk_in;
  wire [15:0]gt1_txdata_in;
  wire [3:0]gt1_txdiffctrl_in;
  wire gt1_txelecidle_in;
  wire gt1_txoutclk_out;
  wire gt1_txoutclkfabric_out;
  wire gt1_txoutclkpcs_out;
  wire gt1_txpcsreset_in;
  wire [1:0]gt1_txpd_in;
  wire gt1_txpmareset_in;
  wire gt1_txpolarity_in;
  wire [4:0]gt1_txpostcursor_in;
  wire gt1_txprbsforceerr_in;
  wire [2:0]gt1_txprbssel_in;
  wire [4:0]gt1_txprecursor_in;
  wire gt1_txresetdone_out;
  wire gt1_txuserrdy_in;
  wire gt1_txusrclk2_in;
  wire gt1_txusrclk_in;
  wire [0:0]gtrxreset_i_reg;

  gtx3g_bert_0_gtx3g_GT gt0_gtx3g_i
       (.SR(SR),
        .U0_TXDLYSRESET(U0_TXDLYSRESET[0]),
        .U0_TXDLYSRESETDONE(U0_TXDLYSRESETDONE[0]),
        .U0_TXPHALIGN(U0_TXPHALIGN[0]),
        .U0_TXPHALIGNDONE(U0_TXPHALIGNDONE[0]),
        .U0_TXPHINIT(U0_TXPHINIT[0]),
        .U0_TXPHINITDONE(U0_TXPHINITDONE[0]),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drpaddr_in(gt0_drpaddr_in),
        .gt0_drpclk_in(gt0_drpclk_in),
        .gt0_drpdi_in(gt0_drpdi_in),
        .gt0_drpdo_out(gt0_drpdo_out),
        .gt0_drpen_in(gt0_drpen_in),
        .gt0_drprdy_out(gt0_drprdy_out),
        .gt0_drpwe_in(gt0_drpwe_in),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_gttxreset_in(gt0_gttxreset_in),
        .gt0_gtxrxn_in(gt0_gtxrxn_in),
        .gt0_gtxrxp_in(gt0_gtxrxp_in),
        .gt0_gtxtxn_out(gt0_gtxtxn_out),
        .gt0_gtxtxp_out(gt0_gtxtxp_out),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_qplloutclk_in(gt0_qplloutclk_in),
        .gt0_qplloutrefclk_in(gt0_qplloutrefclk_in),
        .gt0_rxbufreset_in(gt0_rxbufreset_in),
        .gt0_rxbufstatus_out(gt0_rxbufstatus_out),
        .gt0_rxbyteisaligned_out(gt0_rxbyteisaligned_out),
        .gt0_rxbyterealign_out(gt0_rxbyterealign_out),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxclkcorcnt_out(gt0_rxclkcorcnt_out),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxdata_out(gt0_rxdata_out),
        .gt0_rxdfelpmreset_in(gt0_rxdfelpmreset_in),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxlpmen_in(gt0_rxlpmen_in),
        .gt0_rxmcommaalignen_in(gt0_rxmcommaalignen_in),
        .gt0_rxmonitorout_out(gt0_rxmonitorout_out),
        .gt0_rxmonitorsel_in(gt0_rxmonitorsel_in),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .gt0_rxoutclkfabric_out(gt0_rxoutclkfabric_out),
        .gt0_rxpcommaalignen_in(gt0_rxpcommaalignen_in),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpd_in(gt0_rxpd_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxratedone_out(gt0_rxratedone_out),
        .gt0_rxresetdone_out(gt0_rxresetdone_out),
        .gt0_rxuserrdy_in(gt0_rxuserrdy_in),
        .gt0_rxusrclk2_in(gt0_rxusrclk2_in),
        .gt0_rxusrclk_in(gt0_rxusrclk_in),
        .gt0_tx8b10bbypass_in(gt0_tx8b10bbypass_in),
        .gt0_txcharisk_in(gt0_txcharisk_in),
        .gt0_txdata_in(gt0_txdata_in),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txdlyen_in(gt0_txdlyen_in),
        .gt0_txelecidle_in(gt0_txelecidle_in),
        .gt0_txoutclk_out(gt0_txoutclk_out),
        .gt0_txoutclkfabric_out(gt0_txoutclkfabric_out),
        .gt0_txoutclkpcs_out(gt0_txoutclkpcs_out),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txpd_in(gt0_txpd_in),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gt0_txresetdone_out(gt0_txresetdone_out),
        .gt0_txuserrdy_in(gt0_txuserrdy_in),
        .gt0_txusrclk2_in(gt0_txusrclk2_in),
        .gt0_txusrclk_in(gt0_txusrclk_in));
  gtx3g_bert_0_gtx3g_GT_3 gt1_gtx3g_i
       (.U0_TXDLYSRESET(U0_TXDLYSRESET[1]),
        .U0_TXDLYSRESETDONE(U0_TXDLYSRESETDONE[1]),
        .U0_TXPHALIGN(U0_TXPHALIGN[1]),
        .U0_TXPHALIGNDONE(U0_TXPHALIGNDONE[1]),
        .U0_TXPHINIT(U0_TXPHINIT[1]),
        .U0_TXPHINITDONE(U0_TXPHINITDONE[1]),
        .gt0_qplloutclk_in(gt0_qplloutclk_in),
        .gt0_qplloutrefclk_in(gt0_qplloutrefclk_in),
        .gt1_dmonitorout_out(gt1_dmonitorout_out),
        .gt1_drpaddr_in(gt1_drpaddr_in),
        .gt1_drpclk_in(gt1_drpclk_in),
        .gt1_drpdi_in(gt1_drpdi_in),
        .gt1_drpdo_out(gt1_drpdo_out),
        .gt1_drpen_in(gt1_drpen_in),
        .gt1_drprdy_out(gt1_drprdy_out),
        .gt1_drpwe_in(gt1_drpwe_in),
        .gt1_eyescandataerror_out(gt1_eyescandataerror_out),
        .gt1_eyescanreset_in(gt1_eyescanreset_in),
        .gt1_eyescantrigger_in(gt1_eyescantrigger_in),
        .gt1_gttxreset_in(gt1_gttxreset_in),
        .gt1_gtxrxn_in(gt1_gtxrxn_in),
        .gt1_gtxrxp_in(gt1_gtxrxp_in),
        .gt1_gtxtxn_out(gt1_gtxtxn_out),
        .gt1_gtxtxp_out(gt1_gtxtxp_out),
        .gt1_loopback_in(gt1_loopback_in),
        .gt1_rxbufreset_in(gt1_rxbufreset_in),
        .gt1_rxbufstatus_out(gt1_rxbufstatus_out),
        .gt1_rxbyteisaligned_out(gt1_rxbyteisaligned_out),
        .gt1_rxbyterealign_out(gt1_rxbyterealign_out),
        .gt1_rxcdrhold_in(gt1_rxcdrhold_in),
        .gt1_rxchariscomma_out(gt1_rxchariscomma_out),
        .gt1_rxcharisk_out(gt1_rxcharisk_out),
        .gt1_rxclkcorcnt_out(gt1_rxclkcorcnt_out),
        .gt1_rxcommadet_out(gt1_rxcommadet_out),
        .gt1_rxdata_out(gt1_rxdata_out),
        .gt1_rxdfelpmreset_in(gt1_rxdfelpmreset_in),
        .gt1_rxdisperr_out(gt1_rxdisperr_out),
        .gt1_rxlpmen_in(gt1_rxlpmen_in),
        .gt1_rxmcommaalignen_in(gt1_rxmcommaalignen_in),
        .gt1_rxmonitorout_out(gt1_rxmonitorout_out),
        .gt1_rxmonitorsel_in(gt1_rxmonitorsel_in),
        .gt1_rxnotintable_out(gt1_rxnotintable_out),
        .gt1_rxoutclkfabric_out(gt1_rxoutclkfabric_out),
        .gt1_rxpcommaalignen_in(gt1_rxpcommaalignen_in),
        .gt1_rxpcsreset_in(gt1_rxpcsreset_in),
        .gt1_rxpd_in(gt1_rxpd_in),
        .gt1_rxpmareset_in(gt1_rxpmareset_in),
        .gt1_rxpolarity_in(gt1_rxpolarity_in),
        .gt1_rxprbscntreset_in(gt1_rxprbscntreset_in),
        .gt1_rxprbserr_out(gt1_rxprbserr_out),
        .gt1_rxprbssel_in(gt1_rxprbssel_in),
        .gt1_rxrate_in(gt1_rxrate_in),
        .gt1_rxratedone_out(gt1_rxratedone_out),
        .gt1_rxresetdone_out(gt1_rxresetdone_out),
        .gt1_rxuserrdy_in(gt1_rxuserrdy_in),
        .gt1_rxusrclk2_in(gt1_rxusrclk2_in),
        .gt1_rxusrclk_in(gt1_rxusrclk_in),
        .gt1_tx8b10bbypass_in(gt1_tx8b10bbypass_in),
        .gt1_txcharisk_in(gt1_txcharisk_in),
        .gt1_txdata_in(gt1_txdata_in),
        .gt1_txdiffctrl_in(gt1_txdiffctrl_in),
        .gt1_txelecidle_in(gt1_txelecidle_in),
        .gt1_txoutclk_out(gt1_txoutclk_out),
        .gt1_txoutclkfabric_out(gt1_txoutclkfabric_out),
        .gt1_txoutclkpcs_out(gt1_txoutclkpcs_out),
        .gt1_txpcsreset_in(gt1_txpcsreset_in),
        .gt1_txpd_in(gt1_txpd_in),
        .gt1_txpmareset_in(gt1_txpmareset_in),
        .gt1_txpolarity_in(gt1_txpolarity_in),
        .gt1_txpostcursor_in(gt1_txpostcursor_in),
        .gt1_txprbsforceerr_in(gt1_txprbsforceerr_in),
        .gt1_txprbssel_in(gt1_txprbssel_in),
        .gt1_txprecursor_in(gt1_txprecursor_in),
        .gt1_txresetdone_out(gt1_txresetdone_out),
        .gt1_txuserrdy_in(gt1_txuserrdy_in),
        .gt1_txusrclk2_in(gt1_txusrclk2_in),
        .gt1_txusrclk_in(gt1_txusrclk_in),
        .gtrxreset_i_reg(gtrxreset_i_reg));
endmodule

(* ORIG_REF_NAME = "gtx3g_support" *) 
module gtx3g_bert_0_gtx3g_support
   (RXDATA_OUT,
    gt0_rxcharisk_out,
    TXN_OUT,
    TXP_OUT,
    gt1_rxdata_out,
    gt1_rxcharisk_out,
    GT1_RXUSRCLK2_OUT,
    gt1_txfsmresetdone_r_reg,
    gt0_txfsmresetdone_r_reg,
    gt0_rxresetdone_r_reg,
    gt1_rxresetdone_r_reg,
    CLK,
    gt0_track_data_i,
    gt1_track_data_i,
    RXP_IN,
    RXN_IN,
    gt0_rxpcommaalignen_in,
    Q,
    gt0_txcharisk_in,
    gt1_rxpcommaalignen_in,
    \TX_DATA_OUT_reg[15] ,
    gt1_txcharisk_in,
    Q0_CLK1_GTREFCLK_PAD_P_IN,
    Q0_CLK1_GTREFCLK_PAD_N_IN);
  output [15:0]RXDATA_OUT;
  output [1:0]gt0_rxcharisk_out;
  output [1:0]TXN_OUT;
  output [1:0]TXP_OUT;
  output [15:0]gt1_rxdata_out;
  output [1:0]gt1_rxcharisk_out;
  output GT1_RXUSRCLK2_OUT;
  output gt1_txfsmresetdone_r_reg;
  output gt0_txfsmresetdone_r_reg;
  output gt0_rxresetdone_r_reg;
  output gt1_rxresetdone_r_reg;
  input CLK;
  input gt0_track_data_i;
  input gt1_track_data_i;
  input [1:0]RXP_IN;
  input [1:0]RXN_IN;
  input gt0_rxpcommaalignen_in;
  input [15:0]Q;
  input [0:0]gt0_txcharisk_in;
  input gt1_rxpcommaalignen_in;
  input [15:0]\TX_DATA_OUT_reg[15] ;
  input [0:0]gt1_txcharisk_in;
  input Q0_CLK1_GTREFCLK_PAD_P_IN;
  input Q0_CLK1_GTREFCLK_PAD_N_IN;

  wire CLK;
  wire GT1_RXUSRCLK2_OUT;
  wire [15:0]Q;
  wire Q0_CLK1_GTREFCLK_PAD_N_IN;
  wire Q0_CLK1_GTREFCLK_PAD_P_IN;
  wire [15:0]RXDATA_OUT;
  wire [1:0]RXN_IN;
  wire [1:0]RXP_IN;
  wire [1:0]TXN_OUT;
  wire [1:0]TXP_OUT;
  wire [15:0]\TX_DATA_OUT_reg[15] ;
  wire common0_i_n_0;
  wire common0_i_n_1;
  wire common0_i_n_2;
  wire common0_i_n_3;
  wire gt0_qpllreset_i;
  wire gt0_qpllreset_t;
  wire [1:0]gt0_rxcharisk_out;
  wire gt0_rxpcommaalignen_in;
  wire gt0_rxresetdone_i;
  wire gt0_rxresetdone_r_reg;
  wire gt0_track_data_i;
  wire [0:0]gt0_txcharisk_in;
  wire gt0_txfsmresetdone_i;
  wire gt0_txfsmresetdone_r_reg;
  wire gt0_txoutclk_i;
  wire [1:0]gt1_rxcharisk_out;
  wire [15:0]gt1_rxdata_out;
  wire gt1_rxpcommaalignen_in;
  wire gt1_rxresetdone_i;
  wire gt1_rxresetdone_r_reg;
  wire gt1_track_data_i;
  wire [0:0]gt1_txcharisk_in;
  wire gt1_txfsmresetdone_i;
  wire gt1_txfsmresetdone_r_reg;
  wire gt1_txoutclk_i;
  wire gtx3g_init_i_n_1;
  wire gtx3g_init_i_n_10;
  wire gtx3g_init_i_n_100;
  wire gtx3g_init_i_n_101;
  wire gtx3g_init_i_n_102;
  wire gtx3g_init_i_n_103;
  wire gtx3g_init_i_n_104;
  wire gtx3g_init_i_n_105;
  wire gtx3g_init_i_n_106;
  wire gtx3g_init_i_n_11;
  wire gtx3g_init_i_n_12;
  wire gtx3g_init_i_n_123;
  wire gtx3g_init_i_n_124;
  wire gtx3g_init_i_n_125;
  wire gtx3g_init_i_n_126;
  wire gtx3g_init_i_n_127;
  wire gtx3g_init_i_n_128;
  wire gtx3g_init_i_n_129;
  wire gtx3g_init_i_n_13;
  wire gtx3g_init_i_n_130;
  wire gtx3g_init_i_n_131;
  wire gtx3g_init_i_n_132;
  wire gtx3g_init_i_n_133;
  wire gtx3g_init_i_n_134;
  wire gtx3g_init_i_n_135;
  wire gtx3g_init_i_n_136;
  wire gtx3g_init_i_n_137;
  wire gtx3g_init_i_n_138;
  wire gtx3g_init_i_n_139;
  wire gtx3g_init_i_n_14;
  wire gtx3g_init_i_n_140;
  wire gtx3g_init_i_n_141;
  wire gtx3g_init_i_n_142;
  wire gtx3g_init_i_n_143;
  wire gtx3g_init_i_n_144;
  wire gtx3g_init_i_n_15;
  wire gtx3g_init_i_n_151;
  wire gtx3g_init_i_n_152;
  wire gtx3g_init_i_n_153;
  wire gtx3g_init_i_n_16;
  wire gtx3g_init_i_n_17;
  wire gtx3g_init_i_n_18;
  wire gtx3g_init_i_n_19;
  wire gtx3g_init_i_n_20;
  wire gtx3g_init_i_n_21;
  wire gtx3g_init_i_n_22;
  wire gtx3g_init_i_n_23;
  wire gtx3g_init_i_n_24;
  wire gtx3g_init_i_n_25;
  wire gtx3g_init_i_n_26;
  wire gtx3g_init_i_n_27;
  wire gtx3g_init_i_n_28;
  wire gtx3g_init_i_n_29;
  wire gtx3g_init_i_n_3;
  wire gtx3g_init_i_n_30;
  wire gtx3g_init_i_n_31;
  wire gtx3g_init_i_n_4;
  wire gtx3g_init_i_n_48;
  wire gtx3g_init_i_n_49;
  wire gtx3g_init_i_n_5;
  wire gtx3g_init_i_n_50;
  wire gtx3g_init_i_n_51;
  wire gtx3g_init_i_n_52;
  wire gtx3g_init_i_n_53;
  wire gtx3g_init_i_n_54;
  wire gtx3g_init_i_n_55;
  wire gtx3g_init_i_n_56;
  wire gtx3g_init_i_n_57;
  wire gtx3g_init_i_n_58;
  wire gtx3g_init_i_n_59;
  wire gtx3g_init_i_n_6;
  wire gtx3g_init_i_n_60;
  wire gtx3g_init_i_n_61;
  wire gtx3g_init_i_n_62;
  wire gtx3g_init_i_n_63;
  wire gtx3g_init_i_n_64;
  wire gtx3g_init_i_n_65;
  wire gtx3g_init_i_n_66;
  wire gtx3g_init_i_n_67;
  wire gtx3g_init_i_n_68;
  wire gtx3g_init_i_n_69;
  wire gtx3g_init_i_n_7;
  wire gtx3g_init_i_n_76;
  wire gtx3g_init_i_n_77;
  wire gtx3g_init_i_n_78;
  wire gtx3g_init_i_n_79;
  wire gtx3g_init_i_n_8;
  wire gtx3g_init_i_n_80;
  wire gtx3g_init_i_n_81;
  wire gtx3g_init_i_n_82;
  wire gtx3g_init_i_n_83;
  wire gtx3g_init_i_n_84;
  wire gtx3g_init_i_n_85;
  wire gtx3g_init_i_n_86;
  wire gtx3g_init_i_n_87;
  wire gtx3g_init_i_n_88;
  wire gtx3g_init_i_n_89;
  wire gtx3g_init_i_n_9;
  wire gtx3g_init_i_n_90;
  wire gtx3g_init_i_n_91;
  wire gtx3g_init_i_n_92;
  wire gtx3g_init_i_n_93;
  wire gtx3g_init_i_n_94;
  wire gtx3g_init_i_n_95;
  wire gtx3g_init_i_n_96;
  wire gtx3g_init_i_n_97;
  wire gtx3g_init_i_n_98;
  wire gtx3g_init_i_n_99;
  wire q0_clk1_refclk_i;

  gtx3g_bert_0_gtx3g_common common0_i
       (.CLK(CLK),
        .Q0_CLK1_GTREFCLK_OUT(q0_clk1_refclk_i),
        .gt0_qplllock_in(common0_i_n_0),
        .gt0_qplloutclk_in(common0_i_n_1),
        .gt0_qplloutrefclk_in(common0_i_n_2),
        .gt0_qpllrefclklost_in(common0_i_n_3),
        .gt0_qpllreset_t(gt0_qpllreset_t));
  gtx3g_bert_0_gtx3g_common_reset common_reset_i
       (.CLK(CLK),
        .gt0_qpllreset_out(gt0_qpllreset_i),
        .gt0_qpllreset_t(gt0_qpllreset_t));
  LUT1 #(
    .INIT(2'h1)) 
    gt0_rxresetdone_r_i_1
       (.I0(gt0_rxresetdone_i),
        .O(gt0_rxresetdone_r_reg));
  LUT1 #(
    .INIT(2'h1)) 
    gt0_txfsmresetdone_r_i_1
       (.I0(gt0_txfsmresetdone_i),
        .O(gt0_txfsmresetdone_r_reg));
  LUT1 #(
    .INIT(2'h1)) 
    gt1_rxresetdone_r_i_1
       (.I0(gt1_rxresetdone_i),
        .O(gt1_rxresetdone_r_reg));
  LUT1 #(
    .INIT(2'h1)) 
    gt1_txfsmresetdone_r_i_1
       (.I0(gt1_txfsmresetdone_i),
        .O(gt1_txfsmresetdone_r_reg));
  gtx3g_bert_0_gtx3g_GT_USRCLK_SOURCE gt_usrclk_source
       (.GT0_TXOUTCLK_IN(gt0_txoutclk_i),
        .GT0_TXUSRCLK_OUT(GT1_RXUSRCLK2_OUT),
        .Q0_CLK1_GTREFCLK_OUT(q0_clk1_refclk_i),
        .Q0_CLK1_GTREFCLK_PAD_N_IN(Q0_CLK1_GTREFCLK_PAD_N_IN),
        .Q0_CLK1_GTREFCLK_PAD_P_IN(Q0_CLK1_GTREFCLK_PAD_P_IN));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "gtx3g,gtwizard_v3_6_7,{protocol_file=xaui}" *) 
  gtx3g_bert_0_gtx3g gtx3g_init_i
       (.dont_reset_on_data_error_in(1'b1),
        .gt0_data_valid_in(gt0_track_data_i),
        .gt0_dmonitorout_out({gtx3g_init_i_n_21,gtx3g_init_i_n_22,gtx3g_init_i_n_23,gtx3g_init_i_n_24,gtx3g_init_i_n_25,gtx3g_init_i_n_26,gtx3g_init_i_n_27,gtx3g_init_i_n_28}),
        .gt0_drpaddr_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt0_drpclk_in(CLK),
        .gt0_drpdi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt0_drpdo_out({gtx3g_init_i_n_4,gtx3g_init_i_n_5,gtx3g_init_i_n_6,gtx3g_init_i_n_7,gtx3g_init_i_n_8,gtx3g_init_i_n_9,gtx3g_init_i_n_10,gtx3g_init_i_n_11,gtx3g_init_i_n_12,gtx3g_init_i_n_13,gtx3g_init_i_n_14,gtx3g_init_i_n_15,gtx3g_init_i_n_16,gtx3g_init_i_n_17,gtx3g_init_i_n_18,gtx3g_init_i_n_19}),
        .gt0_drpen_in(1'b0),
        .gt0_drprdy_out(gtx3g_init_i_n_20),
        .gt0_drpwe_in(1'b0),
        .gt0_eyescandataerror_out(gtx3g_init_i_n_29),
        .gt0_eyescanreset_in(1'b0),
        .gt0_eyescantrigger_in(1'b0),
        .gt0_gtrxreset_in(1'b0),
        .gt0_gttxreset_in(1'b0),
        .gt0_gtxrxn_in(RXN_IN[0]),
        .gt0_gtxrxp_in(RXP_IN[0]),
        .gt0_gtxtxn_out(TXN_OUT[0]),
        .gt0_gtxtxp_out(TXP_OUT[0]),
        .gt0_loopback_in({1'b0,1'b1,1'b0}),
        .gt0_qplllock_in(common0_i_n_0),
        .gt0_qplloutclk_in(common0_i_n_1),
        .gt0_qplloutrefclk_in(common0_i_n_2),
        .gt0_qpllrefclklost_in(common0_i_n_3),
        .gt0_qpllreset_out(gt0_qpllreset_i),
        .gt0_rx_fsm_reset_done_out(gtx3g_init_i_n_1),
        .gt0_rxbufreset_in(1'b0),
        .gt0_rxbufstatus_out({gtx3g_init_i_n_53,gtx3g_init_i_n_54,gtx3g_init_i_n_55}),
        .gt0_rxbyteisaligned_out(gtx3g_init_i_n_56),
        .gt0_rxbyterealign_out(gtx3g_init_i_n_57),
        .gt0_rxcdrhold_in(1'b0),
        .gt0_rxchariscomma_out({gtx3g_init_i_n_68,gtx3g_init_i_n_69}),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxclkcorcnt_out({gtx3g_init_i_n_30,gtx3g_init_i_n_31}),
        .gt0_rxcommadet_out(gtx3g_init_i_n_58),
        .gt0_rxdata_out(RXDATA_OUT),
        .gt0_rxdfelpmreset_in(1'b0),
        .gt0_rxdisperr_out({gtx3g_init_i_n_49,gtx3g_init_i_n_50}),
        .gt0_rxlpmen_in(1'b1),
        .gt0_rxmcommaalignen_in(gt0_rxpcommaalignen_in),
        .gt0_rxmonitorout_out({gtx3g_init_i_n_59,gtx3g_init_i_n_60,gtx3g_init_i_n_61,gtx3g_init_i_n_62,gtx3g_init_i_n_63,gtx3g_init_i_n_64,gtx3g_init_i_n_65}),
        .gt0_rxmonitorsel_in({1'b0,1'b0}),
        .gt0_rxnotintable_out({gtx3g_init_i_n_51,gtx3g_init_i_n_52}),
        .gt0_rxoutclkfabric_out(gtx3g_init_i_n_67),
        .gt0_rxpcommaalignen_in(gt0_rxpcommaalignen_in),
        .gt0_rxpcsreset_in(1'b0),
        .gt0_rxpd_in({1'b0,1'b0}),
        .gt0_rxpmareset_in(1'b0),
        .gt0_rxpolarity_in(1'b0),
        .gt0_rxprbscntreset_in(1'b0),
        .gt0_rxprbserr_out(gtx3g_init_i_n_48),
        .gt0_rxprbssel_in({1'b0,1'b0,1'b0}),
        .gt0_rxrate_in({1'b0,1'b0,1'b0}),
        .gt0_rxratedone_out(gtx3g_init_i_n_66),
        .gt0_rxresetdone_out(gt0_rxresetdone_i),
        .gt0_rxuserrdy_in(1'b1),
        .gt0_rxusrclk2_in(GT1_RXUSRCLK2_OUT),
        .gt0_rxusrclk_in(GT1_RXUSRCLK2_OUT),
        .gt0_tx8b10bbypass_in({1'b0,1'b0}),
        .gt0_tx_fsm_reset_done_out(gt0_txfsmresetdone_i),
        .gt0_txcharisk_in({1'b0,gt0_txcharisk_in}),
        .gt0_txdata_in(Q),
        .gt0_txdiffctrl_in({1'b0,1'b0,1'b0,1'b0}),
        .gt0_txelecidle_in(1'b0),
        .gt0_txoutclk_out(gt0_txoutclk_i),
        .gt0_txoutclkfabric_out(gtx3g_init_i_n_76),
        .gt0_txoutclkpcs_out(gtx3g_init_i_n_77),
        .gt0_txpcsreset_in(1'b0),
        .gt0_txpd_in({1'b0,1'b0}),
        .gt0_txpmareset_in(1'b0),
        .gt0_txpolarity_in(1'b0),
        .gt0_txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt0_txprbsforceerr_in(1'b0),
        .gt0_txprbssel_in({1'b0,1'b0,1'b0}),
        .gt0_txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt0_txresetdone_out(gtx3g_init_i_n_78),
        .gt0_txuserrdy_in(1'b1),
        .gt0_txusrclk2_in(GT1_RXUSRCLK2_OUT),
        .gt0_txusrclk_in(GT1_RXUSRCLK2_OUT),
        .gt1_data_valid_in(gt1_track_data_i),
        .gt1_dmonitorout_out({gtx3g_init_i_n_96,gtx3g_init_i_n_97,gtx3g_init_i_n_98,gtx3g_init_i_n_99,gtx3g_init_i_n_100,gtx3g_init_i_n_101,gtx3g_init_i_n_102,gtx3g_init_i_n_103}),
        .gt1_drpaddr_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt1_drpclk_in(CLK),
        .gt1_drpdi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt1_drpdo_out({gtx3g_init_i_n_79,gtx3g_init_i_n_80,gtx3g_init_i_n_81,gtx3g_init_i_n_82,gtx3g_init_i_n_83,gtx3g_init_i_n_84,gtx3g_init_i_n_85,gtx3g_init_i_n_86,gtx3g_init_i_n_87,gtx3g_init_i_n_88,gtx3g_init_i_n_89,gtx3g_init_i_n_90,gtx3g_init_i_n_91,gtx3g_init_i_n_92,gtx3g_init_i_n_93,gtx3g_init_i_n_94}),
        .gt1_drpen_in(1'b0),
        .gt1_drprdy_out(gtx3g_init_i_n_95),
        .gt1_drpwe_in(1'b0),
        .gt1_eyescandataerror_out(gtx3g_init_i_n_104),
        .gt1_eyescanreset_in(1'b0),
        .gt1_eyescantrigger_in(1'b0),
        .gt1_gtrxreset_in(1'b0),
        .gt1_gttxreset_in(1'b0),
        .gt1_gtxrxn_in(RXN_IN[1]),
        .gt1_gtxrxp_in(RXP_IN[1]),
        .gt1_gtxtxn_out(TXN_OUT[1]),
        .gt1_gtxtxp_out(TXP_OUT[1]),
        .gt1_loopback_in({1'b0,1'b1,1'b0}),
        .gt1_rx_fsm_reset_done_out(gtx3g_init_i_n_3),
        .gt1_rxbufreset_in(1'b0),
        .gt1_rxbufstatus_out({gtx3g_init_i_n_128,gtx3g_init_i_n_129,gtx3g_init_i_n_130}),
        .gt1_rxbyteisaligned_out(gtx3g_init_i_n_131),
        .gt1_rxbyterealign_out(gtx3g_init_i_n_132),
        .gt1_rxcdrhold_in(1'b0),
        .gt1_rxchariscomma_out({gtx3g_init_i_n_143,gtx3g_init_i_n_144}),
        .gt1_rxcharisk_out(gt1_rxcharisk_out),
        .gt1_rxclkcorcnt_out({gtx3g_init_i_n_105,gtx3g_init_i_n_106}),
        .gt1_rxcommadet_out(gtx3g_init_i_n_133),
        .gt1_rxdata_out(gt1_rxdata_out),
        .gt1_rxdfelpmreset_in(1'b0),
        .gt1_rxdisperr_out({gtx3g_init_i_n_124,gtx3g_init_i_n_125}),
        .gt1_rxlpmen_in(1'b1),
        .gt1_rxmcommaalignen_in(gt1_rxpcommaalignen_in),
        .gt1_rxmonitorout_out({gtx3g_init_i_n_134,gtx3g_init_i_n_135,gtx3g_init_i_n_136,gtx3g_init_i_n_137,gtx3g_init_i_n_138,gtx3g_init_i_n_139,gtx3g_init_i_n_140}),
        .gt1_rxmonitorsel_in({1'b0,1'b0}),
        .gt1_rxnotintable_out({gtx3g_init_i_n_126,gtx3g_init_i_n_127}),
        .gt1_rxoutclkfabric_out(gtx3g_init_i_n_142),
        .gt1_rxpcommaalignen_in(gt1_rxpcommaalignen_in),
        .gt1_rxpcsreset_in(1'b0),
        .gt1_rxpd_in({1'b0,1'b0}),
        .gt1_rxpmareset_in(1'b0),
        .gt1_rxpolarity_in(1'b0),
        .gt1_rxprbscntreset_in(1'b0),
        .gt1_rxprbserr_out(gtx3g_init_i_n_123),
        .gt1_rxprbssel_in({1'b0,1'b0,1'b0}),
        .gt1_rxrate_in({1'b0,1'b0,1'b0}),
        .gt1_rxratedone_out(gtx3g_init_i_n_141),
        .gt1_rxresetdone_out(gt1_rxresetdone_i),
        .gt1_rxuserrdy_in(1'b1),
        .gt1_rxusrclk2_in(GT1_RXUSRCLK2_OUT),
        .gt1_rxusrclk_in(GT1_RXUSRCLK2_OUT),
        .gt1_tx8b10bbypass_in({1'b0,1'b0}),
        .gt1_tx_fsm_reset_done_out(gt1_txfsmresetdone_i),
        .gt1_txcharisk_in({1'b0,gt1_txcharisk_in}),
        .gt1_txdata_in(\TX_DATA_OUT_reg[15] ),
        .gt1_txdiffctrl_in({1'b0,1'b0,1'b0,1'b0}),
        .gt1_txelecidle_in(1'b0),
        .gt1_txoutclk_out(gt1_txoutclk_i),
        .gt1_txoutclkfabric_out(gtx3g_init_i_n_151),
        .gt1_txoutclkpcs_out(gtx3g_init_i_n_152),
        .gt1_txpcsreset_in(1'b0),
        .gt1_txpd_in({1'b0,1'b0}),
        .gt1_txpmareset_in(1'b0),
        .gt1_txpolarity_in(1'b0),
        .gt1_txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt1_txprbsforceerr_in(1'b0),
        .gt1_txprbssel_in({1'b0,1'b0,1'b0}),
        .gt1_txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt1_txresetdone_out(gtx3g_init_i_n_153),
        .gt1_txuserrdy_in(1'b1),
        .gt1_txusrclk2_in(GT1_RXUSRCLK2_OUT),
        .gt1_txusrclk_in(GT1_RXUSRCLK2_OUT),
        .soft_reset_rx_in(1'b0),
        .soft_reset_tx_in(1'b0),
        .sysclk_in(CLK));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block
   (data_out,
    gt1_txresetdone_out,
    sysclk_in);
  output data_out;
  input gt1_txresetdone_out;
  input sysclk_in;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt1_txresetdone_out;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_txresetdone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_10
   (rx_fsm_reset_done_int_reg,
    reset_time_out_reg,
    E,
    D,
    time_out_100us_reg,
    dont_reset_on_data_error_in,
    reset_time_out_reg_0,
    out,
    gt1_rx_fsm_reset_done_out,
    \FSM_sequential_rx_state_reg[3] ,
    \FSM_sequential_rx_state_reg[1] ,
    \FSM_sequential_rx_state_reg[1]_0 ,
    reset_time_out_reg_1,
    rx_state15_out,
    time_out_1us_reg,
    rxresetdone_s3_reg,
    data_out,
    time_out_wait_bypass_s3,
    rx_state16_out,
    gt1_data_valid_in,
    sysclk_in);
  output rx_fsm_reset_done_int_reg;
  output reset_time_out_reg;
  output [0:0]E;
  output [2:0]D;
  input time_out_100us_reg;
  input dont_reset_on_data_error_in;
  input reset_time_out_reg_0;
  input [3:0]out;
  input gt1_rx_fsm_reset_done_out;
  input \FSM_sequential_rx_state_reg[3] ;
  input \FSM_sequential_rx_state_reg[1] ;
  input \FSM_sequential_rx_state_reg[1]_0 ;
  input reset_time_out_reg_1;
  input rx_state15_out;
  input time_out_1us_reg;
  input rxresetdone_s3_reg;
  input data_out;
  input time_out_wait_bypass_s3;
  input rx_state16_out;
  input gt1_data_valid_in;
  input sysclk_in;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_sequential_rx_state[1]_i_2__0_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_3__0_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_6__0_n_0 ;
  wire \FSM_sequential_rx_state_reg[1] ;
  wire \FSM_sequential_rx_state_reg[1]_0 ;
  wire \FSM_sequential_rx_state_reg[3] ;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_valid_sync;
  wire dont_reset_on_data_error_in;
  wire gt1_data_valid_in;
  wire gt1_rx_fsm_reset_done_out;
  wire [3:0]out;
  wire reset_time_out;
  wire reset_time_out_i_4__0_n_0;
  wire reset_time_out_reg;
  wire reset_time_out_reg_0;
  wire reset_time_out_reg_1;
  wire rx_fsm_reset_done_int;
  wire rx_fsm_reset_done_int_i_3__0_n_0;
  wire rx_fsm_reset_done_int_i_4__0_n_0;
  wire rx_fsm_reset_done_int_reg;
  wire rx_state15_out;
  wire rx_state16_out;
  wire rxresetdone_s3_reg;
  wire sysclk_in;
  wire time_out_100us_reg;
  wire time_out_1us_reg;
  wire time_out_wait_bypass_s3;

  LUT6 #(
    .INIT(64'h001DFFFF001D0000)) 
    \FSM_sequential_rx_state[0]_i_1__0 
       (.I0(\FSM_sequential_rx_state[1]_i_2__0_n_0 ),
        .I1(out[1]),
        .I2(out[0]),
        .I3(out[2]),
        .I4(out[3]),
        .I5(reset_time_out_reg_1),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h000003BB33330088)) 
    \FSM_sequential_rx_state[1]_i_1__0 
       (.I0(\FSM_sequential_rx_state[1]_i_2__0_n_0 ),
        .I1(out[3]),
        .I2(rx_state16_out),
        .I3(out[2]),
        .I4(out[1]),
        .I5(out[0]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'hAAAAA8AA)) 
    \FSM_sequential_rx_state[1]_i_2__0 
       (.I0(out[0]),
        .I1(data_valid_sync),
        .I2(reset_time_out_reg_0),
        .I3(time_out_100us_reg),
        .I4(dont_reset_on_data_error_in),
        .O(\FSM_sequential_rx_state[1]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \FSM_sequential_rx_state[3]_i_1__0 
       (.I0(\FSM_sequential_rx_state[3]_i_3__0_n_0 ),
        .I1(out[3]),
        .I2(\FSM_sequential_rx_state_reg[1] ),
        .I3(out[2]),
        .I4(\FSM_sequential_rx_state_reg[1]_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'h030000000088CC88)) 
    \FSM_sequential_rx_state[3]_i_2__0 
       (.I0(\FSM_sequential_rx_state[3]_i_6__0_n_0 ),
        .I1(out[3]),
        .I2(rx_state15_out),
        .I3(out[1]),
        .I4(out[0]),
        .I5(out[2]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h6667666677777777)) 
    \FSM_sequential_rx_state[3]_i_3__0 
       (.I0(out[1]),
        .I1(data_valid_sync),
        .I2(reset_time_out_reg_0),
        .I3(dont_reset_on_data_error_in),
        .I4(time_out_100us_reg),
        .I5(out[0]),
        .O(\FSM_sequential_rx_state[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFEF0000FFEFFFFF)) 
    \FSM_sequential_rx_state[3]_i_6__0 
       (.I0(data_valid_sync),
        .I1(reset_time_out_reg_0),
        .I2(time_out_100us_reg),
        .I3(dont_reset_on_data_error_in),
        .I4(out[0]),
        .I5(time_out_wait_bypass_s3),
        .O(\FSM_sequential_rx_state[3]_i_6__0_n_0 ));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_data_valid_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_valid_sync),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    reset_time_out_i_1__2
       (.I0(reset_time_out),
        .I1(\FSM_sequential_rx_state_reg[3] ),
        .I2(reset_time_out_reg_0),
        .O(reset_time_out_reg));
  LUT6 #(
    .INIT(64'hB8BBB888B8BBB8BB)) 
    reset_time_out_i_2__2
       (.I0(reset_time_out_i_4__0_n_0),
        .I1(out[3]),
        .I2(rxresetdone_s3_reg),
        .I3(out[2]),
        .I4(data_out),
        .I5(out[1]),
        .O(reset_time_out));
  LUT3 #(
    .INIT(8'h67)) 
    reset_time_out_i_4__0
       (.I0(out[1]),
        .I1(data_valid_sync),
        .I2(out[0]),
        .O(reset_time_out_i_4__0_n_0));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    rx_fsm_reset_done_int_i_1__0
       (.I0(rx_fsm_reset_done_int),
        .I1(out[2]),
        .I2(rx_fsm_reset_done_int_i_3__0_n_0),
        .I3(out[3]),
        .I4(gt1_rx_fsm_reset_done_out),
        .O(rx_fsm_reset_done_int_reg));
  LUT5 #(
    .INIT(32'h00001000)) 
    rx_fsm_reset_done_int_i_2__0
       (.I0(out[2]),
        .I1(out[0]),
        .I2(data_valid_sync),
        .I3(time_out_1us_reg),
        .I4(reset_time_out_reg_0),
        .O(rx_fsm_reset_done_int));
  LUT6 #(
    .INIT(64'h00FF00005D005D00)) 
    rx_fsm_reset_done_int_i_3__0
       (.I0(data_valid_sync),
        .I1(time_out_1us_reg),
        .I2(reset_time_out_reg_0),
        .I3(out[1]),
        .I4(rx_fsm_reset_done_int_i_4__0_n_0),
        .I5(out[0]),
        .O(rx_fsm_reset_done_int_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT4 #(
    .INIT(16'hFF02)) 
    rx_fsm_reset_done_int_i_4__0
       (.I0(time_out_100us_reg),
        .I1(dont_reset_on_data_error_in),
        .I2(reset_time_out_reg_0),
        .I3(data_valid_sync),
        .O(rx_fsm_reset_done_int_i_4__0_n_0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_11
   (SR,
    mmcm_lock_reclocked_reg,
    mmcm_lock_reclocked,
    Q,
    \mmcm_lock_count_reg[6] ,
    sysclk_in);
  output [0:0]SR;
  output mmcm_lock_reclocked_reg;
  input mmcm_lock_reclocked;
  input [1:0]Q;
  input \mmcm_lock_count_reg[6] ;
  input sysclk_in;

  wire [1:0]Q;
  wire [0:0]SR;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire \mmcm_lock_count_reg[6] ;
  wire mmcm_lock_i;
  wire mmcm_lock_reclocked;
  wire mmcm_lock_reclocked_reg;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(mmcm_lock_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[9]_i_1__2 
       (.I0(mmcm_lock_i),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'hFEFF0000)) 
    mmcm_lock_reclocked_i_1__2
       (.I0(mmcm_lock_reclocked),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\mmcm_lock_count_reg[6] ),
        .I4(mmcm_lock_i),
        .O(mmcm_lock_reclocked_reg));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_12
   (\FSM_sequential_rx_state_reg[0] ,
    data_out,
    out,
    init_wait_done_reg,
    time_out_2ms_reg,
    \wait_time_cnt_reg[12] ,
    \wait_time_cnt_reg[1] ,
    \wait_time_cnt_reg[6] ,
    gt0_qplllock_in,
    sysclk_in);
  output \FSM_sequential_rx_state_reg[0] ;
  output data_out;
  input [1:0]out;
  input init_wait_done_reg;
  input time_out_2ms_reg;
  input \wait_time_cnt_reg[12] ;
  input \wait_time_cnt_reg[1] ;
  input \wait_time_cnt_reg[6] ;
  input gt0_qplllock_in;
  input sysclk_in;

  wire \FSM_sequential_rx_state[3]_i_11__0_n_0 ;
  wire \FSM_sequential_rx_state_reg[0] ;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_qplllock_in;
  wire init_wait_done_reg;
  wire [1:0]out;
  wire sysclk_in;
  wire time_out_2ms_reg;
  wire \wait_time_cnt_reg[12] ;
  wire \wait_time_cnt_reg[1] ;
  wire \wait_time_cnt_reg[6] ;

  LUT6 #(
    .INIT(64'hEFE0E0E0E0E0E0E0)) 
    \FSM_sequential_rx_state[3]_i_11__0 
       (.I0(data_out),
        .I1(time_out_2ms_reg),
        .I2(out[0]),
        .I3(\wait_time_cnt_reg[12] ),
        .I4(\wait_time_cnt_reg[1] ),
        .I5(\wait_time_cnt_reg[6] ),
        .O(\FSM_sequential_rx_state[3]_i_11__0_n_0 ));
  MUXF7 \FSM_sequential_rx_state_reg[3]_i_5__0 
       (.I0(init_wait_done_reg),
        .I1(\FSM_sequential_rx_state[3]_i_11__0_n_0 ),
        .O(\FSM_sequential_rx_state_reg[0] ),
        .S(out[1]));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_qplllock_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_13
   (data_out,
    data_in,
    gt1_rxusrclk_in);
  output data_out;
  input data_in;
  input gt1_rxusrclk_in;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt1_rxusrclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_14
   (data_out,
    gt1_rx_fsm_reset_done_out,
    gt1_rxusrclk_in);
  output data_out;
  input gt1_rx_fsm_reset_done_out;
  input gt1_rxusrclk_in;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt1_rx_fsm_reset_done_out;
  wire gt1_rxusrclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(gt1_rx_fsm_reset_done_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(gt1_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_15
   (data_out,
    data_in,
    sysclk_in);
  output data_out;
  input data_in;
  input sysclk_in;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_16
   (data_out,
    gt0_txresetdone_out,
    sysclk_in);
  output data_out;
  input gt0_txresetdone_out;
  input sysclk_in;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_txresetdone_out;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_txresetdone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_17
   (SR,
    mmcm_lock_reclocked_reg,
    mmcm_lock_reclocked,
    Q,
    \mmcm_lock_count_reg[6] ,
    sysclk_in);
  output [0:0]SR;
  output mmcm_lock_reclocked_reg;
  input mmcm_lock_reclocked;
  input [1:0]Q;
  input \mmcm_lock_count_reg[6] ;
  input sysclk_in;

  wire [1:0]Q;
  wire [0:0]SR;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire \mmcm_lock_count_reg[6] ;
  wire mmcm_lock_i;
  wire mmcm_lock_reclocked;
  wire mmcm_lock_reclocked_reg;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(mmcm_lock_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[9]_i_1 
       (.I0(mmcm_lock_i),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'hFEFF0000)) 
    mmcm_lock_reclocked_i_1
       (.I0(mmcm_lock_reclocked),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\mmcm_lock_count_reg[6] ),
        .I4(mmcm_lock_i),
        .O(mmcm_lock_reclocked_reg));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_18
   (reset_time_out_reg,
    E,
    out,
    reset_time_out,
    gt0_tx_phalignment_done_i,
    time_out_wait_bypass_s3,
    \FSM_sequential_tx_state_reg[1] ,
    \FSM_sequential_tx_state_reg[0] ,
    pll_reset_asserted_reg,
    init_wait_done_reg,
    time_out_2ms_reg,
    \wait_time_cnt_reg[12] ,
    \wait_time_cnt_reg[1] ,
    \wait_time_cnt_reg[6] ,
    mmcm_lock_reclocked,
    txresetdone_s3,
    gt0_qplllock_in,
    sysclk_in);
  output reset_time_out_reg;
  output [0:0]E;
  input [3:0]out;
  input reset_time_out;
  input gt0_tx_phalignment_done_i;
  input time_out_wait_bypass_s3;
  input \FSM_sequential_tx_state_reg[1] ;
  input \FSM_sequential_tx_state_reg[0] ;
  input pll_reset_asserted_reg;
  input init_wait_done_reg;
  input time_out_2ms_reg;
  input \wait_time_cnt_reg[12] ;
  input \wait_time_cnt_reg[1] ;
  input \wait_time_cnt_reg[6] ;
  input mmcm_lock_reclocked;
  input txresetdone_s3;
  input gt0_qplllock_in;
  input sysclk_in;

  wire [0:0]E;
  wire \FSM_sequential_tx_state[3]_i_10_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_9_n_0 ;
  wire \FSM_sequential_tx_state_reg[0] ;
  wire \FSM_sequential_tx_state_reg[1] ;
  wire \FSM_sequential_tx_state_reg[3]_i_5_n_0 ;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_qplllock_in;
  wire gt0_tx_phalignment_done_i;
  wire init_wait_done_reg;
  wire mmcm_lock_reclocked;
  wire [3:0]out;
  wire pll_reset_asserted_reg;
  wire qplllock_sync;
  wire reset_time_out;
  wire reset_time_out_i_2_n_0;
  wire reset_time_out_reg;
  wire sysclk_in;
  wire time_out_2ms_reg;
  wire time_out_wait_bypass_s3;
  wire txresetdone_s3;
  wire \wait_time_cnt_reg[12] ;
  wire \wait_time_cnt_reg[1] ;
  wire \wait_time_cnt_reg[6] ;

  LUT6 #(
    .INIT(64'h0F00EFEF0F00E0E0)) 
    \FSM_sequential_tx_state[3]_i_1 
       (.I0(gt0_tx_phalignment_done_i),
        .I1(time_out_wait_bypass_s3),
        .I2(out[3]),
        .I3(\FSM_sequential_tx_state_reg[1] ),
        .I4(\FSM_sequential_tx_state_reg[0] ),
        .I5(\FSM_sequential_tx_state_reg[3]_i_5_n_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'hEFE0E0E0E0E0E0E0)) 
    \FSM_sequential_tx_state[3]_i_10 
       (.I0(time_out_2ms_reg),
        .I1(qplllock_sync),
        .I2(out[0]),
        .I3(\wait_time_cnt_reg[12] ),
        .I4(\wait_time_cnt_reg[1] ),
        .I5(\wait_time_cnt_reg[6] ),
        .O(\FSM_sequential_tx_state[3]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \FSM_sequential_tx_state[3]_i_9 
       (.I0(pll_reset_asserted_reg),
        .I1(qplllock_sync),
        .I2(out[0]),
        .I3(init_wait_done_reg),
        .O(\FSM_sequential_tx_state[3]_i_9_n_0 ));
  MUXF7 \FSM_sequential_tx_state_reg[3]_i_5 
       (.I0(\FSM_sequential_tx_state[3]_i_9_n_0 ),
        .I1(\FSM_sequential_tx_state[3]_i_10_n_0 ),
        .O(\FSM_sequential_tx_state_reg[3]_i_5_n_0 ),
        .S(out[1]));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_qplllock_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(qplllock_sync),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEFEFEFA3202020A3)) 
    reset_time_out_i_1
       (.I0(reset_time_out_i_2_n_0),
        .I1(out[3]),
        .I2(out[0]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(reset_time_out),
        .O(reset_time_out_reg));
  LUT6 #(
    .INIT(64'hF4F4FF0F0404FF0F)) 
    reset_time_out_i_2
       (.I0(out[3]),
        .I1(qplllock_sync),
        .I2(out[2]),
        .I3(mmcm_lock_reclocked),
        .I4(out[1]),
        .I5(txresetdone_s3),
        .O(reset_time_out_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_19
   (data_out,
    data_in,
    gt0_txusrclk_in);
  output data_out;
  input data_in;
  input gt0_txusrclk_in;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_txusrclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_20
   (data_out,
    data_in,
    sysclk_in);
  output data_out;
  input data_in;
  input sysclk_in;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_21
   (data_out,
    gt0_tx_fsm_reset_done_out,
    gt0_txusrclk_in);
  output data_out;
  input gt0_tx_fsm_reset_done_out;
  input gt0_txusrclk_in;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_tx_fsm_reset_done_out;
  wire gt0_txusrclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(gt0_tx_fsm_reset_done_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(gt0_txusrclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_22
   (data_out,
    U0_TXDLYSRESETDONE,
    sysclk_in);
  output data_out;
  input [0:0]U0_TXDLYSRESETDONE;
  input sysclk_in;

  wire [0:0]U0_TXDLYSRESETDONE;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(U0_TXDLYSRESETDONE),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_23
   (\TXDLYEN_reg[0] ,
    data_out,
    \FSM_onehot_tx_phalign_manual_state_reg[0] ,
    Q,
    out,
    gt0_txdlyen_in,
    U0_TXPHALIGNDONE,
    sysclk_in);
  output \TXDLYEN_reg[0] ;
  output data_out;
  output \FSM_onehot_tx_phalign_manual_state_reg[0] ;
  input [0:0]Q;
  input [2:0]out;
  input gt0_txdlyen_in;
  input [0:0]U0_TXPHALIGNDONE;
  input sysclk_in;

  wire \FSM_onehot_tx_phalign_manual_state_reg[0] ;
  wire [0:0]Q;
  wire \TXDLYEN_reg[0] ;
  wire [0:0]U0_TXPHALIGNDONE;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_txdlyen_in;
  wire [2:0]out;
  wire sysclk_in;

  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_tx_phalign_manual_state[8]_i_5 
       (.I0(data_out),
        .I1(Q),
        .O(\FSM_onehot_tx_phalign_manual_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFBFFFFFFFBF0)) 
    \TXDLYEN[0]_i_1 
       (.I0(Q),
        .I1(data_out),
        .I2(out[1]),
        .I3(out[0]),
        .I4(out[2]),
        .I5(gt0_txdlyen_in),
        .O(\TXDLYEN_reg[0] ));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(U0_TXPHALIGNDONE),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_24
   (data_out,
    U0_TXDLYSRESETDONE,
    sysclk_in);
  output data_out;
  input [0:0]U0_TXDLYSRESETDONE;
  input sysclk_in;

  wire [0:0]U0_TXDLYSRESETDONE;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(U0_TXDLYSRESETDONE),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_25
   (data_out,
    U0_TXPHALIGNDONE,
    sysclk_in);
  output data_out;
  input [0:0]U0_TXPHALIGNDONE;
  input sysclk_in;

  wire [0:0]U0_TXPHALIGNDONE;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(U0_TXPHALIGNDONE),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_27
   (data_out,
    gt0_rxresetdone_out,
    sysclk_in);
  output data_out;
  input gt0_rxresetdone_out;
  input sysclk_in;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_rxresetdone_out;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_rxresetdone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_28
   (rx_fsm_reset_done_int_reg,
    reset_time_out_reg,
    E,
    D,
    time_out_100us_reg,
    dont_reset_on_data_error_in,
    reset_time_out_reg_0,
    out,
    gt0_rx_fsm_reset_done_out,
    \FSM_sequential_rx_state_reg[3] ,
    \FSM_sequential_rx_state_reg[1] ,
    \FSM_sequential_rx_state_reg[1]_0 ,
    reset_time_out_reg_1,
    rx_state15_out,
    time_out_1us_reg,
    rxresetdone_s3_reg,
    data_out,
    time_out_wait_bypass_s3,
    rx_state16_out,
    gt0_data_valid_in,
    sysclk_in);
  output rx_fsm_reset_done_int_reg;
  output reset_time_out_reg;
  output [0:0]E;
  output [2:0]D;
  input time_out_100us_reg;
  input dont_reset_on_data_error_in;
  input reset_time_out_reg_0;
  input [3:0]out;
  input gt0_rx_fsm_reset_done_out;
  input \FSM_sequential_rx_state_reg[3] ;
  input \FSM_sequential_rx_state_reg[1] ;
  input \FSM_sequential_rx_state_reg[1]_0 ;
  input reset_time_out_reg_1;
  input rx_state15_out;
  input time_out_1us_reg;
  input rxresetdone_s3_reg;
  input data_out;
  input time_out_wait_bypass_s3;
  input rx_state16_out;
  input gt0_data_valid_in;
  input sysclk_in;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_sequential_rx_state[1]_i_2_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_3_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_6_n_0 ;
  wire \FSM_sequential_rx_state_reg[1] ;
  wire \FSM_sequential_rx_state_reg[1]_0 ;
  wire \FSM_sequential_rx_state_reg[3] ;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_valid_sync;
  wire dont_reset_on_data_error_in;
  wire gt0_data_valid_in;
  wire gt0_rx_fsm_reset_done_out;
  wire [3:0]out;
  wire reset_time_out;
  wire reset_time_out_i_4_n_0;
  wire reset_time_out_reg;
  wire reset_time_out_reg_0;
  wire reset_time_out_reg_1;
  wire rx_fsm_reset_done_int;
  wire rx_fsm_reset_done_int_i_3_n_0;
  wire rx_fsm_reset_done_int_i_4_n_0;
  wire rx_fsm_reset_done_int_reg;
  wire rx_state15_out;
  wire rx_state16_out;
  wire rxresetdone_s3_reg;
  wire sysclk_in;
  wire time_out_100us_reg;
  wire time_out_1us_reg;
  wire time_out_wait_bypass_s3;

  LUT6 #(
    .INIT(64'h001DFFFF001D0000)) 
    \FSM_sequential_rx_state[0]_i_1 
       (.I0(\FSM_sequential_rx_state[1]_i_2_n_0 ),
        .I1(out[1]),
        .I2(out[0]),
        .I3(out[2]),
        .I4(out[3]),
        .I5(reset_time_out_reg_1),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h000003BB33330088)) 
    \FSM_sequential_rx_state[1]_i_1 
       (.I0(\FSM_sequential_rx_state[1]_i_2_n_0 ),
        .I1(out[3]),
        .I2(rx_state16_out),
        .I3(out[2]),
        .I4(out[1]),
        .I5(out[0]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT5 #(
    .INIT(32'hAAAAA8AA)) 
    \FSM_sequential_rx_state[1]_i_2 
       (.I0(out[0]),
        .I1(data_valid_sync),
        .I2(reset_time_out_reg_0),
        .I3(time_out_100us_reg),
        .I4(dont_reset_on_data_error_in),
        .O(\FSM_sequential_rx_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \FSM_sequential_rx_state[3]_i_1 
       (.I0(\FSM_sequential_rx_state[3]_i_3_n_0 ),
        .I1(out[3]),
        .I2(\FSM_sequential_rx_state_reg[1] ),
        .I3(out[2]),
        .I4(\FSM_sequential_rx_state_reg[1]_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'h030000000088CC88)) 
    \FSM_sequential_rx_state[3]_i_2 
       (.I0(\FSM_sequential_rx_state[3]_i_6_n_0 ),
        .I1(out[3]),
        .I2(rx_state15_out),
        .I3(out[1]),
        .I4(out[0]),
        .I5(out[2]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h6667666677777777)) 
    \FSM_sequential_rx_state[3]_i_3 
       (.I0(out[1]),
        .I1(data_valid_sync),
        .I2(reset_time_out_reg_0),
        .I3(dont_reset_on_data_error_in),
        .I4(time_out_100us_reg),
        .I5(out[0]),
        .O(\FSM_sequential_rx_state[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFEF0000FFEFFFFF)) 
    \FSM_sequential_rx_state[3]_i_6 
       (.I0(data_valid_sync),
        .I1(reset_time_out_reg_0),
        .I2(time_out_100us_reg),
        .I3(dont_reset_on_data_error_in),
        .I4(out[0]),
        .I5(time_out_wait_bypass_s3),
        .O(\FSM_sequential_rx_state[3]_i_6_n_0 ));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_data_valid_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_valid_sync),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    reset_time_out_i_1__1
       (.I0(reset_time_out),
        .I1(\FSM_sequential_rx_state_reg[3] ),
        .I2(reset_time_out_reg_0),
        .O(reset_time_out_reg));
  LUT6 #(
    .INIT(64'hB8BBB888B8BBB8BB)) 
    reset_time_out_i_2__1
       (.I0(reset_time_out_i_4_n_0),
        .I1(out[3]),
        .I2(rxresetdone_s3_reg),
        .I3(out[2]),
        .I4(data_out),
        .I5(out[1]),
        .O(reset_time_out));
  LUT3 #(
    .INIT(8'h67)) 
    reset_time_out_i_4
       (.I0(out[1]),
        .I1(data_valid_sync),
        .I2(out[0]),
        .O(reset_time_out_i_4_n_0));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    rx_fsm_reset_done_int_i_1
       (.I0(rx_fsm_reset_done_int),
        .I1(out[2]),
        .I2(rx_fsm_reset_done_int_i_3_n_0),
        .I3(out[3]),
        .I4(gt0_rx_fsm_reset_done_out),
        .O(rx_fsm_reset_done_int_reg));
  LUT5 #(
    .INIT(32'h00001000)) 
    rx_fsm_reset_done_int_i_2
       (.I0(out[2]),
        .I1(out[0]),
        .I2(data_valid_sync),
        .I3(time_out_1us_reg),
        .I4(reset_time_out_reg_0),
        .O(rx_fsm_reset_done_int));
  LUT6 #(
    .INIT(64'h00FF00005D005D00)) 
    rx_fsm_reset_done_int_i_3
       (.I0(data_valid_sync),
        .I1(time_out_1us_reg),
        .I2(reset_time_out_reg_0),
        .I3(out[1]),
        .I4(rx_fsm_reset_done_int_i_4_n_0),
        .I5(out[0]),
        .O(rx_fsm_reset_done_int_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'hFF02)) 
    rx_fsm_reset_done_int_i_4
       (.I0(time_out_100us_reg),
        .I1(dont_reset_on_data_error_in),
        .I2(reset_time_out_reg_0),
        .I3(data_valid_sync),
        .O(rx_fsm_reset_done_int_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_29
   (SR,
    mmcm_lock_reclocked_reg,
    mmcm_lock_reclocked,
    Q,
    \mmcm_lock_count_reg[6] ,
    sysclk_in);
  output [0:0]SR;
  output mmcm_lock_reclocked_reg;
  input mmcm_lock_reclocked;
  input [1:0]Q;
  input \mmcm_lock_count_reg[6] ;
  input sysclk_in;

  wire [1:0]Q;
  wire [0:0]SR;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire \mmcm_lock_count_reg[6] ;
  wire mmcm_lock_i;
  wire mmcm_lock_reclocked;
  wire mmcm_lock_reclocked_reg;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(mmcm_lock_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[9]_i_1__1 
       (.I0(mmcm_lock_i),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT5 #(
    .INIT(32'hFEFF0000)) 
    mmcm_lock_reclocked_i_1__1
       (.I0(mmcm_lock_reclocked),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\mmcm_lock_count_reg[6] ),
        .I4(mmcm_lock_i),
        .O(mmcm_lock_reclocked_reg));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_30
   (\FSM_sequential_rx_state_reg[0] ,
    data_out,
    out,
    init_wait_done_reg,
    time_out_2ms_reg,
    \wait_time_cnt_reg[12] ,
    \wait_time_cnt_reg[1] ,
    \wait_time_cnt_reg[6] ,
    gt0_qplllock_in,
    sysclk_in);
  output \FSM_sequential_rx_state_reg[0] ;
  output data_out;
  input [1:0]out;
  input init_wait_done_reg;
  input time_out_2ms_reg;
  input \wait_time_cnt_reg[12] ;
  input \wait_time_cnt_reg[1] ;
  input \wait_time_cnt_reg[6] ;
  input gt0_qplllock_in;
  input sysclk_in;

  wire \FSM_sequential_rx_state[3]_i_11_n_0 ;
  wire \FSM_sequential_rx_state_reg[0] ;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_qplllock_in;
  wire init_wait_done_reg;
  wire [1:0]out;
  wire sysclk_in;
  wire time_out_2ms_reg;
  wire \wait_time_cnt_reg[12] ;
  wire \wait_time_cnt_reg[1] ;
  wire \wait_time_cnt_reg[6] ;

  LUT6 #(
    .INIT(64'hEFE0E0E0E0E0E0E0)) 
    \FSM_sequential_rx_state[3]_i_11 
       (.I0(data_out),
        .I1(time_out_2ms_reg),
        .I2(out[0]),
        .I3(\wait_time_cnt_reg[12] ),
        .I4(\wait_time_cnt_reg[1] ),
        .I5(\wait_time_cnt_reg[6] ),
        .O(\FSM_sequential_rx_state[3]_i_11_n_0 ));
  MUXF7 \FSM_sequential_rx_state_reg[3]_i_5 
       (.I0(init_wait_done_reg),
        .I1(\FSM_sequential_rx_state[3]_i_11_n_0 ),
        .O(\FSM_sequential_rx_state_reg[0] ),
        .S(out[1]));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_qplllock_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_31
   (data_out,
    data_in,
    gt0_rxusrclk_in);
  output data_out;
  input data_in;
  input gt0_rxusrclk_in;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_rxusrclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_32
   (data_out,
    gt0_rx_fsm_reset_done_out,
    gt0_rxusrclk_in);
  output data_out;
  input gt0_rx_fsm_reset_done_out;
  input gt0_rxusrclk_in;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_rx_fsm_reset_done_out;
  wire gt0_rxusrclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(gt0_rx_fsm_reset_done_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(gt0_rxusrclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_33
   (data_out,
    data_in,
    sysclk_in);
  output data_out;
  input data_in;
  input sysclk_in;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_4
   (SR,
    mmcm_lock_reclocked_reg,
    mmcm_lock_reclocked,
    Q,
    \mmcm_lock_count_reg[6] ,
    sysclk_in);
  output [0:0]SR;
  output mmcm_lock_reclocked_reg;
  input mmcm_lock_reclocked;
  input [1:0]Q;
  input \mmcm_lock_count_reg[6] ;
  input sysclk_in;

  wire [1:0]Q;
  wire [0:0]SR;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire \mmcm_lock_count_reg[6] ;
  wire mmcm_lock_i;
  wire mmcm_lock_reclocked;
  wire mmcm_lock_reclocked_reg;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(mmcm_lock_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[9]_i_1__0 
       (.I0(mmcm_lock_i),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT5 #(
    .INIT(32'hFEFF0000)) 
    mmcm_lock_reclocked_i_1__0
       (.I0(mmcm_lock_reclocked),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\mmcm_lock_count_reg[6] ),
        .I4(mmcm_lock_i),
        .O(mmcm_lock_reclocked_reg));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_5
   (reset_time_out_reg,
    E,
    out,
    reset_time_out_reg_0,
    gt0_tx_phalignment_done_i,
    time_out_wait_bypass_s3,
    \FSM_sequential_tx_state_reg[1] ,
    \FSM_sequential_tx_state_reg[0] ,
    pll_reset_asserted_reg,
    init_wait_done_reg,
    time_out_2ms_reg,
    \wait_time_cnt_reg[12] ,
    \wait_time_cnt_reg[1] ,
    \wait_time_cnt_reg[6] ,
    mmcm_lock_reclocked,
    txresetdone_s3,
    gt0_qplllock_in,
    sysclk_in);
  output reset_time_out_reg;
  output [0:0]E;
  input [3:0]out;
  input reset_time_out_reg_0;
  input gt0_tx_phalignment_done_i;
  input time_out_wait_bypass_s3;
  input \FSM_sequential_tx_state_reg[1] ;
  input \FSM_sequential_tx_state_reg[0] ;
  input pll_reset_asserted_reg;
  input init_wait_done_reg;
  input time_out_2ms_reg;
  input \wait_time_cnt_reg[12] ;
  input \wait_time_cnt_reg[1] ;
  input \wait_time_cnt_reg[6] ;
  input mmcm_lock_reclocked;
  input txresetdone_s3;
  input gt0_qplllock_in;
  input sysclk_in;

  wire [0:0]E;
  wire \FSM_sequential_tx_state[3]_i_10__0_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_9__0_n_0 ;
  wire \FSM_sequential_tx_state_reg[0] ;
  wire \FSM_sequential_tx_state_reg[1] ;
  wire \FSM_sequential_tx_state_reg[3]_i_5__0_n_0 ;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_qplllock_in;
  wire gt0_tx_phalignment_done_i;
  wire init_wait_done_reg;
  wire mmcm_lock_reclocked;
  wire [3:0]out;
  wire pll_reset_asserted_reg;
  wire qplllock_sync;
  wire reset_time_out_i_2__0_n_0;
  wire reset_time_out_reg;
  wire reset_time_out_reg_0;
  wire sysclk_in;
  wire time_out_2ms_reg;
  wire time_out_wait_bypass_s3;
  wire txresetdone_s3;
  wire \wait_time_cnt_reg[12] ;
  wire \wait_time_cnt_reg[1] ;
  wire \wait_time_cnt_reg[6] ;

  LUT6 #(
    .INIT(64'hEFE0E0E0E0E0E0E0)) 
    \FSM_sequential_tx_state[3]_i_10__0 
       (.I0(time_out_2ms_reg),
        .I1(qplllock_sync),
        .I2(out[0]),
        .I3(\wait_time_cnt_reg[12] ),
        .I4(\wait_time_cnt_reg[1] ),
        .I5(\wait_time_cnt_reg[6] ),
        .O(\FSM_sequential_tx_state[3]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'h0F00EFEF0F00E0E0)) 
    \FSM_sequential_tx_state[3]_i_1__0 
       (.I0(gt0_tx_phalignment_done_i),
        .I1(time_out_wait_bypass_s3),
        .I2(out[3]),
        .I3(\FSM_sequential_tx_state_reg[1] ),
        .I4(\FSM_sequential_tx_state_reg[0] ),
        .I5(\FSM_sequential_tx_state_reg[3]_i_5__0_n_0 ),
        .O(E));
  LUT4 #(
    .INIT(16'h2F20)) 
    \FSM_sequential_tx_state[3]_i_9__0 
       (.I0(pll_reset_asserted_reg),
        .I1(qplllock_sync),
        .I2(out[0]),
        .I3(init_wait_done_reg),
        .O(\FSM_sequential_tx_state[3]_i_9__0_n_0 ));
  MUXF7 \FSM_sequential_tx_state_reg[3]_i_5__0 
       (.I0(\FSM_sequential_tx_state[3]_i_9__0_n_0 ),
        .I1(\FSM_sequential_tx_state[3]_i_10__0_n_0 ),
        .O(\FSM_sequential_tx_state_reg[3]_i_5__0_n_0 ),
        .S(out[1]));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt0_qplllock_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(qplllock_sync),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEFEFEFA3202020A3)) 
    reset_time_out_i_1__0
       (.I0(reset_time_out_i_2__0_n_0),
        .I1(out[3]),
        .I2(out[0]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(reset_time_out_reg_0),
        .O(reset_time_out_reg));
  LUT6 #(
    .INIT(64'hF4F4FF0F0404FF0F)) 
    reset_time_out_i_2__0
       (.I0(out[3]),
        .I1(qplllock_sync),
        .I2(out[2]),
        .I3(mmcm_lock_reclocked),
        .I4(out[1]),
        .I5(txresetdone_s3),
        .O(reset_time_out_i_2__0_n_0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_6
   (data_out,
    data_in,
    gt1_txusrclk_in);
  output data_out;
  input data_in;
  input gt1_txusrclk_in;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt1_txusrclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_7
   (data_out,
    data_in,
    sysclk_in);
  output data_out;
  input data_in;
  input sysclk_in;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_8
   (data_out,
    gt1_tx_fsm_reset_done_out,
    gt1_txusrclk_in);
  output data_out;
  input gt1_tx_fsm_reset_done_out;
  input gt1_txusrclk_in;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt1_tx_fsm_reset_done_out;
  wire gt1_txusrclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(gt1_tx_fsm_reset_done_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(gt1_txusrclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_block" *) 
module gtx3g_bert_0_gtx3g_sync_block_9
   (data_out,
    gt1_rxresetdone_out,
    sysclk_in);
  output data_out;
  input gt1_rxresetdone_out;
  input sysclk_in;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt1_rxresetdone_out;
  wire sysclk_in;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(sysclk_in),
        .CE(1'b1),
        .D(gt1_rxresetdone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(sysclk_in),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_pulse" *) 
module gtx3g_bert_0_gtx3g_sync_pulse
   (p_3_out,
    E,
    sysclk_in,
    Q,
    D,
    \txphaligndone_store_reg[0] ,
    data_sync_reg6,
    \FSM_onehot_tx_phalign_manual_state_reg[0] ,
    txdlysresetdone_store,
    U0_TXPHINITDONE);
  output p_3_out;
  output [0:0]E;
  input sysclk_in;
  input [0:0]Q;
  input [4:0]D;
  input \txphaligndone_store_reg[0] ;
  input data_sync_reg6;
  input \FSM_onehot_tx_phalign_manual_state_reg[0] ;
  input [1:0]txdlysresetdone_store;
  input [0:0]U0_TXPHINITDONE;

  wire [4:0]D;
  wire [0:0]E;
  wire \FSM_onehot_tx_phalign_manual_state[8]_i_3_n_0 ;
  wire \FSM_onehot_tx_phalign_manual_state[8]_i_6_n_0 ;
  wire \FSM_onehot_tx_phalign_manual_state_reg[0] ;
  wire [0:0]Q;
  wire [0:0]U0_TXPHINITDONE;
  wire USER_DONE_i_1_n_0;
  wire data_sync_reg6;
  wire p_3_out;
  wire [2:0]stretch_r;
  wire \stretch_r[2]_i_1_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync2_r;
  wire sysclk_in;
  wire [1:0]txdlysresetdone_store;
  wire \txphaligndone_store_reg[0] ;

  LUT6 #(
    .INIT(64'hFFFFFFFEFAFAFAFA)) 
    \FSM_onehot_tx_phalign_manual_state[8]_i_2 
       (.I0(\FSM_onehot_tx_phalign_manual_state[8]_i_3_n_0 ),
        .I1(D[3]),
        .I2(\txphaligndone_store_reg[0] ),
        .I3(D[2]),
        .I4(D[4]),
        .I5(data_sync_reg6),
        .O(E));
  LUT6 #(
    .INIT(64'hFFF8F8F8F8F8F8F8)) 
    \FSM_onehot_tx_phalign_manual_state[8]_i_3 
       (.I0(\FSM_onehot_tx_phalign_manual_state[8]_i_6_n_0 ),
        .I1(D[1]),
        .I2(\FSM_onehot_tx_phalign_manual_state_reg[0] ),
        .I3(D[0]),
        .I4(txdlysresetdone_store[1]),
        .I5(txdlysresetdone_store[0]),
        .O(\FSM_onehot_tx_phalign_manual_state[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_tx_phalign_manual_state[8]_i_6 
       (.I0(p_3_out),
        .I1(Q),
        .O(\FSM_onehot_tx_phalign_manual_state[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    USER_DONE_i_1
       (.I0(sync1_r[0]),
        .I1(sync2_r[0]),
        .O(USER_DONE_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    USER_DONE_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(USER_DONE_i_1_n_0),
        .Q(p_3_out),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \stretch_r[2]_i_1 
       (.I0(U0_TXPHINITDONE),
        .O(\stretch_r[2]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .CLR(\stretch_r[2]_i_1_n_0 ),
        .D(stretch_r[1]),
        .Q(stretch_r[0]));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .CLR(\stretch_r[2]_i_1_n_0 ),
        .D(stretch_r[2]),
        .Q(stretch_r[1]));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[2] 
       (.C(sysclk_in),
        .CE(1'b1),
        .CLR(\stretch_r[2]_i_1_n_0 ),
        .D(1'b1),
        .Q(stretch_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(stretch_r[0]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync2_r[1]),
        .Q(sync2_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync2_r[2]),
        .Q(sync2_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[2] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(U0_TXPHINITDONE),
        .Q(sync2_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtx3g_sync_pulse" *) 
module gtx3g_bert_0_gtx3g_sync_pulse_26
   (D,
    sysclk_in,
    U0_TXPHINITDONE);
  output [0:0]D;
  input sysclk_in;
  input [0:0]U0_TXPHINITDONE;

  wire [0:0]D;
  wire [0:0]U0_TXPHINITDONE;
  wire USER_DONE_i_1__0_n_0;
  wire \stretch_r[2]_i_1_n_0 ;
  wire \stretch_r_reg_n_0_[0] ;
  wire \stretch_r_reg_n_0_[1] ;
  wire \stretch_r_reg_n_0_[2] ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync2_r;
  wire sysclk_in;

  LUT2 #(
    .INIT(4'h8)) 
    USER_DONE_i_1__0
       (.I0(sync1_r[0]),
        .I1(sync2_r[0]),
        .O(USER_DONE_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    USER_DONE_reg
       (.C(sysclk_in),
        .CE(1'b1),
        .D(USER_DONE_i_1__0_n_0),
        .Q(D),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \stretch_r[2]_i_1 
       (.I0(U0_TXPHINITDONE),
        .O(\stretch_r[2]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .CLR(\stretch_r[2]_i_1_n_0 ),
        .D(\stretch_r_reg_n_0_[1] ),
        .Q(\stretch_r_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .CLR(\stretch_r[2]_i_1_n_0 ),
        .D(\stretch_r_reg_n_0_[2] ),
        .Q(\stretch_r_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[2] 
       (.C(sysclk_in),
        .CE(1'b1),
        .CLR(\stretch_r[2]_i_1_n_0 ),
        .D(1'b1),
        .Q(\stretch_r_reg_n_0_[2] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(\stretch_r_reg_n_0_[0] ),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[0] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync2_r[1]),
        .Q(sync2_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[1] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(sync2_r[2]),
        .Q(sync2_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[2] 
       (.C(sysclk_in),
        .CE(1'b1),
        .D(U0_TXPHINITDONE),
        .Q(sync2_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "parity_encoder" *) 
module gtx3g_bert_0_parity_encoder
   (D,
    \tx_data_reg_reg[5] ,
    \tx_data_reg_reg[7] ,
    \tx_data_reg_reg[9] ,
    \tx_data_reg_reg[12] ,
    \tx_data_reg_reg[2] ,
    \tx_data_reg_reg[4] ,
    \tx_data_reg_reg[6] ,
    \tx_data_reg_reg[8] ,
    \tx_data_reg_reg[13] ,
    \tx_data_reg_reg[14] ,
    \tx_data_reg_reg[15] ,
    Q,
    data_word_valid,
    \block_word_cnt_reg[4] ,
    \block_word_cnt_reg[3] ,
    \block_word_cnt_reg[4]_0 ,
    \pattern_reg_reg[10] ,
    \test_init_cnt_reg_1__s_port_] ,
    \block_word_cnt_reg[2] ,
    \block_word_cnt_reg[4]_1 ,
    \block_word_cnt_reg[4]_2 ,
    \block_word_cnt_reg[4]_3 ,
    \block_word_cnt_reg[0] ,
    test_init_cnt_reg,
    \block_word_cnt_reg[0]_0 ,
    \block_word_cnt_reg[4]_4 ,
    \block_word_cnt_reg[4]_5 ,
    \block_word_cnt_reg[2]_0 ,
    \block_word_cnt_reg[0]_1 ,
    \block_word_cnt_reg[2]_1 ,
    \block_word_cnt_reg[2]_2 ,
    \pattern_reg_reg[1] ,
    \block_word_cnt_reg[4]_6 ,
    \block_word_cnt_reg[4]_7 ,
    SR,
    GT0_TXUSRCLK_OUT);
  output [4:0]D;
  output \tx_data_reg_reg[5] ;
  output \tx_data_reg_reg[7] ;
  output \tx_data_reg_reg[9] ;
  output \tx_data_reg_reg[12] ;
  output \tx_data_reg_reg[2] ;
  output \tx_data_reg_reg[4] ;
  output \tx_data_reg_reg[6] ;
  output \tx_data_reg_reg[8] ;
  output \tx_data_reg_reg[13] ;
  output \tx_data_reg_reg[14] ;
  output \tx_data_reg_reg[15] ;
  input [15:0]Q;
  input data_word_valid;
  input [3:0]\block_word_cnt_reg[4] ;
  input \block_word_cnt_reg[3] ;
  input \block_word_cnt_reg[4]_0 ;
  input [7:0]\pattern_reg_reg[10] ;
  input \test_init_cnt_reg_1__s_port_] ;
  input \block_word_cnt_reg[2] ;
  input \block_word_cnt_reg[4]_1 ;
  input \block_word_cnt_reg[4]_2 ;
  input \block_word_cnt_reg[4]_3 ;
  input \block_word_cnt_reg[0] ;
  input [3:0]test_init_cnt_reg;
  input \block_word_cnt_reg[0]_0 ;
  input \block_word_cnt_reg[4]_4 ;
  input \block_word_cnt_reg[4]_5 ;
  input \block_word_cnt_reg[2]_0 ;
  input \block_word_cnt_reg[0]_1 ;
  input \block_word_cnt_reg[2]_1 ;
  input \block_word_cnt_reg[2]_2 ;
  input \pattern_reg_reg[1] ;
  input \block_word_cnt_reg[4]_6 ;
  input \block_word_cnt_reg[4]_7 ;
  input [0:0]SR;
  input GT0_TXUSRCLK_OUT;

  wire [4:0]D;
  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire [0:0]SR;
  wire \block_word_cnt_reg[0] ;
  wire \block_word_cnt_reg[0]_0 ;
  wire \block_word_cnt_reg[0]_1 ;
  wire \block_word_cnt_reg[2] ;
  wire \block_word_cnt_reg[2]_0 ;
  wire \block_word_cnt_reg[2]_1 ;
  wire \block_word_cnt_reg[2]_2 ;
  wire \block_word_cnt_reg[3] ;
  wire [3:0]\block_word_cnt_reg[4] ;
  wire \block_word_cnt_reg[4]_0 ;
  wire \block_word_cnt_reg[4]_1 ;
  wire \block_word_cnt_reg[4]_2 ;
  wire \block_word_cnt_reg[4]_3 ;
  wire \block_word_cnt_reg[4]_4 ;
  wire \block_word_cnt_reg[4]_5 ;
  wire \block_word_cnt_reg[4]_6 ;
  wire \block_word_cnt_reg[4]_7 ;
  wire data_word_valid;
  wire [15:0]hor_parity_word;
  wire hor_parity_word_reg1;
  wire \hor_parity_word_reg[0]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[10]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[10]_i_2__0_n_0 ;
  wire \hor_parity_word_reg[11]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[12]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[12]_i_2__0_n_0 ;
  wire \hor_parity_word_reg[13]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[13]_i_2__0_n_0 ;
  wire \hor_parity_word_reg[14]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[14]_i_2__0_n_0 ;
  wire \hor_parity_word_reg[15]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[15]_i_3__0_n_0 ;
  wire \hor_parity_word_reg[15]_i_4__0_n_0 ;
  wire \hor_parity_word_reg[15]_i_5__0_n_0 ;
  wire \hor_parity_word_reg[15]_i_6__0_n_0 ;
  wire \hor_parity_word_reg[1]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[2]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[2]_i_2__0_n_0 ;
  wire \hor_parity_word_reg[3]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[4]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[5]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[6]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[6]_i_2__0_n_0 ;
  wire \hor_parity_word_reg[7]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[8]_i_1__0_n_0 ;
  wire \hor_parity_word_reg[9]_i_1__0_n_0 ;
  wire [3:1]p_0_in;
  wire \parity_word_cnt[0]_i_1__0_n_0 ;
  wire [3:0]parity_word_cnt_reg;
  wire [7:0]\pattern_reg_reg[10] ;
  wire \pattern_reg_reg[1] ;
  wire [3:0]test_init_cnt_reg;
  wire test_init_cnt_reg_1__s_net_1;
  wire \tx_data_reg[0]_i_2__0_n_0 ;
  wire \tx_data_reg[10]_i_2__0_n_0 ;
  wire \tx_data_reg[1]_i_2_n_0 ;
  wire \tx_data_reg[3]_i_2__0_n_0 ;
  wire \tx_data_reg_reg[12] ;
  wire \tx_data_reg_reg[13] ;
  wire \tx_data_reg_reg[14] ;
  wire \tx_data_reg_reg[15] ;
  wire \tx_data_reg_reg[2] ;
  wire \tx_data_reg_reg[4] ;
  wire \tx_data_reg_reg[5] ;
  wire \tx_data_reg_reg[6] ;
  wire \tx_data_reg_reg[7] ;
  wire \tx_data_reg_reg[8] ;
  wire \tx_data_reg_reg[9] ;
  wire [15:0]ver_parity_word;
  wire \ver_parity_word_reg[0]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[10]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[11]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[12]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[13]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[14]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[15]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[1]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[2]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[3]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[4]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[5]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[6]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[7]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[8]_i_1__0_n_0 ;
  wire \ver_parity_word_reg[9]_i_1__0_n_0 ;

  assign test_init_cnt_reg_1__s_net_1 = \test_init_cnt_reg_1__s_port_] ;
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \hor_parity_word_reg[0]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[1]),
        .I2(parity_word_cnt_reg[0]),
        .I3(\hor_parity_word_reg[2]_i_2__0_n_0 ),
        .I4(hor_parity_word[0]),
        .O(\hor_parity_word_reg[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[10]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[0]),
        .I2(parity_word_cnt_reg[1]),
        .I3(\hor_parity_word_reg[10]_i_2__0_n_0 ),
        .I4(hor_parity_word[10]),
        .O(\hor_parity_word_reg[10]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \hor_parity_word_reg[10]_i_2__0 
       (.I0(parity_word_cnt_reg[2]),
        .I1(data_word_valid),
        .I2(parity_word_cnt_reg[3]),
        .O(\hor_parity_word_reg[10]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \hor_parity_word_reg[11]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[15]_i_3__0_n_0 ),
        .I2(parity_word_cnt_reg[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg[2]),
        .I5(hor_parity_word[11]),
        .O(\hor_parity_word_reg[11]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[12]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[3]),
        .I2(data_word_valid),
        .I3(parity_word_cnt_reg[2]),
        .I4(\hor_parity_word_reg[12]_i_2__0_n_0 ),
        .I5(hor_parity_word[12]),
        .O(\hor_parity_word_reg[12]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \hor_parity_word_reg[12]_i_2__0 
       (.I0(parity_word_cnt_reg[0]),
        .I1(parity_word_cnt_reg[1]),
        .O(\hor_parity_word_reg[12]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[13]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[13]_i_2__0_n_0 ),
        .I2(parity_word_cnt_reg[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg[2]),
        .I5(hor_parity_word[13]),
        .O(\hor_parity_word_reg[13]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \hor_parity_word_reg[13]_i_2__0 
       (.I0(parity_word_cnt_reg[0]),
        .I1(parity_word_cnt_reg[1]),
        .O(\hor_parity_word_reg[13]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[14]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[14]_i_2__0_n_0 ),
        .I2(parity_word_cnt_reg[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg[2]),
        .I5(hor_parity_word[14]),
        .O(\hor_parity_word_reg[14]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \hor_parity_word_reg[14]_i_2__0 
       (.I0(parity_word_cnt_reg[1]),
        .I1(parity_word_cnt_reg[0]),
        .O(\hor_parity_word_reg[14]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[15]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[2]),
        .I2(\hor_parity_word_reg[15]_i_3__0_n_0 ),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg[3]),
        .I5(hor_parity_word[15]),
        .O(\hor_parity_word_reg[15]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \hor_parity_word_reg[15]_i_2__0 
       (.I0(\hor_parity_word_reg[15]_i_4__0_n_0 ),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(\hor_parity_word_reg[15]_i_5__0_n_0 ),
        .O(hor_parity_word_reg1));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \hor_parity_word_reg[15]_i_3__0 
       (.I0(parity_word_cnt_reg[0]),
        .I1(parity_word_cnt_reg[1]),
        .O(\hor_parity_word_reg[15]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \hor_parity_word_reg[15]_i_4__0 
       (.I0(Q[6]),
        .I1(Q[7]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\hor_parity_word_reg[15]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \hor_parity_word_reg[15]_i_5__0 
       (.I0(Q[11]),
        .I1(Q[10]),
        .I2(Q[13]),
        .I3(Q[12]),
        .I4(\hor_parity_word_reg[15]_i_6__0_n_0 ),
        .O(\hor_parity_word_reg[15]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \hor_parity_word_reg[15]_i_6__0 
       (.I0(Q[14]),
        .I1(Q[15]),
        .I2(Q[8]),
        .I3(Q[9]),
        .O(\hor_parity_word_reg[15]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[1]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[1]),
        .I2(parity_word_cnt_reg[0]),
        .I3(\hor_parity_word_reg[2]_i_2__0_n_0 ),
        .I4(hor_parity_word[1]),
        .O(\hor_parity_word_reg[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[2]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[0]),
        .I2(parity_word_cnt_reg[1]),
        .I3(\hor_parity_word_reg[2]_i_2__0_n_0 ),
        .I4(hor_parity_word[2]),
        .O(\hor_parity_word_reg[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \hor_parity_word_reg[2]_i_2__0 
       (.I0(parity_word_cnt_reg[2]),
        .I1(data_word_valid),
        .I2(parity_word_cnt_reg[3]),
        .O(\hor_parity_word_reg[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBFF00000800)) 
    \hor_parity_word_reg[3]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[15]_i_3__0_n_0 ),
        .I2(parity_word_cnt_reg[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg[2]),
        .I5(hor_parity_word[3]),
        .O(\hor_parity_word_reg[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \hor_parity_word_reg[4]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[1]),
        .I2(parity_word_cnt_reg[0]),
        .I3(\hor_parity_word_reg[6]_i_2__0_n_0 ),
        .I4(hor_parity_word[4]),
        .O(\hor_parity_word_reg[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[5]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[1]),
        .I2(parity_word_cnt_reg[0]),
        .I3(\hor_parity_word_reg[6]_i_2__0_n_0 ),
        .I4(hor_parity_word[5]),
        .O(\hor_parity_word_reg[5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[6]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[0]),
        .I2(parity_word_cnt_reg[1]),
        .I3(\hor_parity_word_reg[6]_i_2__0_n_0 ),
        .I4(hor_parity_word[6]),
        .O(\hor_parity_word_reg[6]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \hor_parity_word_reg[6]_i_2__0 
       (.I0(data_word_valid),
        .I1(parity_word_cnt_reg[3]),
        .I2(parity_word_cnt_reg[2]),
        .O(\hor_parity_word_reg[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFBFFFFF00800000)) 
    \hor_parity_word_reg[7]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[15]_i_3__0_n_0 ),
        .I2(parity_word_cnt_reg[2]),
        .I3(parity_word_cnt_reg[3]),
        .I4(data_word_valid),
        .I5(hor_parity_word[7]),
        .O(\hor_parity_word_reg[7]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \hor_parity_word_reg[8]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[1]),
        .I2(parity_word_cnt_reg[0]),
        .I3(\hor_parity_word_reg[10]_i_2__0_n_0 ),
        .I4(hor_parity_word[8]),
        .O(\hor_parity_word_reg[8]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[9]_i_1__0 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg[1]),
        .I2(parity_word_cnt_reg[0]),
        .I3(\hor_parity_word_reg[10]_i_2__0_n_0 ),
        .I4(hor_parity_word[9]),
        .O(\hor_parity_word_reg[9]_i_1__0_n_0 ));
  FDRE \hor_parity_word_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[0]_i_1__0_n_0 ),
        .Q(hor_parity_word[0]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[10]_i_1__0_n_0 ),
        .Q(hor_parity_word[10]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[11]_i_1__0_n_0 ),
        .Q(hor_parity_word[11]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[12]_i_1__0_n_0 ),
        .Q(hor_parity_word[12]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[13]_i_1__0_n_0 ),
        .Q(hor_parity_word[13]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[14]_i_1__0_n_0 ),
        .Q(hor_parity_word[14]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[15]_i_1__0_n_0 ),
        .Q(hor_parity_word[15]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[1]_i_1__0_n_0 ),
        .Q(hor_parity_word[1]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[2]_i_1__0_n_0 ),
        .Q(hor_parity_word[2]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[3]_i_1__0_n_0 ),
        .Q(hor_parity_word[3]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[4]_i_1__0_n_0 ),
        .Q(hor_parity_word[4]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[5]_i_1__0_n_0 ),
        .Q(hor_parity_word[5]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[6]_i_1__0_n_0 ),
        .Q(hor_parity_word[6]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[7]_i_1__0_n_0 ),
        .Q(hor_parity_word[7]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[8]_i_1__0_n_0 ),
        .Q(hor_parity_word[8]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[9]_i_1__0_n_0 ),
        .Q(hor_parity_word[9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \parity_word_cnt[0]_i_1__0 
       (.I0(parity_word_cnt_reg[0]),
        .O(\parity_word_cnt[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \parity_word_cnt[1]_i_1__0 
       (.I0(parity_word_cnt_reg[0]),
        .I1(parity_word_cnt_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \parity_word_cnt[2]_i_1__0 
       (.I0(parity_word_cnt_reg[2]),
        .I1(parity_word_cnt_reg[1]),
        .I2(parity_word_cnt_reg[0]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \parity_word_cnt[3]_i_1__0 
       (.I0(parity_word_cnt_reg[3]),
        .I1(parity_word_cnt_reg[2]),
        .I2(parity_word_cnt_reg[0]),
        .I3(parity_word_cnt_reg[1]),
        .O(p_0_in[3]));
  FDRE \parity_word_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\parity_word_cnt[0]_i_1__0_n_0 ),
        .Q(parity_word_cnt_reg[0]),
        .R(SR));
  FDRE \parity_word_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(p_0_in[1]),
        .Q(parity_word_cnt_reg[1]),
        .R(SR));
  FDRE \parity_word_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(p_0_in[2]),
        .Q(parity_word_cnt_reg[2]),
        .R(SR));
  FDRE \parity_word_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(p_0_in[3]),
        .Q(parity_word_cnt_reg[3]),
        .R(SR));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \tx_data_reg[0]_i_1__0 
       (.I0(\tx_data_reg[0]_i_2__0_n_0 ),
        .I1(\block_word_cnt_reg[3] ),
        .I2(\pattern_reg_reg[10] [0]),
        .I3(\block_word_cnt_reg[0] ),
        .I4(test_init_cnt_reg[0]),
        .I5(\block_word_cnt_reg[0]_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFF3F5FFFF0FFFF)) 
    \tx_data_reg[0]_i_2__0 
       (.I0(hor_parity_word[0]),
        .I1(ver_parity_word[0]),
        .I2(\block_word_cnt_reg[4] [2]),
        .I3(\block_word_cnt_reg[4] [0]),
        .I4(\block_word_cnt_reg[4] [1]),
        .I5(\block_word_cnt_reg[4] [3]),
        .O(\tx_data_reg[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAEAEAEAEAEFFAEAE)) 
    \tx_data_reg[10]_i_1__0 
       (.I0(\tx_data_reg[10]_i_2__0_n_0 ),
        .I1(\pattern_reg_reg[10] [7]),
        .I2(\block_word_cnt_reg[2]_0 ),
        .I3(\block_word_cnt_reg[0]_1 ),
        .I4(test_init_cnt_reg[2]),
        .I5(\block_word_cnt_reg[4]_4 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hAAAAAAAAEEFAAAAA)) 
    \tx_data_reg[10]_i_2__0 
       (.I0(\block_word_cnt_reg[2]_1 ),
        .I1(hor_parity_word[10]),
        .I2(ver_parity_word[10]),
        .I3(\block_word_cnt_reg[4]_3 ),
        .I4(\block_word_cnt_reg[3] ),
        .I5(\block_word_cnt_reg[2]_2 ),
        .O(\tx_data_reg[10]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEFEEEFFEEEEEE)) 
    \tx_data_reg[11]_i_1__0 
       (.I0(\block_word_cnt_reg[2] ),
        .I1(\block_word_cnt_reg[4]_1 ),
        .I2(hor_parity_word[11]),
        .I3(\block_word_cnt_reg[4]_2 ),
        .I4(ver_parity_word[11]),
        .I5(\block_word_cnt_reg[4]_3 ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hD0D0D0DDDDDDD0DD)) 
    \tx_data_reg[12]_i_4 
       (.I0(test_init_cnt_reg[3]),
        .I1(\block_word_cnt_reg[4]_6 ),
        .I2(\block_word_cnt_reg[2]_2 ),
        .I3(ver_parity_word[12]),
        .I4(\block_word_cnt_reg[4]_3 ),
        .I5(hor_parity_word[12]),
        .O(\tx_data_reg_reg[12] ));
  LUT6 #(
    .INIT(64'h0B00080000000000)) 
    \tx_data_reg[13]_i_2__0 
       (.I0(ver_parity_word[13]),
        .I1(\block_word_cnt_reg[4] [0]),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(\block_word_cnt_reg[4] [3]),
        .I4(hor_parity_word[13]),
        .I5(\block_word_cnt_reg[4] [2]),
        .O(\tx_data_reg_reg[13] ));
  LUT6 #(
    .INIT(64'h0B00080000000000)) 
    \tx_data_reg[14]_i_2__0 
       (.I0(ver_parity_word[14]),
        .I1(\block_word_cnt_reg[4] [0]),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(\block_word_cnt_reg[4] [3]),
        .I4(hor_parity_word[14]),
        .I5(\block_word_cnt_reg[4] [2]),
        .O(\tx_data_reg_reg[14] ));
  LUT6 #(
    .INIT(64'h08000C0008000000)) 
    \tx_data_reg[15]_i_4__0 
       (.I0(ver_parity_word[15]),
        .I1(\block_word_cnt_reg[4] [2]),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(\block_word_cnt_reg[4] [3]),
        .I4(\block_word_cnt_reg[4] [0]),
        .I5(hor_parity_word[15]),
        .O(\tx_data_reg_reg[15] ));
  LUT6 #(
    .INIT(64'h10FF10FF10FF1010)) 
    \tx_data_reg[1]_i_1__0 
       (.I0(\block_word_cnt_reg[4] [0]),
        .I1(\block_word_cnt_reg[4]_4 ),
        .I2(test_init_cnt_reg[1]),
        .I3(\tx_data_reg[1]_i_2_n_0 ),
        .I4(\pattern_reg_reg[10] [1]),
        .I5(\block_word_cnt_reg[3] ),
        .O(D[1]));
  LUT5 #(
    .INIT(32'h0000BABF)) 
    \tx_data_reg[1]_i_2 
       (.I0(\block_word_cnt_reg[2]_2 ),
        .I1(hor_parity_word[1]),
        .I2(\block_word_cnt_reg[4]_3 ),
        .I3(ver_parity_word[1]),
        .I4(\pattern_reg_reg[1] ),
        .O(\tx_data_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0C08000800000000)) 
    \tx_data_reg[2]_i_2__0 
       (.I0(hor_parity_word[2]),
        .I1(\block_word_cnt_reg[4] [3]),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(\block_word_cnt_reg[4] [0]),
        .I4(ver_parity_word[2]),
        .I5(\block_word_cnt_reg[4] [2]),
        .O(\tx_data_reg_reg[2] ));
  LUT6 #(
    .INIT(64'h8F8F8080DFDFD080)) 
    \tx_data_reg[3]_i_1__0 
       (.I0(\block_word_cnt_reg[4] [2]),
        .I1(\tx_data_reg[3]_i_2__0_n_0 ),
        .I2(\block_word_cnt_reg[3] ),
        .I3(\block_word_cnt_reg[4]_0 ),
        .I4(\pattern_reg_reg[10] [2]),
        .I5(test_init_cnt_reg_1__s_net_1),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFB8FF0000B800)) 
    \tx_data_reg[3]_i_2__0 
       (.I0(ver_parity_word[3]),
        .I1(\block_word_cnt_reg[4] [0]),
        .I2(hor_parity_word[3]),
        .I3(\block_word_cnt_reg[4] [3]),
        .I4(\block_word_cnt_reg[4] [1]),
        .I5(\pattern_reg_reg[10] [2]),
        .O(\tx_data_reg[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0B00080000000000)) 
    \tx_data_reg[4]_i_2__0 
       (.I0(ver_parity_word[4]),
        .I1(\block_word_cnt_reg[4] [0]),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(\block_word_cnt_reg[4] [3]),
        .I4(hor_parity_word[4]),
        .I5(\block_word_cnt_reg[4] [2]),
        .O(\tx_data_reg_reg[4] ));
  LUT6 #(
    .INIT(64'hFF44F4F444444444)) 
    \tx_data_reg[5]_i_3 
       (.I0(\block_word_cnt_reg[4]_5 ),
        .I1(\pattern_reg_reg[10] [3]),
        .I2(ver_parity_word[5]),
        .I3(hor_parity_word[5]),
        .I4(\block_word_cnt_reg[4]_3 ),
        .I5(\block_word_cnt_reg[4]_2 ),
        .O(\tx_data_reg_reg[5] ));
  LUT6 #(
    .INIT(64'h00A0058000000580)) 
    \tx_data_reg[6]_i_3__0 
       (.I0(\block_word_cnt_reg[4] [2]),
        .I1(hor_parity_word[6]),
        .I2(\block_word_cnt_reg[4] [3]),
        .I3(\block_word_cnt_reg[4] [1]),
        .I4(\block_word_cnt_reg[4] [0]),
        .I5(ver_parity_word[6]),
        .O(\tx_data_reg_reg[6] ));
  LUT6 #(
    .INIT(64'hFF44F4F444444444)) 
    \tx_data_reg[7]_i_3 
       (.I0(\block_word_cnt_reg[4]_5 ),
        .I1(\pattern_reg_reg[10] [4]),
        .I2(ver_parity_word[7]),
        .I3(hor_parity_word[7]),
        .I4(\block_word_cnt_reg[4]_3 ),
        .I5(\block_word_cnt_reg[4]_2 ),
        .O(\tx_data_reg_reg[7] ));
  LUT6 #(
    .INIT(64'h1F1F1FDFDFDF1FDF)) 
    \tx_data_reg[8]_i_2__0 
       (.I0(\pattern_reg_reg[10] [5]),
        .I1(\block_word_cnt_reg[4]_7 ),
        .I2(\block_word_cnt_reg[4] [2]),
        .I3(ver_parity_word[8]),
        .I4(\block_word_cnt_reg[4]_3 ),
        .I5(hor_parity_word[8]),
        .O(\tx_data_reg_reg[8] ));
  LUT6 #(
    .INIT(64'hFF44F4F444444444)) 
    \tx_data_reg[9]_i_3__0 
       (.I0(\block_word_cnt_reg[4]_5 ),
        .I1(\pattern_reg_reg[10] [6]),
        .I2(ver_parity_word[9]),
        .I3(hor_parity_word[9]),
        .I4(\block_word_cnt_reg[4]_3 ),
        .I5(\block_word_cnt_reg[4]_2 ),
        .O(\tx_data_reg_reg[9] ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[0]_i_1__0 
       (.I0(ver_parity_word[0]),
        .I1(Q[0]),
        .O(\ver_parity_word_reg[0]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[10]_i_1__0 
       (.I0(ver_parity_word[10]),
        .I1(Q[10]),
        .O(\ver_parity_word_reg[10]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[11]_i_1__0 
       (.I0(ver_parity_word[11]),
        .I1(Q[11]),
        .O(\ver_parity_word_reg[11]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[12]_i_1__0 
       (.I0(ver_parity_word[12]),
        .I1(Q[12]),
        .O(\ver_parity_word_reg[12]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[13]_i_1__0 
       (.I0(ver_parity_word[13]),
        .I1(Q[13]),
        .O(\ver_parity_word_reg[13]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[14]_i_1__0 
       (.I0(ver_parity_word[14]),
        .I1(Q[14]),
        .O(\ver_parity_word_reg[14]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[15]_i_1__0 
       (.I0(ver_parity_word[15]),
        .I1(Q[15]),
        .O(\ver_parity_word_reg[15]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[1]_i_1__0 
       (.I0(ver_parity_word[1]),
        .I1(Q[1]),
        .O(\ver_parity_word_reg[1]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[2]_i_1__0 
       (.I0(ver_parity_word[2]),
        .I1(Q[2]),
        .O(\ver_parity_word_reg[2]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[3]_i_1__0 
       (.I0(ver_parity_word[3]),
        .I1(Q[3]),
        .O(\ver_parity_word_reg[3]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[4]_i_1__0 
       (.I0(ver_parity_word[4]),
        .I1(Q[4]),
        .O(\ver_parity_word_reg[4]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[5]_i_1__0 
       (.I0(ver_parity_word[5]),
        .I1(Q[5]),
        .O(\ver_parity_word_reg[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[6]_i_1__0 
       (.I0(ver_parity_word[6]),
        .I1(Q[6]),
        .O(\ver_parity_word_reg[6]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[7]_i_1__0 
       (.I0(ver_parity_word[7]),
        .I1(Q[7]),
        .O(\ver_parity_word_reg[7]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[8]_i_1__0 
       (.I0(ver_parity_word[8]),
        .I1(Q[8]),
        .O(\ver_parity_word_reg[8]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[9]_i_1__0 
       (.I0(ver_parity_word[9]),
        .I1(Q[9]),
        .O(\ver_parity_word_reg[9]_i_1__0_n_0 ));
  FDRE \ver_parity_word_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[0]_i_1__0_n_0 ),
        .Q(ver_parity_word[0]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[10]_i_1__0_n_0 ),
        .Q(ver_parity_word[10]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[11]_i_1__0_n_0 ),
        .Q(ver_parity_word[11]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[12]_i_1__0_n_0 ),
        .Q(ver_parity_word[12]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[13]_i_1__0_n_0 ),
        .Q(ver_parity_word[13]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[14]_i_1__0_n_0 ),
        .Q(ver_parity_word[14]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[15]_i_1__0_n_0 ),
        .Q(ver_parity_word[15]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[1]_i_1__0_n_0 ),
        .Q(ver_parity_word[1]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[2]_i_1__0_n_0 ),
        .Q(ver_parity_word[2]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[3]_i_1__0_n_0 ),
        .Q(ver_parity_word[3]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[4]_i_1__0_n_0 ),
        .Q(ver_parity_word[4]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[5]_i_1__0_n_0 ),
        .Q(ver_parity_word[5]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[6]_i_1__0_n_0 ),
        .Q(ver_parity_word[6]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[7]_i_1__0_n_0 ),
        .Q(ver_parity_word[7]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[8]_i_1__0_n_0 ),
        .Q(ver_parity_word[8]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[9]_i_1__0_n_0 ),
        .Q(ver_parity_word[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "parity_encoder" *) 
module gtx3g_bert_0_parity_encoder_35
   (D,
    \tx_data_reg_reg[5] ,
    \tx_data_reg_reg[7] ,
    \tx_data_reg_reg[8] ,
    \tx_data_reg_reg[9] ,
    \tx_data_reg_reg[2] ,
    \tx_data_reg_reg[3] ,
    \tx_data_reg_reg[4] ,
    \tx_data_reg_reg[6] ,
    \tx_data_reg_reg[13] ,
    \tx_data_reg_reg[14] ,
    Q,
    data_word_valid,
    \block_word_cnt_reg[4] ,
    test_init_cnt_reg,
    \block_word_cnt_reg[2] ,
    \pattern_reg_reg[15] ,
    \block_word_cnt_reg[2]_0 ,
    \block_word_cnt_reg[4]_0 ,
    \block_word_cnt_reg[3] ,
    \pattern_reg_reg[12] ,
    \block_word_cnt_reg[4]_1 ,
    \block_word_cnt_reg[4]_2 ,
    \block_word_cnt_reg[0] ,
    \block_word_cnt_reg[4]_3 ,
    \pattern_reg_reg[0] ,
    \block_word_cnt_reg[4]_4 ,
    \block_word_cnt_reg[1] ,
    \block_word_cnt_reg[4]_5 ,
    \block_word_cnt_reg[4]_6 ,
    SR,
    GT0_TXUSRCLK_OUT);
  output [5:0]D;
  output \tx_data_reg_reg[5] ;
  output \tx_data_reg_reg[7] ;
  output \tx_data_reg_reg[8] ;
  output \tx_data_reg_reg[9] ;
  output \tx_data_reg_reg[2] ;
  output \tx_data_reg_reg[3] ;
  output \tx_data_reg_reg[4] ;
  output \tx_data_reg_reg[6] ;
  output \tx_data_reg_reg[13] ;
  output \tx_data_reg_reg[14] ;
  input [15:0]Q;
  input data_word_valid;
  input \block_word_cnt_reg[4] ;
  input [4:0]test_init_cnt_reg;
  input \block_word_cnt_reg[2] ;
  input [6:0]\pattern_reg_reg[15] ;
  input \block_word_cnt_reg[2]_0 ;
  input [3:0]\block_word_cnt_reg[4]_0 ;
  input \block_word_cnt_reg[3] ;
  input \pattern_reg_reg[12] ;
  input \block_word_cnt_reg[4]_1 ;
  input \block_word_cnt_reg[4]_2 ;
  input \block_word_cnt_reg[0] ;
  input \block_word_cnt_reg[4]_3 ;
  input \pattern_reg_reg[0] ;
  input \block_word_cnt_reg[4]_4 ;
  input \block_word_cnt_reg[1] ;
  input \block_word_cnt_reg[4]_5 ;
  input \block_word_cnt_reg[4]_6 ;
  input [0:0]SR;
  input GT0_TXUSRCLK_OUT;

  wire [5:0]D;
  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire [0:0]SR;
  wire \block_word_cnt_reg[0] ;
  wire \block_word_cnt_reg[1] ;
  wire \block_word_cnt_reg[2] ;
  wire \block_word_cnt_reg[2]_0 ;
  wire \block_word_cnt_reg[3] ;
  wire \block_word_cnt_reg[4] ;
  wire [3:0]\block_word_cnt_reg[4]_0 ;
  wire \block_word_cnt_reg[4]_1 ;
  wire \block_word_cnt_reg[4]_2 ;
  wire \block_word_cnt_reg[4]_3 ;
  wire \block_word_cnt_reg[4]_4 ;
  wire \block_word_cnt_reg[4]_5 ;
  wire \block_word_cnt_reg[4]_6 ;
  wire data_word_valid;
  wire [15:0]hor_parity_word;
  wire hor_parity_word_reg1;
  wire \hor_parity_word_reg[0]_i_1_n_0 ;
  wire \hor_parity_word_reg[10]_i_1_n_0 ;
  wire \hor_parity_word_reg[10]_i_2_n_0 ;
  wire \hor_parity_word_reg[11]_i_1_n_0 ;
  wire \hor_parity_word_reg[12]_i_1_n_0 ;
  wire \hor_parity_word_reg[12]_i_2_n_0 ;
  wire \hor_parity_word_reg[13]_i_1_n_0 ;
  wire \hor_parity_word_reg[13]_i_2_n_0 ;
  wire \hor_parity_word_reg[14]_i_1_n_0 ;
  wire \hor_parity_word_reg[14]_i_2_n_0 ;
  wire \hor_parity_word_reg[15]_i_1_n_0 ;
  wire \hor_parity_word_reg[15]_i_3_n_0 ;
  wire \hor_parity_word_reg[15]_i_4_n_0 ;
  wire \hor_parity_word_reg[15]_i_5_n_0 ;
  wire \hor_parity_word_reg[15]_i_6_n_0 ;
  wire \hor_parity_word_reg[1]_i_1_n_0 ;
  wire \hor_parity_word_reg[2]_i_1_n_0 ;
  wire \hor_parity_word_reg[2]_i_2_n_0 ;
  wire \hor_parity_word_reg[3]_i_1_n_0 ;
  wire \hor_parity_word_reg[4]_i_1_n_0 ;
  wire \hor_parity_word_reg[5]_i_1_n_0 ;
  wire \hor_parity_word_reg[6]_i_1_n_0 ;
  wire \hor_parity_word_reg[6]_i_2_n_0 ;
  wire \hor_parity_word_reg[7]_i_1_n_0 ;
  wire \hor_parity_word_reg[8]_i_1_n_0 ;
  wire \hor_parity_word_reg[9]_i_1_n_0 ;
  wire [3:1]p_0_in;
  wire \parity_word_cnt[0]_i_1_n_0 ;
  wire [3:0]parity_word_cnt_reg__0;
  wire \pattern_reg_reg[0] ;
  wire \pattern_reg_reg[12] ;
  wire [6:0]\pattern_reg_reg[15] ;
  wire [4:0]test_init_cnt_reg;
  wire \tx_data_reg[0]_i_2_n_0 ;
  wire \tx_data_reg[10]_i_2_n_0 ;
  wire \tx_data_reg[11]_i_3_n_0 ;
  wire \tx_data_reg[12]_i_2_n_0 ;
  wire \tx_data_reg[15]_i_4_n_0 ;
  wire \tx_data_reg_reg[13] ;
  wire \tx_data_reg_reg[14] ;
  wire \tx_data_reg_reg[2] ;
  wire \tx_data_reg_reg[3] ;
  wire \tx_data_reg_reg[4] ;
  wire \tx_data_reg_reg[5] ;
  wire \tx_data_reg_reg[6] ;
  wire \tx_data_reg_reg[7] ;
  wire \tx_data_reg_reg[8] ;
  wire \tx_data_reg_reg[9] ;
  wire [15:0]ver_parity_word;
  wire \ver_parity_word_reg[0]_i_1_n_0 ;
  wire \ver_parity_word_reg[10]_i_1_n_0 ;
  wire \ver_parity_word_reg[11]_i_1_n_0 ;
  wire \ver_parity_word_reg[12]_i_1_n_0 ;
  wire \ver_parity_word_reg[13]_i_1_n_0 ;
  wire \ver_parity_word_reg[14]_i_1_n_0 ;
  wire \ver_parity_word_reg[15]_i_1_n_0 ;
  wire \ver_parity_word_reg[1]_i_1_n_0 ;
  wire \ver_parity_word_reg[2]_i_1_n_0 ;
  wire \ver_parity_word_reg[3]_i_1_n_0 ;
  wire \ver_parity_word_reg[4]_i_1_n_0 ;
  wire \ver_parity_word_reg[5]_i_1_n_0 ;
  wire \ver_parity_word_reg[6]_i_1_n_0 ;
  wire \ver_parity_word_reg[7]_i_1_n_0 ;
  wire \ver_parity_word_reg[8]_i_1_n_0 ;
  wire \ver_parity_word_reg[9]_i_1_n_0 ;

  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \hor_parity_word_reg[0]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[2]_i_2_n_0 ),
        .I4(hor_parity_word[0]),
        .O(\hor_parity_word_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[10]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[0]),
        .I2(parity_word_cnt_reg__0[1]),
        .I3(\hor_parity_word_reg[10]_i_2_n_0 ),
        .I4(hor_parity_word[10]),
        .O(\hor_parity_word_reg[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \hor_parity_word_reg[10]_i_2 
       (.I0(parity_word_cnt_reg__0[2]),
        .I1(data_word_valid),
        .I2(parity_word_cnt_reg__0[3]),
        .O(\hor_parity_word_reg[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \hor_parity_word_reg[11]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[15]_i_3_n_0 ),
        .I2(parity_word_cnt_reg__0[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg__0[2]),
        .I5(hor_parity_word[11]),
        .O(\hor_parity_word_reg[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[12]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[3]),
        .I2(data_word_valid),
        .I3(parity_word_cnt_reg__0[2]),
        .I4(\hor_parity_word_reg[12]_i_2_n_0 ),
        .I5(hor_parity_word[12]),
        .O(\hor_parity_word_reg[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \hor_parity_word_reg[12]_i_2 
       (.I0(parity_word_cnt_reg__0[0]),
        .I1(parity_word_cnt_reg__0[1]),
        .O(\hor_parity_word_reg[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[13]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[13]_i_2_n_0 ),
        .I2(parity_word_cnt_reg__0[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg__0[2]),
        .I5(hor_parity_word[13]),
        .O(\hor_parity_word_reg[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \hor_parity_word_reg[13]_i_2 
       (.I0(parity_word_cnt_reg__0[0]),
        .I1(parity_word_cnt_reg__0[1]),
        .O(\hor_parity_word_reg[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[14]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[14]_i_2_n_0 ),
        .I2(parity_word_cnt_reg__0[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg__0[2]),
        .I5(hor_parity_word[14]),
        .O(\hor_parity_word_reg[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \hor_parity_word_reg[14]_i_2 
       (.I0(parity_word_cnt_reg__0[1]),
        .I1(parity_word_cnt_reg__0[0]),
        .O(\hor_parity_word_reg[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[15]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[2]),
        .I2(\hor_parity_word_reg[15]_i_3_n_0 ),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg__0[3]),
        .I5(hor_parity_word[15]),
        .O(\hor_parity_word_reg[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \hor_parity_word_reg[15]_i_2 
       (.I0(\hor_parity_word_reg[15]_i_4_n_0 ),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(\hor_parity_word_reg[15]_i_5_n_0 ),
        .O(hor_parity_word_reg1));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \hor_parity_word_reg[15]_i_3 
       (.I0(parity_word_cnt_reg__0[0]),
        .I1(parity_word_cnt_reg__0[1]),
        .O(\hor_parity_word_reg[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \hor_parity_word_reg[15]_i_4 
       (.I0(Q[6]),
        .I1(Q[7]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\hor_parity_word_reg[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \hor_parity_word_reg[15]_i_5 
       (.I0(Q[11]),
        .I1(Q[10]),
        .I2(Q[13]),
        .I3(Q[12]),
        .I4(\hor_parity_word_reg[15]_i_6_n_0 ),
        .O(\hor_parity_word_reg[15]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \hor_parity_word_reg[15]_i_6 
       (.I0(Q[14]),
        .I1(Q[15]),
        .I2(Q[8]),
        .I3(Q[9]),
        .O(\hor_parity_word_reg[15]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[1]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[2]_i_2_n_0 ),
        .I4(hor_parity_word[1]),
        .O(\hor_parity_word_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[2]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[0]),
        .I2(parity_word_cnt_reg__0[1]),
        .I3(\hor_parity_word_reg[2]_i_2_n_0 ),
        .I4(hor_parity_word[2]),
        .O(\hor_parity_word_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \hor_parity_word_reg[2]_i_2 
       (.I0(parity_word_cnt_reg__0[2]),
        .I1(data_word_valid),
        .I2(parity_word_cnt_reg__0[3]),
        .O(\hor_parity_word_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBFF00000800)) 
    \hor_parity_word_reg[3]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[15]_i_3_n_0 ),
        .I2(parity_word_cnt_reg__0[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg__0[2]),
        .I5(hor_parity_word[3]),
        .O(\hor_parity_word_reg[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \hor_parity_word_reg[4]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[6]_i_2_n_0 ),
        .I4(hor_parity_word[4]),
        .O(\hor_parity_word_reg[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[5]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[6]_i_2_n_0 ),
        .I4(hor_parity_word[5]),
        .O(\hor_parity_word_reg[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[6]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[0]),
        .I2(parity_word_cnt_reg__0[1]),
        .I3(\hor_parity_word_reg[6]_i_2_n_0 ),
        .I4(hor_parity_word[6]),
        .O(\hor_parity_word_reg[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \hor_parity_word_reg[6]_i_2 
       (.I0(data_word_valid),
        .I1(parity_word_cnt_reg__0[3]),
        .I2(parity_word_cnt_reg__0[2]),
        .O(\hor_parity_word_reg[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFBFFFFF00800000)) 
    \hor_parity_word_reg[7]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[15]_i_3_n_0 ),
        .I2(parity_word_cnt_reg__0[2]),
        .I3(parity_word_cnt_reg__0[3]),
        .I4(data_word_valid),
        .I5(hor_parity_word[7]),
        .O(\hor_parity_word_reg[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \hor_parity_word_reg[8]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[10]_i_2_n_0 ),
        .I4(hor_parity_word[8]),
        .O(\hor_parity_word_reg[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[9]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[10]_i_2_n_0 ),
        .I4(hor_parity_word[9]),
        .O(\hor_parity_word_reg[9]_i_1_n_0 ));
  FDRE \hor_parity_word_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[0]_i_1_n_0 ),
        .Q(hor_parity_word[0]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[10]_i_1_n_0 ),
        .Q(hor_parity_word[10]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[11]_i_1_n_0 ),
        .Q(hor_parity_word[11]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[12]_i_1_n_0 ),
        .Q(hor_parity_word[12]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[13]_i_1_n_0 ),
        .Q(hor_parity_word[13]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[14]_i_1_n_0 ),
        .Q(hor_parity_word[14]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[15]_i_1_n_0 ),
        .Q(hor_parity_word[15]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[1]_i_1_n_0 ),
        .Q(hor_parity_word[1]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[2]_i_1_n_0 ),
        .Q(hor_parity_word[2]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[3]_i_1_n_0 ),
        .Q(hor_parity_word[3]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[4]_i_1_n_0 ),
        .Q(hor_parity_word[4]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[5]_i_1_n_0 ),
        .Q(hor_parity_word[5]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[6]_i_1_n_0 ),
        .Q(hor_parity_word[6]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[7]_i_1_n_0 ),
        .Q(hor_parity_word[7]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[8]_i_1_n_0 ),
        .Q(hor_parity_word[8]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[9]_i_1_n_0 ),
        .Q(hor_parity_word[9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \parity_word_cnt[0]_i_1 
       (.I0(parity_word_cnt_reg__0[0]),
        .O(\parity_word_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \parity_word_cnt[1]_i_1 
       (.I0(parity_word_cnt_reg__0[0]),
        .I1(parity_word_cnt_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \parity_word_cnt[2]_i_1 
       (.I0(parity_word_cnt_reg__0[2]),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \parity_word_cnt[3]_i_1 
       (.I0(parity_word_cnt_reg__0[3]),
        .I1(parity_word_cnt_reg__0[2]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(parity_word_cnt_reg__0[1]),
        .O(p_0_in[3]));
  FDRE \parity_word_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\parity_word_cnt[0]_i_1_n_0 ),
        .Q(parity_word_cnt_reg__0[0]),
        .R(SR));
  FDRE \parity_word_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(p_0_in[1]),
        .Q(parity_word_cnt_reg__0[1]),
        .R(SR));
  FDRE \parity_word_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(p_0_in[2]),
        .Q(parity_word_cnt_reg__0[2]),
        .R(SR));
  FDRE \parity_word_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(p_0_in[3]),
        .Q(parity_word_cnt_reg__0[3]),
        .R(SR));
  LUT6 #(
    .INIT(64'hF4F4F4F4FFF4F4F4)) 
    \tx_data_reg[0]_i_1 
       (.I0(\tx_data_reg[0]_i_2_n_0 ),
        .I1(\block_word_cnt_reg[3] ),
        .I2(\pattern_reg_reg[0] ),
        .I3(\block_word_cnt_reg[4]_4 ),
        .I4(test_init_cnt_reg[0]),
        .I5(\block_word_cnt_reg[4]_0 [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFF5F3FFFF0FFFF)) 
    \tx_data_reg[0]_i_2 
       (.I0(ver_parity_word[0]),
        .I1(hor_parity_word[0]),
        .I2(\block_word_cnt_reg[4]_0 [2]),
        .I3(\block_word_cnt_reg[4]_0 [0]),
        .I4(\block_word_cnt_reg[4]_0 [1]),
        .I5(\block_word_cnt_reg[4]_0 [3]),
        .O(\tx_data_reg[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF04FF04FFFFFF04)) 
    \tx_data_reg[10]_i_1 
       (.I0(\block_word_cnt_reg[4] ),
        .I1(test_init_cnt_reg[1]),
        .I2(\block_word_cnt_reg[2] ),
        .I3(\tx_data_reg[10]_i_2_n_0 ),
        .I4(\pattern_reg_reg[15] [4]),
        .I5(\block_word_cnt_reg[2]_0 ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'hEEEAAEAA)) 
    \tx_data_reg[10]_i_2 
       (.I0(\block_word_cnt_reg[1] ),
        .I1(\block_word_cnt_reg[4]_2 ),
        .I2(\block_word_cnt_reg[4]_1 ),
        .I3(ver_parity_word[10]),
        .I4(hor_parity_word[10]),
        .O(\tx_data_reg[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF10FF10FFFFFF10)) 
    \tx_data_reg[11]_i_1 
       (.I0(\block_word_cnt_reg[2] ),
        .I1(\block_word_cnt_reg[4] ),
        .I2(test_init_cnt_reg[2]),
        .I3(\tx_data_reg[11]_i_3_n_0 ),
        .I4(\pattern_reg_reg[15] [5]),
        .I5(\block_word_cnt_reg[2]_0 ),
        .O(D[3]));
  LUT5 #(
    .INIT(32'hEFEAAAAA)) 
    \tx_data_reg[11]_i_3 
       (.I0(\block_word_cnt_reg[1] ),
        .I1(hor_parity_word[11]),
        .I2(\block_word_cnt_reg[4]_1 ),
        .I3(ver_parity_word[11]),
        .I4(\block_word_cnt_reg[4]_2 ),
        .O(\tx_data_reg[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF020000)) 
    \tx_data_reg[12]_i_1 
       (.I0(test_init_cnt_reg[3]),
        .I1(\block_word_cnt_reg[4]_0 [2]),
        .I2(\block_word_cnt_reg[4] ),
        .I3(\tx_data_reg[12]_i_2_n_0 ),
        .I4(\block_word_cnt_reg[3] ),
        .I5(\pattern_reg_reg[12] ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h00CA000000000000)) 
    \tx_data_reg[12]_i_2 
       (.I0(hor_parity_word[12]),
        .I1(ver_parity_word[12]),
        .I2(\block_word_cnt_reg[4]_0 [0]),
        .I3(\block_word_cnt_reg[4]_0 [1]),
        .I4(\block_word_cnt_reg[4]_0 [3]),
        .I5(\block_word_cnt_reg[4]_0 [2]),
        .O(\tx_data_reg[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0B00080000000000)) 
    \tx_data_reg[13]_i_2 
       (.I0(ver_parity_word[13]),
        .I1(\block_word_cnt_reg[4]_0 [0]),
        .I2(\block_word_cnt_reg[4]_0 [1]),
        .I3(\block_word_cnt_reg[4]_0 [3]),
        .I4(hor_parity_word[13]),
        .I5(\block_word_cnt_reg[4]_0 [2]),
        .O(\tx_data_reg_reg[13] ));
  LUT6 #(
    .INIT(64'h0B00080000000000)) 
    \tx_data_reg[14]_i_4 
       (.I0(ver_parity_word[14]),
        .I1(\block_word_cnt_reg[4]_0 [0]),
        .I2(\block_word_cnt_reg[4]_0 [1]),
        .I3(\block_word_cnt_reg[4]_0 [3]),
        .I4(hor_parity_word[14]),
        .I5(\block_word_cnt_reg[4]_0 [2]),
        .O(\tx_data_reg_reg[14] ));
  LUT5 #(
    .INIT(32'hFFFF0200)) 
    \tx_data_reg[15]_i_1 
       (.I0(\block_word_cnt_reg[3] ),
        .I1(\block_word_cnt_reg[4]_0 [2]),
        .I2(\block_word_cnt_reg[4] ),
        .I3(test_init_cnt_reg[4]),
        .I4(\tx_data_reg[15]_i_4_n_0 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFFF444444F444444)) 
    \tx_data_reg[15]_i_4 
       (.I0(\block_word_cnt_reg[4]_6 ),
        .I1(\pattern_reg_reg[15] [6]),
        .I2(\block_word_cnt_reg[4]_1 ),
        .I3(ver_parity_word[15]),
        .I4(\block_word_cnt_reg[4]_2 ),
        .I5(hor_parity_word[15]),
        .O(\tx_data_reg[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFB800)) 
    \tx_data_reg[1]_i_1 
       (.I0(hor_parity_word[1]),
        .I1(\block_word_cnt_reg[4]_1 ),
        .I2(ver_parity_word[1]),
        .I3(\block_word_cnt_reg[4]_2 ),
        .I4(\block_word_cnt_reg[0] ),
        .I5(\block_word_cnt_reg[4]_3 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0B00080000000000)) 
    \tx_data_reg[2]_i_2 
       (.I0(ver_parity_word[2]),
        .I1(\block_word_cnt_reg[4]_0 [0]),
        .I2(\block_word_cnt_reg[4]_0 [1]),
        .I3(\block_word_cnt_reg[4]_0 [3]),
        .I4(hor_parity_word[2]),
        .I5(\block_word_cnt_reg[4]_0 [2]),
        .O(\tx_data_reg_reg[2] ));
  LUT6 #(
    .INIT(64'hFF35FFFFFFFFFFFF)) 
    \tx_data_reg[3]_i_4 
       (.I0(hor_parity_word[3]),
        .I1(ver_parity_word[3]),
        .I2(\block_word_cnt_reg[4]_0 [0]),
        .I3(\block_word_cnt_reg[4]_0 [1]),
        .I4(\block_word_cnt_reg[4]_0 [3]),
        .I5(\block_word_cnt_reg[4]_0 [2]),
        .O(\tx_data_reg_reg[3] ));
  LUT6 #(
    .INIT(64'h0B00080000000000)) 
    \tx_data_reg[4]_i_2 
       (.I0(ver_parity_word[4]),
        .I1(\block_word_cnt_reg[4]_0 [0]),
        .I2(\block_word_cnt_reg[4]_0 [1]),
        .I3(\block_word_cnt_reg[4]_0 [3]),
        .I4(hor_parity_word[4]),
        .I5(\block_word_cnt_reg[4]_0 [2]),
        .O(\tx_data_reg_reg[4] ));
  LUT6 #(
    .INIT(64'hF4FFF44444444444)) 
    \tx_data_reg[5]_i_2 
       (.I0(\block_word_cnt_reg[4]_5 ),
        .I1(\pattern_reg_reg[15] [0]),
        .I2(hor_parity_word[5]),
        .I3(\block_word_cnt_reg[4]_1 ),
        .I4(ver_parity_word[5]),
        .I5(\block_word_cnt_reg[4]_2 ),
        .O(\tx_data_reg_reg[5] ));
  LUT6 #(
    .INIT(64'h00CA000000000000)) 
    \tx_data_reg[6]_i_2 
       (.I0(hor_parity_word[6]),
        .I1(ver_parity_word[6]),
        .I2(\block_word_cnt_reg[4]_0 [0]),
        .I3(\block_word_cnt_reg[4]_0 [1]),
        .I4(\block_word_cnt_reg[4]_0 [3]),
        .I5(\block_word_cnt_reg[4]_0 [2]),
        .O(\tx_data_reg_reg[6] ));
  LUT6 #(
    .INIT(64'hF4FFF44444444444)) 
    \tx_data_reg[7]_i_2 
       (.I0(\block_word_cnt_reg[4]_5 ),
        .I1(\pattern_reg_reg[15] [1]),
        .I2(hor_parity_word[7]),
        .I3(\block_word_cnt_reg[4]_1 ),
        .I4(ver_parity_word[7]),
        .I5(\block_word_cnt_reg[4]_2 ),
        .O(\tx_data_reg_reg[7] ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \tx_data_reg[8]_i_3 
       (.I0(hor_parity_word[8]),
        .I1(\block_word_cnt_reg[4]_1 ),
        .I2(ver_parity_word[8]),
        .I3(\block_word_cnt_reg[4]_2 ),
        .I4(\block_word_cnt_reg[4]_5 ),
        .I5(\pattern_reg_reg[15] [2]),
        .O(\tx_data_reg_reg[8] ));
  LUT6 #(
    .INIT(64'hF4FFF44444444444)) 
    \tx_data_reg[9]_i_4 
       (.I0(\block_word_cnt_reg[4]_5 ),
        .I1(\pattern_reg_reg[15] [3]),
        .I2(hor_parity_word[9]),
        .I3(\block_word_cnt_reg[4]_1 ),
        .I4(ver_parity_word[9]),
        .I5(\block_word_cnt_reg[4]_2 ),
        .O(\tx_data_reg_reg[9] ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[0]_i_1 
       (.I0(ver_parity_word[0]),
        .I1(Q[0]),
        .O(\ver_parity_word_reg[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[10]_i_1 
       (.I0(ver_parity_word[10]),
        .I1(Q[10]),
        .O(\ver_parity_word_reg[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[11]_i_1 
       (.I0(ver_parity_word[11]),
        .I1(Q[11]),
        .O(\ver_parity_word_reg[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[12]_i_1 
       (.I0(ver_parity_word[12]),
        .I1(Q[12]),
        .O(\ver_parity_word_reg[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[13]_i_1 
       (.I0(ver_parity_word[13]),
        .I1(Q[13]),
        .O(\ver_parity_word_reg[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[14]_i_1 
       (.I0(ver_parity_word[14]),
        .I1(Q[14]),
        .O(\ver_parity_word_reg[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[15]_i_1 
       (.I0(ver_parity_word[15]),
        .I1(Q[15]),
        .O(\ver_parity_word_reg[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[1]_i_1 
       (.I0(ver_parity_word[1]),
        .I1(Q[1]),
        .O(\ver_parity_word_reg[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[2]_i_1 
       (.I0(ver_parity_word[2]),
        .I1(Q[2]),
        .O(\ver_parity_word_reg[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[3]_i_1 
       (.I0(ver_parity_word[3]),
        .I1(Q[3]),
        .O(\ver_parity_word_reg[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[4]_i_1 
       (.I0(ver_parity_word[4]),
        .I1(Q[4]),
        .O(\ver_parity_word_reg[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[5]_i_1 
       (.I0(ver_parity_word[5]),
        .I1(Q[5]),
        .O(\ver_parity_word_reg[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[6]_i_1 
       (.I0(ver_parity_word[6]),
        .I1(Q[6]),
        .O(\ver_parity_word_reg[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[7]_i_1 
       (.I0(ver_parity_word[7]),
        .I1(Q[7]),
        .O(\ver_parity_word_reg[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[8]_i_1 
       (.I0(ver_parity_word[8]),
        .I1(Q[8]),
        .O(\ver_parity_word_reg[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[9]_i_1 
       (.I0(ver_parity_word[9]),
        .I1(Q[9]),
        .O(\ver_parity_word_reg[9]_i_1_n_0 ));
  FDRE \ver_parity_word_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[0]_i_1_n_0 ),
        .Q(ver_parity_word[0]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[10]_i_1_n_0 ),
        .Q(ver_parity_word[10]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[11]_i_1_n_0 ),
        .Q(ver_parity_word[11]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[12]_i_1_n_0 ),
        .Q(ver_parity_word[12]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[13]_i_1_n_0 ),
        .Q(ver_parity_word[13]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[14]_i_1_n_0 ),
        .Q(ver_parity_word[14]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[15]_i_1_n_0 ),
        .Q(ver_parity_word[15]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[1]_i_1_n_0 ),
        .Q(ver_parity_word[1]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[2]_i_1_n_0 ),
        .Q(ver_parity_word[2]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[3]_i_1_n_0 ),
        .Q(ver_parity_word[3]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[4]_i_1_n_0 ),
        .Q(ver_parity_word[4]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[5]_i_1_n_0 ),
        .Q(ver_parity_word[5]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[6]_i_1_n_0 ),
        .Q(ver_parity_word[6]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[7]_i_1_n_0 ),
        .Q(ver_parity_word[7]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[8]_i_1_n_0 ),
        .Q(ver_parity_word[8]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[9]_i_1_n_0 ),
        .Q(ver_parity_word[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "parity_encoder" *) 
module gtx3g_bert_0_parity_encoder_45
   (D,
    \ver_correct_mask_reg[15] ,
    Q,
    rx_data_r_track,
    data_word_valid,
    SR,
    GT0_TXUSRCLK_OUT);
  output [15:0]D;
  output [15:0]\ver_correct_mask_reg[15] ;
  input [15:0]Q;
  input [15:0]rx_data_r_track;
  input data_word_valid;
  input [0:0]SR;
  input GT0_TXUSRCLK_OUT;

  wire [15:0]D;
  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire [0:0]SR;
  wire data_word_valid;
  wire [15:0]hor_parity_word;
  wire hor_parity_word_reg1;
  wire \hor_parity_word_reg[0]_i_1_n_0 ;
  wire \hor_parity_word_reg[10]_i_1_n_0 ;
  wire \hor_parity_word_reg[10]_i_2__1_n_0 ;
  wire \hor_parity_word_reg[11]_i_1_n_0 ;
  wire \hor_parity_word_reg[12]_i_1_n_0 ;
  wire \hor_parity_word_reg[12]_i_2__1_n_0 ;
  wire \hor_parity_word_reg[13]_i_1_n_0 ;
  wire \hor_parity_word_reg[13]_i_2__1_n_0 ;
  wire \hor_parity_word_reg[14]_i_1_n_0 ;
  wire \hor_parity_word_reg[14]_i_2__1_n_0 ;
  wire \hor_parity_word_reg[15]_i_1_n_0 ;
  wire \hor_parity_word_reg[15]_i_3__1_n_0 ;
  wire \hor_parity_word_reg[15]_i_4__1_n_0 ;
  wire \hor_parity_word_reg[15]_i_5__1_n_0 ;
  wire \hor_parity_word_reg[15]_i_6__1_n_0 ;
  wire \hor_parity_word_reg[1]_i_1_n_0 ;
  wire \hor_parity_word_reg[2]_i_1_n_0 ;
  wire \hor_parity_word_reg[2]_i_2__1_n_0 ;
  wire \hor_parity_word_reg[3]_i_1_n_0 ;
  wire \hor_parity_word_reg[4]_i_1_n_0 ;
  wire \hor_parity_word_reg[5]_i_1_n_0 ;
  wire \hor_parity_word_reg[6]_i_1_n_0 ;
  wire \hor_parity_word_reg[6]_i_2__1_n_0 ;
  wire \hor_parity_word_reg[7]_i_1_n_0 ;
  wire \hor_parity_word_reg[8]_i_1_n_0 ;
  wire \hor_parity_word_reg[9]_i_1_n_0 ;
  wire [3:1]p_0_in__0;
  wire \parity_word_cnt[0]_i_1__1_n_0 ;
  wire [3:0]parity_word_cnt_reg__0;
  wire [15:0]rx_data_r_track;
  wire [15:0]\ver_correct_mask_reg[15] ;
  wire [15:0]ver_parity_word;
  wire \ver_parity_word_reg[0]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[10]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[11]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[12]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[13]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[14]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[15]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[1]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[2]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[3]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[4]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[5]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[6]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[7]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[8]_i_1__1_n_0 ;
  wire \ver_parity_word_reg[9]_i_1__1_n_0 ;

  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[0]_i_1 
       (.I0(rx_data_r_track[0]),
        .I1(hor_parity_word[0]),
        .O(D[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[10]_i_1 
       (.I0(rx_data_r_track[10]),
        .I1(hor_parity_word[10]),
        .O(D[10]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[11]_i_1 
       (.I0(rx_data_r_track[11]),
        .I1(hor_parity_word[11]),
        .O(D[11]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[12]_i_1 
       (.I0(rx_data_r_track[12]),
        .I1(hor_parity_word[12]),
        .O(D[12]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[13]_i_1 
       (.I0(rx_data_r_track[13]),
        .I1(hor_parity_word[13]),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[14]_i_1 
       (.I0(rx_data_r_track[14]),
        .I1(hor_parity_word[14]),
        .O(D[14]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[15]_i_2 
       (.I0(rx_data_r_track[15]),
        .I1(hor_parity_word[15]),
        .O(D[15]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[1]_i_1 
       (.I0(rx_data_r_track[1]),
        .I1(hor_parity_word[1]),
        .O(D[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[2]_i_1 
       (.I0(rx_data_r_track[2]),
        .I1(hor_parity_word[2]),
        .O(D[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[3]_i_1 
       (.I0(rx_data_r_track[3]),
        .I1(hor_parity_word[3]),
        .O(D[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[4]_i_1 
       (.I0(rx_data_r_track[4]),
        .I1(hor_parity_word[4]),
        .O(D[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[5]_i_1 
       (.I0(rx_data_r_track[5]),
        .I1(hor_parity_word[5]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[6]_i_1 
       (.I0(rx_data_r_track[6]),
        .I1(hor_parity_word[6]),
        .O(D[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[7]_i_1 
       (.I0(rx_data_r_track[7]),
        .I1(hor_parity_word[7]),
        .O(D[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[8]_i_1 
       (.I0(rx_data_r_track[8]),
        .I1(hor_parity_word[8]),
        .O(D[8]));
  LUT2 #(
    .INIT(4'h6)) 
    \hor_correct_mask[9]_i_1 
       (.I0(rx_data_r_track[9]),
        .I1(hor_parity_word[9]),
        .O(D[9]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \hor_parity_word_reg[0]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[2]_i_2__1_n_0 ),
        .I4(hor_parity_word[0]),
        .O(\hor_parity_word_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[10]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[0]),
        .I2(parity_word_cnt_reg__0[1]),
        .I3(\hor_parity_word_reg[10]_i_2__1_n_0 ),
        .I4(hor_parity_word[10]),
        .O(\hor_parity_word_reg[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \hor_parity_word_reg[10]_i_2__1 
       (.I0(parity_word_cnt_reg__0[2]),
        .I1(data_word_valid),
        .I2(parity_word_cnt_reg__0[3]),
        .O(\hor_parity_word_reg[10]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \hor_parity_word_reg[11]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[15]_i_3__1_n_0 ),
        .I2(parity_word_cnt_reg__0[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg__0[2]),
        .I5(hor_parity_word[11]),
        .O(\hor_parity_word_reg[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[12]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[3]),
        .I2(data_word_valid),
        .I3(parity_word_cnt_reg__0[2]),
        .I4(\hor_parity_word_reg[12]_i_2__1_n_0 ),
        .I5(hor_parity_word[12]),
        .O(\hor_parity_word_reg[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \hor_parity_word_reg[12]_i_2__1 
       (.I0(parity_word_cnt_reg__0[0]),
        .I1(parity_word_cnt_reg__0[1]),
        .O(\hor_parity_word_reg[12]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[13]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[13]_i_2__1_n_0 ),
        .I2(parity_word_cnt_reg__0[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg__0[2]),
        .I5(hor_parity_word[13]),
        .O(\hor_parity_word_reg[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \hor_parity_word_reg[13]_i_2__1 
       (.I0(parity_word_cnt_reg__0[0]),
        .I1(parity_word_cnt_reg__0[1]),
        .O(\hor_parity_word_reg[13]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[14]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[14]_i_2__1_n_0 ),
        .I2(parity_word_cnt_reg__0[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg__0[2]),
        .I5(hor_parity_word[14]),
        .O(\hor_parity_word_reg[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \hor_parity_word_reg[14]_i_2__1 
       (.I0(parity_word_cnt_reg__0[1]),
        .I1(parity_word_cnt_reg__0[0]),
        .O(\hor_parity_word_reg[14]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \hor_parity_word_reg[15]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[2]),
        .I2(\hor_parity_word_reg[15]_i_3__1_n_0 ),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg__0[3]),
        .I5(hor_parity_word[15]),
        .O(\hor_parity_word_reg[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \hor_parity_word_reg[15]_i_2__1 
       (.I0(\hor_parity_word_reg[15]_i_4__1_n_0 ),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(\hor_parity_word_reg[15]_i_5__1_n_0 ),
        .O(hor_parity_word_reg1));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \hor_parity_word_reg[15]_i_3__1 
       (.I0(parity_word_cnt_reg__0[0]),
        .I1(parity_word_cnt_reg__0[1]),
        .O(\hor_parity_word_reg[15]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \hor_parity_word_reg[15]_i_4__1 
       (.I0(Q[6]),
        .I1(Q[7]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\hor_parity_word_reg[15]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \hor_parity_word_reg[15]_i_5__1 
       (.I0(Q[11]),
        .I1(Q[10]),
        .I2(Q[13]),
        .I3(Q[12]),
        .I4(\hor_parity_word_reg[15]_i_6__1_n_0 ),
        .O(\hor_parity_word_reg[15]_i_5__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \hor_parity_word_reg[15]_i_6__1 
       (.I0(Q[14]),
        .I1(Q[15]),
        .I2(Q[8]),
        .I3(Q[9]),
        .O(\hor_parity_word_reg[15]_i_6__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[1]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[2]_i_2__1_n_0 ),
        .I4(hor_parity_word[1]),
        .O(\hor_parity_word_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[2]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[0]),
        .I2(parity_word_cnt_reg__0[1]),
        .I3(\hor_parity_word_reg[2]_i_2__1_n_0 ),
        .I4(hor_parity_word[2]),
        .O(\hor_parity_word_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \hor_parity_word_reg[2]_i_2__1 
       (.I0(parity_word_cnt_reg__0[2]),
        .I1(data_word_valid),
        .I2(parity_word_cnt_reg__0[3]),
        .O(\hor_parity_word_reg[2]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBFF00000800)) 
    \hor_parity_word_reg[3]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[15]_i_3__1_n_0 ),
        .I2(parity_word_cnt_reg__0[3]),
        .I3(data_word_valid),
        .I4(parity_word_cnt_reg__0[2]),
        .I5(hor_parity_word[3]),
        .O(\hor_parity_word_reg[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \hor_parity_word_reg[4]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[6]_i_2__1_n_0 ),
        .I4(hor_parity_word[4]),
        .O(\hor_parity_word_reg[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[5]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[6]_i_2__1_n_0 ),
        .I4(hor_parity_word[5]),
        .O(\hor_parity_word_reg[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[6]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[0]),
        .I2(parity_word_cnt_reg__0[1]),
        .I3(\hor_parity_word_reg[6]_i_2__1_n_0 ),
        .I4(hor_parity_word[6]),
        .O(\hor_parity_word_reg[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \hor_parity_word_reg[6]_i_2__1 
       (.I0(data_word_valid),
        .I1(parity_word_cnt_reg__0[3]),
        .I2(parity_word_cnt_reg__0[2]),
        .O(\hor_parity_word_reg[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFBFFFFF00800000)) 
    \hor_parity_word_reg[7]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(\hor_parity_word_reg[15]_i_3__1_n_0 ),
        .I2(parity_word_cnt_reg__0[2]),
        .I3(parity_word_cnt_reg__0[3]),
        .I4(data_word_valid),
        .I5(hor_parity_word[7]),
        .O(\hor_parity_word_reg[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \hor_parity_word_reg[8]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[10]_i_2__1_n_0 ),
        .I4(hor_parity_word[8]),
        .O(\hor_parity_word_reg[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \hor_parity_word_reg[9]_i_1 
       (.I0(hor_parity_word_reg1),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(\hor_parity_word_reg[10]_i_2__1_n_0 ),
        .I4(hor_parity_word[9]),
        .O(\hor_parity_word_reg[9]_i_1_n_0 ));
  FDRE \hor_parity_word_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[0]_i_1_n_0 ),
        .Q(hor_parity_word[0]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[10]_i_1_n_0 ),
        .Q(hor_parity_word[10]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[11]_i_1_n_0 ),
        .Q(hor_parity_word[11]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[12]_i_1_n_0 ),
        .Q(hor_parity_word[12]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[13]_i_1_n_0 ),
        .Q(hor_parity_word[13]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[14]_i_1_n_0 ),
        .Q(hor_parity_word[14]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[15]_i_1_n_0 ),
        .Q(hor_parity_word[15]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[1]_i_1_n_0 ),
        .Q(hor_parity_word[1]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[2]_i_1_n_0 ),
        .Q(hor_parity_word[2]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[3]_i_1_n_0 ),
        .Q(hor_parity_word[3]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[4]_i_1_n_0 ),
        .Q(hor_parity_word[4]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[5]_i_1_n_0 ),
        .Q(hor_parity_word[5]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[6]_i_1_n_0 ),
        .Q(hor_parity_word[6]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[7]_i_1_n_0 ),
        .Q(hor_parity_word[7]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[8]_i_1_n_0 ),
        .Q(hor_parity_word[8]),
        .R(SR));
  FDRE \hor_parity_word_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(\hor_parity_word_reg[9]_i_1_n_0 ),
        .Q(hor_parity_word[9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \parity_word_cnt[0]_i_1__1 
       (.I0(parity_word_cnt_reg__0[0]),
        .O(\parity_word_cnt[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \parity_word_cnt[1]_i_1__1 
       (.I0(parity_word_cnt_reg__0[0]),
        .I1(parity_word_cnt_reg__0[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \parity_word_cnt[2]_i_1__1 
       (.I0(parity_word_cnt_reg__0[2]),
        .I1(parity_word_cnt_reg__0[1]),
        .I2(parity_word_cnt_reg__0[0]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \parity_word_cnt[3]_i_1__1 
       (.I0(parity_word_cnt_reg__0[3]),
        .I1(parity_word_cnt_reg__0[2]),
        .I2(parity_word_cnt_reg__0[0]),
        .I3(parity_word_cnt_reg__0[1]),
        .O(p_0_in__0[3]));
  FDRE \parity_word_cnt_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\parity_word_cnt[0]_i_1__1_n_0 ),
        .Q(parity_word_cnt_reg__0[0]),
        .R(SR));
  FDRE \parity_word_cnt_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(p_0_in__0[1]),
        .Q(parity_word_cnt_reg__0[1]),
        .R(SR));
  FDRE \parity_word_cnt_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(p_0_in__0[2]),
        .Q(parity_word_cnt_reg__0[2]),
        .R(SR));
  FDRE \parity_word_cnt_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(p_0_in__0[3]),
        .Q(parity_word_cnt_reg__0[3]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[0]_i_1 
       (.I0(rx_data_r_track[0]),
        .I1(ver_parity_word[0]),
        .O(\ver_correct_mask_reg[15] [0]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[10]_i_1 
       (.I0(rx_data_r_track[10]),
        .I1(ver_parity_word[10]),
        .O(\ver_correct_mask_reg[15] [10]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[11]_i_1 
       (.I0(rx_data_r_track[11]),
        .I1(ver_parity_word[11]),
        .O(\ver_correct_mask_reg[15] [11]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[12]_i_1 
       (.I0(rx_data_r_track[12]),
        .I1(ver_parity_word[12]),
        .O(\ver_correct_mask_reg[15] [12]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[13]_i_1 
       (.I0(rx_data_r_track[13]),
        .I1(ver_parity_word[13]),
        .O(\ver_correct_mask_reg[15] [13]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[14]_i_1 
       (.I0(rx_data_r_track[14]),
        .I1(ver_parity_word[14]),
        .O(\ver_correct_mask_reg[15] [14]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[15]_i_2 
       (.I0(rx_data_r_track[15]),
        .I1(ver_parity_word[15]),
        .O(\ver_correct_mask_reg[15] [15]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[1]_i_1 
       (.I0(rx_data_r_track[1]),
        .I1(ver_parity_word[1]),
        .O(\ver_correct_mask_reg[15] [1]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[2]_i_1 
       (.I0(rx_data_r_track[2]),
        .I1(ver_parity_word[2]),
        .O(\ver_correct_mask_reg[15] [2]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[3]_i_1 
       (.I0(rx_data_r_track[3]),
        .I1(ver_parity_word[3]),
        .O(\ver_correct_mask_reg[15] [3]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[4]_i_1 
       (.I0(rx_data_r_track[4]),
        .I1(ver_parity_word[4]),
        .O(\ver_correct_mask_reg[15] [4]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[5]_i_1 
       (.I0(rx_data_r_track[5]),
        .I1(ver_parity_word[5]),
        .O(\ver_correct_mask_reg[15] [5]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[6]_i_1 
       (.I0(rx_data_r_track[6]),
        .I1(ver_parity_word[6]),
        .O(\ver_correct_mask_reg[15] [6]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[7]_i_1 
       (.I0(rx_data_r_track[7]),
        .I1(ver_parity_word[7]),
        .O(\ver_correct_mask_reg[15] [7]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[8]_i_1 
       (.I0(rx_data_r_track[8]),
        .I1(ver_parity_word[8]),
        .O(\ver_correct_mask_reg[15] [8]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_correct_mask[9]_i_1 
       (.I0(rx_data_r_track[9]),
        .I1(ver_parity_word[9]),
        .O(\ver_correct_mask_reg[15] [9]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[0]_i_1__1 
       (.I0(ver_parity_word[0]),
        .I1(Q[0]),
        .O(\ver_parity_word_reg[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[10]_i_1__1 
       (.I0(ver_parity_word[10]),
        .I1(Q[10]),
        .O(\ver_parity_word_reg[10]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[11]_i_1__1 
       (.I0(ver_parity_word[11]),
        .I1(Q[11]),
        .O(\ver_parity_word_reg[11]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[12]_i_1__1 
       (.I0(ver_parity_word[12]),
        .I1(Q[12]),
        .O(\ver_parity_word_reg[12]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[13]_i_1__1 
       (.I0(ver_parity_word[13]),
        .I1(Q[13]),
        .O(\ver_parity_word_reg[13]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[14]_i_1__1 
       (.I0(ver_parity_word[14]),
        .I1(Q[14]),
        .O(\ver_parity_word_reg[14]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[15]_i_1__1 
       (.I0(ver_parity_word[15]),
        .I1(Q[15]),
        .O(\ver_parity_word_reg[15]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[1]_i_1__1 
       (.I0(ver_parity_word[1]),
        .I1(Q[1]),
        .O(\ver_parity_word_reg[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[2]_i_1__1 
       (.I0(ver_parity_word[2]),
        .I1(Q[2]),
        .O(\ver_parity_word_reg[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[3]_i_1__1 
       (.I0(ver_parity_word[3]),
        .I1(Q[3]),
        .O(\ver_parity_word_reg[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[4]_i_1__1 
       (.I0(ver_parity_word[4]),
        .I1(Q[4]),
        .O(\ver_parity_word_reg[4]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[5]_i_1__1 
       (.I0(ver_parity_word[5]),
        .I1(Q[5]),
        .O(\ver_parity_word_reg[5]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[6]_i_1__1 
       (.I0(ver_parity_word[6]),
        .I1(Q[6]),
        .O(\ver_parity_word_reg[6]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[7]_i_1__1 
       (.I0(ver_parity_word[7]),
        .I1(Q[7]),
        .O(\ver_parity_word_reg[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[8]_i_1__1 
       (.I0(ver_parity_word[8]),
        .I1(Q[8]),
        .O(\ver_parity_word_reg[8]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ver_parity_word_reg[9]_i_1__1 
       (.I0(ver_parity_word[9]),
        .I1(Q[9]),
        .O(\ver_parity_word_reg[9]_i_1__1_n_0 ));
  FDRE \ver_parity_word_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[0]_i_1__1_n_0 ),
        .Q(ver_parity_word[0]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[10]_i_1__1_n_0 ),
        .Q(ver_parity_word[10]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[11]_i_1__1_n_0 ),
        .Q(ver_parity_word[11]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[12]_i_1__1_n_0 ),
        .Q(ver_parity_word[12]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[13]_i_1__1_n_0 ),
        .Q(ver_parity_word[13]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[14]_i_1__1_n_0 ),
        .Q(ver_parity_word[14]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[15]_i_1__1_n_0 ),
        .Q(ver_parity_word[15]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[1]_i_1__1_n_0 ),
        .Q(ver_parity_word[1]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[2]_i_1__1_n_0 ),
        .Q(ver_parity_word[2]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[3]_i_1__1_n_0 ),
        .Q(ver_parity_word[3]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[4]_i_1__1_n_0 ),
        .Q(ver_parity_word[4]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[5]_i_1__1_n_0 ),
        .Q(ver_parity_word[5]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[6]_i_1__1_n_0 ),
        .Q(ver_parity_word[6]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[7]_i_1__1_n_0 ),
        .Q(ver_parity_word[7]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[8]_i_1__1_n_0 ),
        .Q(ver_parity_word[8]),
        .R(SR));
  FDRE \ver_parity_word_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(data_word_valid),
        .D(\ver_parity_word_reg[9]_i_1__1_n_0 ),
        .Q(ver_parity_word[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pattern_gen" *) 
module gtx3g_bert_0_pattern_gen
   (D,
    Q,
    \tx_data_reg_reg[1] ,
    \tx_data_reg_reg[11] ,
    pattern_rst_reg,
    GT0_TXUSRCLK_OUT,
    pattern_pause_reg,
    \hor_parity_word_reg_reg[2] ,
    \block_word_cnt_reg[3] ,
    \block_word_cnt_reg[2] ,
    \pattern_reg_reg[8]_0 ,
    \block_word_cnt_reg[4] ,
    \block_word_cnt_reg[0] ,
    \ver_parity_word_reg_reg[4] ,
    \block_word_cnt_reg[4]_0 ,
    \block_word_cnt_reg[0]_0 ,
    test_init_cnt_reg,
    \block_word_cnt_reg[4]_1 ,
    \block_word_cnt_reg[2]_0 ,
    \block_word_cnt_reg[0]_1 ,
    \pattern_reg_reg[5]_0 ,
    \pattern_reg_reg[7]_0 ,
    \pattern_reg_reg[9]_0 ,
    \block_word_cnt_reg[2]_1 ,
    \block_word_cnt_reg[2]_2 ,
    \test_init_cnt_reg[12] ,
    \block_word_cnt_reg[0]_2 ,
    \ver_parity_word_reg_reg[13] ,
    \ver_parity_word_reg_reg[14] ,
    \ver_parity_word_reg_reg[15] ,
    \block_word_cnt_reg[1] ,
    \block_word_cnt_reg[1]_0 ,
    test_init_cnt_reg_3__s_port_,
    PATTERN_MODE);
  output [10:0]D;
  output [7:0]Q;
  output \tx_data_reg_reg[1] ;
  output \tx_data_reg_reg[11] ;
  input pattern_rst_reg;
  input GT0_TXUSRCLK_OUT;
  input pattern_pause_reg;
  input \hor_parity_word_reg_reg[2] ;
  input \block_word_cnt_reg[3] ;
  input \block_word_cnt_reg[2] ;
  input \pattern_reg_reg[8]_0 ;
  input [3:0]\block_word_cnt_reg[4] ;
  input \block_word_cnt_reg[0] ;
  input \ver_parity_word_reg_reg[4] ;
  input \block_word_cnt_reg[4]_0 ;
  input \block_word_cnt_reg[0]_0 ;
  input [8:0]test_init_cnt_reg;
  input \block_word_cnt_reg[4]_1 ;
  input \block_word_cnt_reg[2]_0 ;
  input \block_word_cnt_reg[0]_1 ;
  input \pattern_reg_reg[5]_0 ;
  input \pattern_reg_reg[7]_0 ;
  input \pattern_reg_reg[9]_0 ;
  input \block_word_cnt_reg[2]_1 ;
  input \block_word_cnt_reg[2]_2 ;
  input \test_init_cnt_reg[12] ;
  input \block_word_cnt_reg[0]_2 ;
  input \ver_parity_word_reg_reg[13] ;
  input \ver_parity_word_reg_reg[14] ;
  input \ver_parity_word_reg_reg[15] ;
  input \block_word_cnt_reg[1] ;
  input \block_word_cnt_reg[1]_0 ;
  input test_init_cnt_reg_3__s_port_;
  input [2:0]PATTERN_MODE;

  wire [10:0]D;
  wire GT0_TXUSRCLK_OUT;
  wire [2:0]PATTERN_MODE;
  wire [7:0]Q;
  wire \block_word_cnt_reg[0] ;
  wire \block_word_cnt_reg[0]_0 ;
  wire \block_word_cnt_reg[0]_1 ;
  wire \block_word_cnt_reg[0]_2 ;
  wire \block_word_cnt_reg[1] ;
  wire \block_word_cnt_reg[1]_0 ;
  wire \block_word_cnt_reg[2] ;
  wire \block_word_cnt_reg[2]_0 ;
  wire \block_word_cnt_reg[2]_1 ;
  wire \block_word_cnt_reg[2]_2 ;
  wire \block_word_cnt_reg[3] ;
  wire [3:0]\block_word_cnt_reg[4] ;
  wire \block_word_cnt_reg[4]_0 ;
  wire \block_word_cnt_reg[4]_1 ;
  wire bram_gen_inst1_n_10;
  wire bram_gen_inst1_n_11;
  wire bram_gen_inst1_n_12;
  wire bram_gen_inst1_n_13;
  wire bram_gen_inst1_n_14;
  wire bram_gen_inst1_n_15;
  wire bram_gen_inst1_n_16;
  wire bram_gen_inst1_n_17;
  wire bram_gen_inst1_n_7;
  wire bram_gen_inst1_n_8;
  wire bram_gen_inst1_n_9;
  wire \hor_parity_word_reg_reg[2] ;
  wire [8:0]p_0_in;
  wire [0:0]p_1_in;
  wire pattern_pause_reg;
  wire [15:0]pattern_reg;
  wire \pattern_reg_reg[5]_0 ;
  wire \pattern_reg_reg[7]_0 ;
  wire \pattern_reg_reg[8]_0 ;
  wire \pattern_reg_reg[9]_0 ;
  wire pattern_rst_reg;
  wire [15:2]pattern_word;
  wire [15:0]prbs15_reg;
  wire [15:0]prbs20_reg;
  wire [15:0]prbs23_reg;
  wire prbs31_gen_inst1_n_0;
  wire prbs31_gen_inst1_n_1;
  wire prbs31_gen_inst1_n_10;
  wire prbs31_gen_inst1_n_11;
  wire prbs31_gen_inst1_n_12;
  wire prbs31_gen_inst1_n_13;
  wire prbs31_gen_inst1_n_14;
  wire prbs31_gen_inst1_n_15;
  wire prbs31_gen_inst1_n_16;
  wire prbs31_gen_inst1_n_17;
  wire prbs31_gen_inst1_n_18;
  wire prbs31_gen_inst1_n_2;
  wire prbs31_gen_inst1_n_3;
  wire prbs31_gen_inst1_n_4;
  wire prbs31_gen_inst1_n_5;
  wire prbs31_gen_inst1_n_6;
  wire prbs31_gen_inst1_n_7;
  wire prbs31_gen_inst1_n_8;
  wire prbs31_gen_inst1_n_9;
  wire [15:0]prbs7_reg;
  wire [15:0]prbs9_reg;
  wire [3:0]read_counter_i;
  wire [3:1]read_counter_i_d1;
  wire [8:0]test_init_cnt_reg;
  wire \test_init_cnt_reg[12] ;
  wire test_init_cnt_reg_3__s_net_1;
  wire \tx_data_reg[2]_i_4__0_n_0 ;
  wire \tx_data_reg[4]_i_4__0_n_0 ;
  wire \tx_data_reg[5]_i_2__0_n_0 ;
  wire \tx_data_reg[7]_i_2__0_n_0 ;
  wire \tx_data_reg[8]_i_3__0_n_0 ;
  wire \tx_data_reg[9]_i_2__0_n_0 ;
  wire \tx_data_reg_reg[11] ;
  wire \tx_data_reg_reg[1] ;
  wire \ver_parity_word_reg_reg[13] ;
  wire \ver_parity_word_reg_reg[14] ;
  wire \ver_parity_word_reg_reg[15] ;
  wire \ver_parity_word_reg_reg[4] ;

  assign test_init_cnt_reg_3__s_net_1 = test_init_cnt_reg_3__s_port_;
  gtx3g_bert_0_bram_gen bram_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(read_counter_i_d1),
        .\bram_reg_reg[12]_0 (read_counter_i),
        .p_0_in({p_0_in[8:7],p_0_in[4:2],p_0_in[0]}),
        .p_1_in(p_1_in),
        .pattern_pause_reg(pattern_pause_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .\pattern_reg_reg[12] ({bram_gen_inst1_n_7,bram_gen_inst1_n_8,bram_gen_inst1_n_9,bram_gen_inst1_n_10,bram_gen_inst1_n_11,bram_gen_inst1_n_12,bram_gen_inst1_n_13,bram_gen_inst1_n_14,bram_gen_inst1_n_15,bram_gen_inst1_n_16,bram_gen_inst1_n_17}),
        .pattern_rst_reg(pattern_rst_reg));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \bram_reg[1]_i_2 
       (.I0(read_counter_i[2]),
        .I1(read_counter_i[3]),
        .I2(read_counter_i[1]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT4 #(
    .INIT(16'h999A)) 
    \bram_reg[2]_i_2 
       (.I0(read_counter_i[0]),
        .I1(read_counter_i[1]),
        .I2(read_counter_i[3]),
        .I3(read_counter_i[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT4 #(
    .INIT(16'hCC9A)) 
    \bram_reg[3]_i_2 
       (.I0(read_counter_i[0]),
        .I1(read_counter_i[2]),
        .I2(read_counter_i[3]),
        .I3(read_counter_i[1]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \bram_reg[4]_i_2 
       (.I0(read_counter_i[3]),
        .I1(read_counter_i[2]),
        .I2(read_counter_i[1]),
        .I3(read_counter_i[0]),
        .O(p_0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \bram_reg[7]_i_2 
       (.I0(read_counter_i[3]),
        .I1(read_counter_i[0]),
        .I2(read_counter_i[1]),
        .I3(read_counter_i[2]),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \bram_reg[8]_i_2 
       (.I0(read_counter_i[3]),
        .I1(read_counter_i[0]),
        .I2(read_counter_i[1]),
        .I3(read_counter_i[2]),
        .O(p_0_in[8]));
  LUT3 #(
    .INIT(8'hFE)) 
    \i___0/i_ 
       (.I0(read_counter_i_d1[2]),
        .I1(read_counter_i_d1[3]),
        .I2(read_counter_i_d1[1]),
        .O(p_1_in));
  FDRE \pattern_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[0]),
        .Q(Q[0]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[10]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[11]),
        .Q(pattern_word[11]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[12]),
        .Q(pattern_word[12]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[13]),
        .Q(pattern_word[13]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[14]),
        .Q(pattern_word[14]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[15]),
        .Q(pattern_word[15]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[1]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[2]),
        .Q(pattern_word[2]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[3]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[4]),
        .Q(pattern_word[4]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[5]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[6]),
        .Q(pattern_word[6]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[7]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[8]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[9]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  gtx3g_bert_0_prbs11_gen prbs11_gen_inst1
       (.D(pattern_reg),
        .GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .PATTERN_MODE(PATTERN_MODE),
        .Q(prbs9_reg),
        .\bram_reg_reg[12] ({bram_gen_inst1_n_7,bram_gen_inst1_n_8,bram_gen_inst1_n_9,bram_gen_inst1_n_10,bram_gen_inst1_n_11,bram_gen_inst1_n_12,bram_gen_inst1_n_13,bram_gen_inst1_n_14,bram_gen_inst1_n_15,bram_gen_inst1_n_16,bram_gen_inst1_n_17}),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg),
        .\prbs31_reg_reg[0] (prbs31_gen_inst1_n_3),
        .\prbs31_reg_reg[10] (prbs31_gen_inst1_n_13),
        .\prbs31_reg_reg[11] (prbs31_gen_inst1_n_14),
        .\prbs31_reg_reg[12] (prbs31_gen_inst1_n_15),
        .\prbs31_reg_reg[13] (prbs31_gen_inst1_n_16),
        .\prbs31_reg_reg[14] (prbs31_gen_inst1_n_17),
        .\prbs31_reg_reg[15] (prbs31_gen_inst1_n_18),
        .\prbs31_reg_reg[1] (prbs31_gen_inst1_n_4),
        .\prbs31_reg_reg[2] (prbs31_gen_inst1_n_5),
        .\prbs31_reg_reg[3] (prbs31_gen_inst1_n_6),
        .\prbs31_reg_reg[4] (prbs31_gen_inst1_n_7),
        .\prbs31_reg_reg[5] (prbs31_gen_inst1_n_8),
        .\prbs31_reg_reg[6] (prbs31_gen_inst1_n_9),
        .\prbs31_reg_reg[7] (prbs31_gen_inst1_n_10),
        .\prbs31_reg_reg[8] (prbs31_gen_inst1_n_11),
        .\prbs31_reg_reg[9] (prbs31_gen_inst1_n_12),
        .\prbs7_reg_reg[15] (prbs7_reg));
  gtx3g_bert_0_prbs15_gen prbs15_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs15_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg));
  gtx3g_bert_0_prbs20_gen prbs20_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs20_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg),
        .prbs31_reg_reg_r_11(prbs31_gen_inst1_n_1));
  gtx3g_bert_0_prbs23_gen prbs23_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs23_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg),
        .prbs31_reg_reg_r_12(prbs31_gen_inst1_n_2));
  gtx3g_bert_0_prbs31_gen prbs31_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .PATTERN_MODE(PATTERN_MODE[1:0]),
        .Q(prbs23_reg),
        .pattern_pause_reg(pattern_pause_reg),
        .\pattern_reg_reg[0] (prbs31_gen_inst1_n_3),
        .\pattern_reg_reg[10] (prbs31_gen_inst1_n_13),
        .\pattern_reg_reg[11] (prbs31_gen_inst1_n_14),
        .\pattern_reg_reg[12] (prbs31_gen_inst1_n_15),
        .\pattern_reg_reg[13] (prbs31_gen_inst1_n_16),
        .\pattern_reg_reg[14] (prbs31_gen_inst1_n_17),
        .\pattern_reg_reg[15] (prbs31_gen_inst1_n_18),
        .\pattern_reg_reg[1] (prbs31_gen_inst1_n_4),
        .\pattern_reg_reg[2] (prbs31_gen_inst1_n_5),
        .\pattern_reg_reg[3] (prbs31_gen_inst1_n_6),
        .\pattern_reg_reg[4] (prbs31_gen_inst1_n_7),
        .\pattern_reg_reg[5] (prbs31_gen_inst1_n_8),
        .\pattern_reg_reg[6] (prbs31_gen_inst1_n_9),
        .\pattern_reg_reg[7] (prbs31_gen_inst1_n_10),
        .\pattern_reg_reg[8] (prbs31_gen_inst1_n_11),
        .\pattern_reg_reg[9] (prbs31_gen_inst1_n_12),
        .pattern_rst_reg(pattern_rst_reg),
        .\prbs15_reg_reg[15] (prbs15_reg),
        .\prbs20_reg_reg[15] (prbs20_reg),
        .\prbs31_reg_reg[30]_0 (prbs31_gen_inst1_n_0),
        .prbs31_reg_reg_r_12_0(prbs31_gen_inst1_n_1),
        .prbs31_reg_reg_r_13_0(prbs31_gen_inst1_n_2));
  gtx3g_bert_0_prbs7_gen prbs7_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs7_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg));
  gtx3g_bert_0_prbs9_gen prbs9_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs9_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg));
  LUT6 #(
    .INIT(64'hFFFD7D7D20000000)) 
    \tx_data_reg[11]_i_2 
       (.I0(\block_word_cnt_reg[3] ),
        .I1(\block_word_cnt_reg[4] [2]),
        .I2(\block_word_cnt_reg[4] [3]),
        .I3(\block_word_cnt_reg[4] [0]),
        .I4(\block_word_cnt_reg[4] [1]),
        .I5(pattern_word[11]),
        .O(\tx_data_reg_reg[11] ));
  LUT5 #(
    .INIT(32'h54FF5454)) 
    \tx_data_reg[12]_i_1__0 
       (.I0(\block_word_cnt_reg[2]_1 ),
        .I1(pattern_word[12]),
        .I2(\block_word_cnt_reg[2]_2 ),
        .I3(\test_init_cnt_reg[12] ),
        .I4(\block_word_cnt_reg[3] ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hFFFF44F444444444)) 
    \tx_data_reg[13]_i_1__0 
       (.I0(\block_word_cnt_reg[0]_2 ),
        .I1(pattern_word[13]),
        .I2(test_init_cnt_reg[6]),
        .I3(\block_word_cnt_reg[4]_1 ),
        .I4(\ver_parity_word_reg_reg[13] ),
        .I5(\block_word_cnt_reg[3] ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hFFFF44F444444444)) 
    \tx_data_reg[14]_i_1__0 
       (.I0(\block_word_cnt_reg[0]_2 ),
        .I1(pattern_word[14]),
        .I2(test_init_cnt_reg[7]),
        .I3(\block_word_cnt_reg[4]_1 ),
        .I4(\ver_parity_word_reg_reg[14] ),
        .I5(\block_word_cnt_reg[3] ),
        .O(D[9]));
  LUT6 #(
    .INIT(64'hFFFF44F444444444)) 
    \tx_data_reg[15]_i_1__0 
       (.I0(\block_word_cnt_reg[0]_2 ),
        .I1(pattern_word[15]),
        .I2(test_init_cnt_reg[8]),
        .I3(\block_word_cnt_reg[4]_1 ),
        .I4(\ver_parity_word_reg_reg[15] ),
        .I5(\block_word_cnt_reg[3] ),
        .O(D[10]));
  LUT6 #(
    .INIT(64'h82A8A2B8AAAAAABA)) 
    \tx_data_reg[1]_i_3__0 
       (.I0(Q[1]),
        .I1(\block_word_cnt_reg[4] [2]),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(\block_word_cnt_reg[4] [3]),
        .I4(\block_word_cnt_reg[4] [0]),
        .I5(\block_word_cnt_reg[3] ),
        .O(\tx_data_reg_reg[1] ));
  LUT5 #(
    .INIT(32'hF8B8FCFC)) 
    \tx_data_reg[2]_i_1__0 
       (.I0(\hor_parity_word_reg_reg[2] ),
        .I1(\block_word_cnt_reg[3] ),
        .I2(pattern_word[2]),
        .I3(\block_word_cnt_reg[2] ),
        .I4(\tx_data_reg[2]_i_4__0_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF023A3A3A)) 
    \tx_data_reg[2]_i_4__0 
       (.I0(\block_word_cnt_reg[1]_0 ),
        .I1(pattern_word[2]),
        .I2(\block_word_cnt_reg[4] [3]),
        .I3(\block_word_cnt_reg[4] [1]),
        .I4(\block_word_cnt_reg[4] [0]),
        .I5(\block_word_cnt_reg[4] [2]),
        .O(\tx_data_reg[2]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hCF88FFAA)) 
    \tx_data_reg[4]_i_1__0 
       (.I0(\block_word_cnt_reg[3] ),
        .I1(\ver_parity_word_reg_reg[4] ),
        .I2(\block_word_cnt_reg[4]_0 ),
        .I3(pattern_word[4]),
        .I4(\tx_data_reg[4]_i_4__0_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFF1122112F)) 
    \tx_data_reg[4]_i_4__0 
       (.I0(\block_word_cnt_reg[1] ),
        .I1(pattern_word[4]),
        .I2(\block_word_cnt_reg[0]_1 ),
        .I3(\block_word_cnt_reg[4] [3]),
        .I4(test_init_cnt_reg[0]),
        .I5(\block_word_cnt_reg[4] [2]),
        .O(\tx_data_reg[4]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF5554)) 
    \tx_data_reg[5]_i_1__0 
       (.I0(\tx_data_reg[5]_i_2__0_n_0 ),
        .I1(\block_word_cnt_reg[0]_1 ),
        .I2(\block_word_cnt_reg[4] [3]),
        .I3(test_init_cnt_reg[1]),
        .I4(\pattern_reg_reg[5]_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFAAAAAAAFFFFFBBB)) 
    \tx_data_reg[5]_i_2__0 
       (.I0(\block_word_cnt_reg[4] [2]),
        .I1(\block_word_cnt_reg[3] ),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(\block_word_cnt_reg[4] [0]),
        .I4(\block_word_cnt_reg[4] [3]),
        .I5(Q[3]),
        .O(\tx_data_reg[5]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444444444)) 
    \tx_data_reg[6]_i_1__0 
       (.I0(\block_word_cnt_reg[0]_0 ),
        .I1(pattern_word[6]),
        .I2(test_init_cnt_reg[2]),
        .I3(\block_word_cnt_reg[4]_1 ),
        .I4(\block_word_cnt_reg[2]_0 ),
        .I5(\block_word_cnt_reg[3] ),
        .O(D[3]));
  LUT5 #(
    .INIT(32'hFFFF5554)) 
    \tx_data_reg[7]_i_1__0 
       (.I0(\tx_data_reg[7]_i_2__0_n_0 ),
        .I1(\block_word_cnt_reg[0]_1 ),
        .I2(\block_word_cnt_reg[4] [3]),
        .I3(test_init_cnt_reg[3]),
        .I4(\pattern_reg_reg[7]_0 ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFAAAAAAAFFFFFBBB)) 
    \tx_data_reg[7]_i_2__0 
       (.I0(\block_word_cnt_reg[4] [2]),
        .I1(\block_word_cnt_reg[3] ),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(\block_word_cnt_reg[4] [0]),
        .I4(\block_word_cnt_reg[4] [3]),
        .I5(Q[4]),
        .O(\tx_data_reg[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h5DFF5D005DFF5500)) 
    \tx_data_reg[8]_i_1__0 
       (.I0(\pattern_reg_reg[8]_0 ),
        .I1(\tx_data_reg[8]_i_3__0_n_0 ),
        .I2(\block_word_cnt_reg[4] [2]),
        .I3(\block_word_cnt_reg[3] ),
        .I4(Q[5]),
        .I5(\block_word_cnt_reg[0] ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFFFFF0F8F0FFF0F8)) 
    \tx_data_reg[8]_i_3__0 
       (.I0(test_init_cnt_reg[4]),
        .I1(test_init_cnt_reg_3__s_net_1),
        .I2(\block_word_cnt_reg[4] [3]),
        .I3(\block_word_cnt_reg[4] [0]),
        .I4(\block_word_cnt_reg[4] [1]),
        .I5(Q[5]),
        .O(\tx_data_reg[8]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF5554)) 
    \tx_data_reg[9]_i_1__0 
       (.I0(\tx_data_reg[9]_i_2__0_n_0 ),
        .I1(\block_word_cnt_reg[0]_1 ),
        .I2(\block_word_cnt_reg[4] [3]),
        .I3(test_init_cnt_reg[5]),
        .I4(\pattern_reg_reg[9]_0 ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFFFFFFFFF3333111)) 
    \tx_data_reg[9]_i_2__0 
       (.I0(\block_word_cnt_reg[3] ),
        .I1(Q[6]),
        .I2(\block_word_cnt_reg[4] [0]),
        .I3(\block_word_cnt_reg[4] [1]),
        .I4(\block_word_cnt_reg[4] [3]),
        .I5(\block_word_cnt_reg[4] [2]),
        .O(\tx_data_reg[9]_i_2__0_n_0 ));
endmodule

(* ORIG_REF_NAME = "pattern_gen" *) 
module gtx3g_bert_0_pattern_gen_36
   (D,
    Q,
    \tx_data_reg_reg[1] ,
    \tx_data_reg_reg[12] ,
    \tx_data_reg_reg[1]_0 ,
    \tx_data_reg_reg[0] ,
    pattern_rst_reg,
    GT0_TXUSRCLK_OUT,
    pattern_pause_reg,
    \ver_parity_word_reg_reg[2] ,
    \block_word_cnt_reg[3] ,
    \block_word_cnt_reg[2] ,
    \block_word_cnt_reg[1] ,
    \block_word_cnt_reg[4] ,
    \ver_parity_word_reg_reg[4] ,
    \block_word_cnt_reg[4]_0 ,
    test_init_cnt_reg,
    \block_word_cnt_reg[1]_0 ,
    \block_word_cnt_reg[2]_0 ,
    \block_word_cnt_reg[1]_1 ,
    \pattern_reg_reg[5]_0 ,
    \pattern_reg_reg[7]_0 ,
    \pattern_reg_reg[9]_0 ,
    \block_word_cnt_reg[4]_1 ,
    \block_word_cnt_reg[2]_1 ,
    \ver_parity_word_reg_reg[13] ,
    \ver_parity_word_reg_reg[14] ,
    \hor_parity_word_reg_reg[6] ,
    \block_word_cnt_reg[2]_2 ,
    \hor_parity_word_reg_reg[8] ,
    test_init_cnt_reg_3__s_port_,
    \block_word_cnt_reg[2]_3 ,
    \block_word_cnt_reg[4]_2 ,
    \hor_parity_word_reg_reg[3] ,
    PATTERN_MODE);
  output [9:0]D;
  output [6:0]Q;
  output \tx_data_reg_reg[1] ;
  output \tx_data_reg_reg[12] ;
  output \tx_data_reg_reg[1]_0 ;
  output \tx_data_reg_reg[0] ;
  input pattern_rst_reg;
  input GT0_TXUSRCLK_OUT;
  input pattern_pause_reg;
  input \ver_parity_word_reg_reg[2] ;
  input \block_word_cnt_reg[3] ;
  input \block_word_cnt_reg[2] ;
  input \block_word_cnt_reg[1] ;
  input [3:0]\block_word_cnt_reg[4] ;
  input \ver_parity_word_reg_reg[4] ;
  input \block_word_cnt_reg[4]_0 ;
  input [8:0]test_init_cnt_reg;
  input \block_word_cnt_reg[1]_0 ;
  input \block_word_cnt_reg[2]_0 ;
  input \block_word_cnt_reg[1]_1 ;
  input \pattern_reg_reg[5]_0 ;
  input \pattern_reg_reg[7]_0 ;
  input \pattern_reg_reg[9]_0 ;
  input \block_word_cnt_reg[4]_1 ;
  input \block_word_cnt_reg[2]_1 ;
  input \ver_parity_word_reg_reg[13] ;
  input \ver_parity_word_reg_reg[14] ;
  input \hor_parity_word_reg_reg[6] ;
  input \block_word_cnt_reg[2]_2 ;
  input \hor_parity_word_reg_reg[8] ;
  input test_init_cnt_reg_3__s_port_;
  input \block_word_cnt_reg[2]_3 ;
  input \block_word_cnt_reg[4]_2 ;
  input \hor_parity_word_reg_reg[3] ;
  input [2:0]PATTERN_MODE;

  wire [9:0]D;
  wire GT0_TXUSRCLK_OUT;
  wire [2:0]PATTERN_MODE;
  wire [6:0]Q;
  wire \block_word_cnt_reg[1] ;
  wire \block_word_cnt_reg[1]_0 ;
  wire \block_word_cnt_reg[1]_1 ;
  wire \block_word_cnt_reg[2] ;
  wire \block_word_cnt_reg[2]_0 ;
  wire \block_word_cnt_reg[2]_1 ;
  wire \block_word_cnt_reg[2]_2 ;
  wire \block_word_cnt_reg[2]_3 ;
  wire \block_word_cnt_reg[3] ;
  wire [3:0]\block_word_cnt_reg[4] ;
  wire \block_word_cnt_reg[4]_0 ;
  wire \block_word_cnt_reg[4]_1 ;
  wire \block_word_cnt_reg[4]_2 ;
  wire bram_gen_inst1_n_10;
  wire bram_gen_inst1_n_11;
  wire bram_gen_inst1_n_12;
  wire bram_gen_inst1_n_13;
  wire bram_gen_inst1_n_14;
  wire bram_gen_inst1_n_15;
  wire bram_gen_inst1_n_16;
  wire bram_gen_inst1_n_17;
  wire bram_gen_inst1_n_7;
  wire bram_gen_inst1_n_8;
  wire bram_gen_inst1_n_9;
  wire \hor_parity_word_reg_reg[3] ;
  wire \hor_parity_word_reg_reg[6] ;
  wire \hor_parity_word_reg_reg[8] ;
  wire [8:0]p_0_in;
  wire [0:0]p_1_in;
  wire pattern_pause_reg;
  wire [15:0]pattern_reg;
  wire \pattern_reg_reg[5]_0 ;
  wire \pattern_reg_reg[7]_0 ;
  wire \pattern_reg_reg[9]_0 ;
  wire pattern_rst_reg;
  wire [14:0]pattern_word;
  wire [15:0]prbs15_reg;
  wire [15:0]prbs20_reg;
  wire [15:0]prbs23_reg;
  wire prbs31_gen_inst1_n_0;
  wire prbs31_gen_inst1_n_1;
  wire prbs31_gen_inst1_n_10;
  wire prbs31_gen_inst1_n_11;
  wire prbs31_gen_inst1_n_12;
  wire prbs31_gen_inst1_n_13;
  wire prbs31_gen_inst1_n_14;
  wire prbs31_gen_inst1_n_15;
  wire prbs31_gen_inst1_n_16;
  wire prbs31_gen_inst1_n_17;
  wire prbs31_gen_inst1_n_18;
  wire prbs31_gen_inst1_n_2;
  wire prbs31_gen_inst1_n_3;
  wire prbs31_gen_inst1_n_4;
  wire prbs31_gen_inst1_n_5;
  wire prbs31_gen_inst1_n_6;
  wire prbs31_gen_inst1_n_7;
  wire prbs31_gen_inst1_n_8;
  wire prbs31_gen_inst1_n_9;
  wire [15:0]prbs7_reg;
  wire [15:0]prbs9_reg;
  wire [3:0]read_counter_i;
  wire [3:1]read_counter_i_d1;
  wire [8:0]test_init_cnt_reg;
  wire test_init_cnt_reg_3__s_net_1;
  wire \tx_data_reg[2]_i_3_n_0 ;
  wire \tx_data_reg[4]_i_4_n_0 ;
  wire \tx_data_reg[6]_i_3_n_0 ;
  wire \tx_data_reg[8]_i_2_n_0 ;
  wire \tx_data_reg_reg[0] ;
  wire \tx_data_reg_reg[12] ;
  wire \tx_data_reg_reg[1] ;
  wire \tx_data_reg_reg[1]_0 ;
  wire \ver_parity_word_reg_reg[13] ;
  wire \ver_parity_word_reg_reg[14] ;
  wire \ver_parity_word_reg_reg[2] ;
  wire \ver_parity_word_reg_reg[4] ;

  assign test_init_cnt_reg_3__s_net_1 = test_init_cnt_reg_3__s_port_;
  gtx3g_bert_0_bram_gen_37 bram_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(read_counter_i_d1),
        .\bram_reg_reg[12]_0 (read_counter_i),
        .p_0_in({p_0_in[8:7],p_0_in[4:2],p_0_in[0]}),
        .p_1_in(p_1_in),
        .pattern_pause_reg(pattern_pause_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .\pattern_reg_reg[12] ({bram_gen_inst1_n_7,bram_gen_inst1_n_8,bram_gen_inst1_n_9,bram_gen_inst1_n_10,bram_gen_inst1_n_11,bram_gen_inst1_n_12,bram_gen_inst1_n_13,bram_gen_inst1_n_14,bram_gen_inst1_n_15,bram_gen_inst1_n_16,bram_gen_inst1_n_17}),
        .pattern_rst_reg(pattern_rst_reg));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \bram_reg[1]_i_2 
       (.I0(read_counter_i[2]),
        .I1(read_counter_i[3]),
        .I2(read_counter_i[1]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'h999A)) 
    \bram_reg[2]_i_2 
       (.I0(read_counter_i[0]),
        .I1(read_counter_i[1]),
        .I2(read_counter_i[3]),
        .I3(read_counter_i[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'hCC9A)) 
    \bram_reg[3]_i_2 
       (.I0(read_counter_i[0]),
        .I1(read_counter_i[2]),
        .I2(read_counter_i[3]),
        .I3(read_counter_i[1]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \bram_reg[4]_i_2 
       (.I0(read_counter_i[3]),
        .I1(read_counter_i[2]),
        .I2(read_counter_i[1]),
        .I3(read_counter_i[0]),
        .O(p_0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \bram_reg[7]_i_2 
       (.I0(read_counter_i[3]),
        .I1(read_counter_i[0]),
        .I2(read_counter_i[1]),
        .I3(read_counter_i[2]),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \bram_reg[8]_i_2 
       (.I0(read_counter_i[3]),
        .I1(read_counter_i[0]),
        .I2(read_counter_i[1]),
        .I3(read_counter_i[2]),
        .O(p_0_in[8]));
  LUT3 #(
    .INIT(8'hFE)) 
    \i___0/i_ 
       (.I0(read_counter_i_d1[2]),
        .I1(read_counter_i_d1[3]),
        .I2(read_counter_i_d1[1]),
        .O(p_1_in));
  FDRE \pattern_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[0]),
        .Q(pattern_word[0]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[10]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[11]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[12]),
        .Q(pattern_word[12]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[13]),
        .Q(pattern_word[13]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[14]),
        .Q(pattern_word[14]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[15]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[1]),
        .Q(pattern_word[1]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[2]),
        .Q(pattern_word[2]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[3]),
        .Q(pattern_word[3]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[4]),
        .Q(pattern_word[4]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[5]),
        .Q(Q[0]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[6]),
        .Q(pattern_word[6]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[7]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[8]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \pattern_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg[9]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  gtx3g_bert_0_prbs11_gen_38 prbs11_gen_inst1
       (.D(pattern_reg),
        .GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .PATTERN_MODE(PATTERN_MODE),
        .Q(prbs9_reg),
        .\bram_reg_reg[12] ({bram_gen_inst1_n_7,bram_gen_inst1_n_8,bram_gen_inst1_n_9,bram_gen_inst1_n_10,bram_gen_inst1_n_11,bram_gen_inst1_n_12,bram_gen_inst1_n_13,bram_gen_inst1_n_14,bram_gen_inst1_n_15,bram_gen_inst1_n_16,bram_gen_inst1_n_17}),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg),
        .\prbs31_reg_reg[0] (prbs31_gen_inst1_n_3),
        .\prbs31_reg_reg[10] (prbs31_gen_inst1_n_13),
        .\prbs31_reg_reg[11] (prbs31_gen_inst1_n_14),
        .\prbs31_reg_reg[12] (prbs31_gen_inst1_n_15),
        .\prbs31_reg_reg[13] (prbs31_gen_inst1_n_16),
        .\prbs31_reg_reg[14] (prbs31_gen_inst1_n_17),
        .\prbs31_reg_reg[15] (prbs31_gen_inst1_n_18),
        .\prbs31_reg_reg[1] (prbs31_gen_inst1_n_4),
        .\prbs31_reg_reg[2] (prbs31_gen_inst1_n_5),
        .\prbs31_reg_reg[3] (prbs31_gen_inst1_n_6),
        .\prbs31_reg_reg[4] (prbs31_gen_inst1_n_7),
        .\prbs31_reg_reg[5] (prbs31_gen_inst1_n_8),
        .\prbs31_reg_reg[6] (prbs31_gen_inst1_n_9),
        .\prbs31_reg_reg[7] (prbs31_gen_inst1_n_10),
        .\prbs31_reg_reg[8] (prbs31_gen_inst1_n_11),
        .\prbs31_reg_reg[9] (prbs31_gen_inst1_n_12),
        .\prbs7_reg_reg[15] (prbs7_reg));
  gtx3g_bert_0_prbs15_gen_39 prbs15_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs15_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg));
  gtx3g_bert_0_prbs20_gen_40 prbs20_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs20_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg),
        .prbs31_reg_reg_r_1(prbs31_gen_inst1_n_1));
  gtx3g_bert_0_prbs23_gen_41 prbs23_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs23_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg),
        .prbs31_reg_reg_r_2(prbs31_gen_inst1_n_2));
  gtx3g_bert_0_prbs31_gen_42 prbs31_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .PATTERN_MODE(PATTERN_MODE[1:0]),
        .Q(prbs23_reg),
        .pattern_pause_reg(pattern_pause_reg),
        .\pattern_reg_reg[0] (prbs31_gen_inst1_n_3),
        .\pattern_reg_reg[10] (prbs31_gen_inst1_n_13),
        .\pattern_reg_reg[11] (prbs31_gen_inst1_n_14),
        .\pattern_reg_reg[12] (prbs31_gen_inst1_n_15),
        .\pattern_reg_reg[13] (prbs31_gen_inst1_n_16),
        .\pattern_reg_reg[14] (prbs31_gen_inst1_n_17),
        .\pattern_reg_reg[15] (prbs31_gen_inst1_n_18),
        .\pattern_reg_reg[1] (prbs31_gen_inst1_n_4),
        .\pattern_reg_reg[2] (prbs31_gen_inst1_n_5),
        .\pattern_reg_reg[3] (prbs31_gen_inst1_n_6),
        .\pattern_reg_reg[4] (prbs31_gen_inst1_n_7),
        .\pattern_reg_reg[5] (prbs31_gen_inst1_n_8),
        .\pattern_reg_reg[6] (prbs31_gen_inst1_n_9),
        .\pattern_reg_reg[7] (prbs31_gen_inst1_n_10),
        .\pattern_reg_reg[8] (prbs31_gen_inst1_n_11),
        .\pattern_reg_reg[9] (prbs31_gen_inst1_n_12),
        .pattern_rst_reg(pattern_rst_reg),
        .\prbs15_reg_reg[15] (prbs15_reg),
        .\prbs20_reg_reg[15] (prbs20_reg),
        .\prbs31_reg_reg[30]_0 (prbs31_gen_inst1_n_0),
        .prbs31_reg_reg_r_2_0(prbs31_gen_inst1_n_1),
        .prbs31_reg_reg_r_3_0(prbs31_gen_inst1_n_2));
  gtx3g_bert_0_prbs7_gen_43 prbs7_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs7_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg));
  gtx3g_bert_0_prbs9_gen_44 prbs9_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs9_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .pattern_rst_reg(pattern_rst_reg));
  LUT6 #(
    .INIT(64'hAA222A88AAAAAAAA)) 
    \tx_data_reg[0]_i_3 
       (.I0(pattern_word[0]),
        .I1(\block_word_cnt_reg[4] [3]),
        .I2(\block_word_cnt_reg[4] [0]),
        .I3(\block_word_cnt_reg[4] [1]),
        .I4(\block_word_cnt_reg[4] [2]),
        .I5(\block_word_cnt_reg[3] ),
        .O(\tx_data_reg_reg[0] ));
  LUT6 #(
    .INIT(64'h88AAEA80AAAAAAAA)) 
    \tx_data_reg[12]_i_3 
       (.I0(pattern_word[12]),
        .I1(\block_word_cnt_reg[4] [1]),
        .I2(\block_word_cnt_reg[4] [0]),
        .I3(\block_word_cnt_reg[4] [3]),
        .I4(\block_word_cnt_reg[4] [2]),
        .I5(\block_word_cnt_reg[3] ),
        .O(\tx_data_reg_reg[12] ));
  LUT6 #(
    .INIT(64'hFFFF44F444444444)) 
    \tx_data_reg[13]_i_1 
       (.I0(\block_word_cnt_reg[4]_1 ),
        .I1(pattern_word[13]),
        .I2(test_init_cnt_reg[7]),
        .I3(\block_word_cnt_reg[2]_1 ),
        .I4(\ver_parity_word_reg_reg[13] ),
        .I5(\block_word_cnt_reg[3] ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hFFFF44F444444444)) 
    \tx_data_reg[14]_i_1 
       (.I0(\block_word_cnt_reg[4]_1 ),
        .I1(pattern_word[14]),
        .I2(test_init_cnt_reg[8]),
        .I3(\block_word_cnt_reg[2]_1 ),
        .I4(\ver_parity_word_reg_reg[14] ),
        .I5(\block_word_cnt_reg[3] ),
        .O(D[9]));
  LUT6 #(
    .INIT(64'hCCCC0CCC4C0CCC0C)) 
    \tx_data_reg[1]_i_4 
       (.I0(\block_word_cnt_reg[4] [0]),
        .I1(pattern_word[1]),
        .I2(\block_word_cnt_reg[3] ),
        .I3(\block_word_cnt_reg[4] [3]),
        .I4(\block_word_cnt_reg[4] [1]),
        .I5(\block_word_cnt_reg[4] [2]),
        .O(\tx_data_reg_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h1011101000110010)) 
    \tx_data_reg[1]_i_5 
       (.I0(\block_word_cnt_reg[2]_2 ),
        .I1(\block_word_cnt_reg[4] [3]),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(\block_word_cnt_reg[4] [0]),
        .I4(test_init_cnt_reg[0]),
        .I5(pattern_word[1]),
        .O(\tx_data_reg_reg[1] ));
  LUT5 #(
    .INIT(32'hF8B8FCFC)) 
    \tx_data_reg[2]_i_1 
       (.I0(\ver_parity_word_reg_reg[2] ),
        .I1(\block_word_cnt_reg[3] ),
        .I2(pattern_word[2]),
        .I3(\block_word_cnt_reg[2] ),
        .I4(\tx_data_reg[2]_i_3_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF03332AAA)) 
    \tx_data_reg[2]_i_3 
       (.I0(\block_word_cnt_reg[1] ),
        .I1(pattern_word[2]),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(\block_word_cnt_reg[4] [0]),
        .I4(\block_word_cnt_reg[4] [3]),
        .I5(\block_word_cnt_reg[4] [2]),
        .O(\tx_data_reg[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF405F40FFF0FFF0)) 
    \tx_data_reg[3]_i_1 
       (.I0(\block_word_cnt_reg[2]_3 ),
        .I1(\block_word_cnt_reg[4]_2 ),
        .I2(\block_word_cnt_reg[3] ),
        .I3(pattern_word[3]),
        .I4(\block_word_cnt_reg[2] ),
        .I5(\hor_parity_word_reg_reg[3] ),
        .O(D[1]));
  LUT5 #(
    .INIT(32'hF8B8FCFC)) 
    \tx_data_reg[4]_i_1 
       (.I0(\ver_parity_word_reg_reg[4] ),
        .I1(\block_word_cnt_reg[3] ),
        .I2(pattern_word[4]),
        .I3(\block_word_cnt_reg[2] ),
        .I4(\tx_data_reg[4]_i_4_n_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFF1F11111F)) 
    \tx_data_reg[4]_i_4 
       (.I0(\block_word_cnt_reg[4]_0 ),
        .I1(test_init_cnt_reg[1]),
        .I2(pattern_word[4]),
        .I3(\block_word_cnt_reg[1]_0 ),
        .I4(\block_word_cnt_reg[4] [3]),
        .I5(\block_word_cnt_reg[4] [2]),
        .O(\tx_data_reg[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF54545400)) 
    \tx_data_reg[5]_i_1 
       (.I0(\block_word_cnt_reg[2]_0 ),
        .I1(\block_word_cnt_reg[1]_1 ),
        .I2(Q[0]),
        .I3(test_init_cnt_reg[2]),
        .I4(\block_word_cnt_reg[4]_0 ),
        .I5(\pattern_reg_reg[5]_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hEEE0EEEEEEE0EEE0)) 
    \tx_data_reg[6]_i_1 
       (.I0(\block_word_cnt_reg[3] ),
        .I1(pattern_word[6]),
        .I2(\hor_parity_word_reg_reg[6] ),
        .I3(\tx_data_reg[6]_i_3_n_0 ),
        .I4(\block_word_cnt_reg[2]_1 ),
        .I5(test_init_cnt_reg[3]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hAA222B88AAAAABAA)) 
    \tx_data_reg[6]_i_3 
       (.I0(pattern_word[6]),
        .I1(\block_word_cnt_reg[4] [3]),
        .I2(\block_word_cnt_reg[4] [0]),
        .I3(\block_word_cnt_reg[4] [1]),
        .I4(\block_word_cnt_reg[4] [2]),
        .I5(\block_word_cnt_reg[3] ),
        .O(\tx_data_reg[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF54545400)) 
    \tx_data_reg[7]_i_1 
       (.I0(\block_word_cnt_reg[2]_0 ),
        .I1(\block_word_cnt_reg[1]_1 ),
        .I2(Q[1]),
        .I3(test_init_cnt_reg[4]),
        .I4(\block_word_cnt_reg[4]_0 ),
        .I5(\pattern_reg_reg[7]_0 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFFFFFFFF55150000)) 
    \tx_data_reg[8]_i_1 
       (.I0(\block_word_cnt_reg[2]_2 ),
        .I1(\block_word_cnt_reg[4] [3]),
        .I2(\block_word_cnt_reg[1]_0 ),
        .I3(Q[2]),
        .I4(\tx_data_reg[8]_i_2_n_0 ),
        .I5(\hor_parity_word_reg_reg[8] ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFFFFFFFFF000F4F4)) 
    \tx_data_reg[8]_i_2 
       (.I0(test_init_cnt_reg_3__s_net_1),
        .I1(test_init_cnt_reg[5]),
        .I2(\block_word_cnt_reg[4] [1]),
        .I3(Q[2]),
        .I4(\block_word_cnt_reg[4] [0]),
        .I5(\block_word_cnt_reg[4] [3]),
        .O(\tx_data_reg[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF54545400)) 
    \tx_data_reg[9]_i_1 
       (.I0(\block_word_cnt_reg[2]_0 ),
        .I1(\block_word_cnt_reg[1]_1 ),
        .I2(Q[3]),
        .I3(test_init_cnt_reg[6]),
        .I4(\block_word_cnt_reg[4]_0 ),
        .I5(\pattern_reg_reg[9]_0 ),
        .O(D[7]));
endmodule

(* ORIG_REF_NAME = "pattern_gen" *) 
module gtx3g_bert_0_pattern_gen_46
   (S,
    \pattern_error_cnt_reg[0] ,
    rx_fifo_rst,
    GT0_TXUSRCLK_OUT,
    pattern_pause_reg_reg,
    Q,
    PATTERN_MODE);
  output [3:0]S;
  output [1:0]\pattern_error_cnt_reg[0] ;
  input rx_fifo_rst;
  input GT0_TXUSRCLK_OUT;
  input pattern_pause_reg_reg;
  input [15:0]Q;
  input [2:0]PATTERN_MODE;

  wire GT0_TXUSRCLK_OUT;
  wire [2:0]PATTERN_MODE;
  wire [15:0]Q;
  wire [3:0]S;
  wire bram_gen_inst1_n_0;
  wire bram_gen_inst1_n_1;
  wire bram_gen_inst1_n_10;
  wire bram_gen_inst1_n_2;
  wire bram_gen_inst1_n_3;
  wire bram_gen_inst1_n_4;
  wire bram_gen_inst1_n_5;
  wire bram_gen_inst1_n_6;
  wire bram_gen_inst1_n_7;
  wire bram_gen_inst1_n_8;
  wire bram_gen_inst1_n_9;
  wire [1:0]\pattern_error_cnt_reg[0] ;
  wire pattern_pause_reg_reg;
  wire [15:0]pattern_reg;
  wire [15:0]pattern_reg_0;
  wire [15:0]prbs15_reg;
  wire [15:0]prbs20_reg;
  wire [15:0]prbs23_reg;
  wire prbs31_gen_inst1_n_0;
  wire prbs31_gen_inst1_n_1;
  wire prbs31_gen_inst1_n_10;
  wire prbs31_gen_inst1_n_11;
  wire prbs31_gen_inst1_n_12;
  wire prbs31_gen_inst1_n_13;
  wire prbs31_gen_inst1_n_14;
  wire prbs31_gen_inst1_n_15;
  wire prbs31_gen_inst1_n_16;
  wire prbs31_gen_inst1_n_17;
  wire prbs31_gen_inst1_n_18;
  wire prbs31_gen_inst1_n_2;
  wire prbs31_gen_inst1_n_3;
  wire prbs31_gen_inst1_n_4;
  wire prbs31_gen_inst1_n_5;
  wire prbs31_gen_inst1_n_6;
  wire prbs31_gen_inst1_n_7;
  wire prbs31_gen_inst1_n_8;
  wire prbs31_gen_inst1_n_9;
  wire [15:0]prbs7_reg;
  wire [15:0]prbs9_reg;
  wire rx_fifo_rst;

  gtx3g_bert_0_bram_gen_47 bram_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q({bram_gen_inst1_n_0,bram_gen_inst1_n_1,bram_gen_inst1_n_2,bram_gen_inst1_n_3,bram_gen_inst1_n_4,bram_gen_inst1_n_5,bram_gen_inst1_n_6,bram_gen_inst1_n_7,bram_gen_inst1_n_8,bram_gen_inst1_n_9,bram_gen_inst1_n_10}),
        .pattern_pause_reg_reg(pattern_pause_reg_reg),
        .pattern_pause_reg_reg_0(prbs31_gen_inst1_n_0),
        .rx_fifo_rst(rx_fifo_rst));
  LUT2 #(
    .INIT(4'h9)) 
    pattern_error_reg0_carry__0_i_1
       (.I0(pattern_reg[15]),
        .I1(Q[15]),
        .O(\pattern_error_cnt_reg[0] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pattern_error_reg0_carry__0_i_2
       (.I0(pattern_reg[12]),
        .I1(Q[12]),
        .I2(pattern_reg[14]),
        .I3(Q[14]),
        .I4(Q[13]),
        .I5(pattern_reg[13]),
        .O(\pattern_error_cnt_reg[0] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pattern_error_reg0_carry_i_1
       (.I0(pattern_reg[10]),
        .I1(Q[10]),
        .I2(pattern_reg[11]),
        .I3(Q[11]),
        .I4(Q[9]),
        .I5(pattern_reg[9]),
        .O(S[3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pattern_error_reg0_carry_i_2
       (.I0(pattern_reg[7]),
        .I1(Q[7]),
        .I2(pattern_reg[8]),
        .I3(Q[8]),
        .I4(Q[6]),
        .I5(pattern_reg[6]),
        .O(S[2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pattern_error_reg0_carry_i_3
       (.I0(pattern_reg[4]),
        .I1(Q[4]),
        .I2(pattern_reg[5]),
        .I3(Q[5]),
        .I4(Q[3]),
        .I5(pattern_reg[3]),
        .O(S[1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pattern_error_reg0_carry_i_4
       (.I0(pattern_reg[1]),
        .I1(Q[1]),
        .I2(pattern_reg[2]),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(pattern_reg[0]),
        .O(S[0]));
  FDRE \pattern_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[0]),
        .Q(pattern_reg[0]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[10]),
        .Q(pattern_reg[10]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[11]),
        .Q(pattern_reg[11]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[12]),
        .Q(pattern_reg[12]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[13]),
        .Q(pattern_reg[13]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[14]),
        .Q(pattern_reg[14]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[15]),
        .Q(pattern_reg[15]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[1]),
        .Q(pattern_reg[1]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[2]),
        .Q(pattern_reg[2]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[3]),
        .Q(pattern_reg[3]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[4]),
        .Q(pattern_reg[4]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[5]),
        .Q(pattern_reg[5]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[6]),
        .Q(pattern_reg[6]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[7]),
        .Q(pattern_reg[7]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[8]),
        .Q(pattern_reg[8]),
        .R(rx_fifo_rst));
  FDRE \pattern_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(1'b1),
        .D(pattern_reg_0[9]),
        .Q(pattern_reg[9]),
        .R(rx_fifo_rst));
  gtx3g_bert_0_prbs11_gen_48 prbs11_gen_inst1
       (.D(pattern_reg_0),
        .GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .PATTERN_MODE(PATTERN_MODE),
        .Q(prbs9_reg),
        .\bram_reg_reg[12] ({bram_gen_inst1_n_0,bram_gen_inst1_n_1,bram_gen_inst1_n_2,bram_gen_inst1_n_3,bram_gen_inst1_n_4,bram_gen_inst1_n_5,bram_gen_inst1_n_6,bram_gen_inst1_n_7,bram_gen_inst1_n_8,bram_gen_inst1_n_9,bram_gen_inst1_n_10}),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .\prbs31_reg_reg[0] (prbs31_gen_inst1_n_3),
        .\prbs31_reg_reg[10] (prbs31_gen_inst1_n_13),
        .\prbs31_reg_reg[11] (prbs31_gen_inst1_n_14),
        .\prbs31_reg_reg[12] (prbs31_gen_inst1_n_15),
        .\prbs31_reg_reg[13] (prbs31_gen_inst1_n_16),
        .\prbs31_reg_reg[14] (prbs31_gen_inst1_n_17),
        .\prbs31_reg_reg[15] (prbs31_gen_inst1_n_18),
        .\prbs31_reg_reg[1] (prbs31_gen_inst1_n_4),
        .\prbs31_reg_reg[2] (prbs31_gen_inst1_n_5),
        .\prbs31_reg_reg[3] (prbs31_gen_inst1_n_6),
        .\prbs31_reg_reg[4] (prbs31_gen_inst1_n_7),
        .\prbs31_reg_reg[5] (prbs31_gen_inst1_n_8),
        .\prbs31_reg_reg[6] (prbs31_gen_inst1_n_9),
        .\prbs31_reg_reg[7] (prbs31_gen_inst1_n_10),
        .\prbs31_reg_reg[8] (prbs31_gen_inst1_n_11),
        .\prbs31_reg_reg[9] (prbs31_gen_inst1_n_12),
        .\prbs7_reg_reg[15] (prbs7_reg),
        .rx_fifo_rst(rx_fifo_rst));
  gtx3g_bert_0_prbs15_gen_49 prbs15_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs15_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .rx_fifo_rst(rx_fifo_rst));
  gtx3g_bert_0_prbs20_gen_50 prbs20_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs20_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .prbs31_reg_reg_r_21(prbs31_gen_inst1_n_1),
        .rx_fifo_rst(rx_fifo_rst));
  gtx3g_bert_0_prbs23_gen_51 prbs23_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs23_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .prbs31_reg_reg_r_22(prbs31_gen_inst1_n_2),
        .rx_fifo_rst(rx_fifo_rst));
  gtx3g_bert_0_prbs31_gen_52 prbs31_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .PATTERN_MODE(PATTERN_MODE[1:0]),
        .Q(prbs23_reg),
        .pattern_pause_reg_reg(pattern_pause_reg_reg),
        .\pattern_reg_reg[0] (prbs31_gen_inst1_n_3),
        .\pattern_reg_reg[10] (prbs31_gen_inst1_n_13),
        .\pattern_reg_reg[11] (prbs31_gen_inst1_n_14),
        .\pattern_reg_reg[12] (prbs31_gen_inst1_n_15),
        .\pattern_reg_reg[13] (prbs31_gen_inst1_n_16),
        .\pattern_reg_reg[14] (prbs31_gen_inst1_n_17),
        .\pattern_reg_reg[15] (prbs31_gen_inst1_n_18),
        .\pattern_reg_reg[1] (prbs31_gen_inst1_n_4),
        .\pattern_reg_reg[2] (prbs31_gen_inst1_n_5),
        .\pattern_reg_reg[3] (prbs31_gen_inst1_n_6),
        .\pattern_reg_reg[4] (prbs31_gen_inst1_n_7),
        .\pattern_reg_reg[5] (prbs31_gen_inst1_n_8),
        .\pattern_reg_reg[6] (prbs31_gen_inst1_n_9),
        .\pattern_reg_reg[7] (prbs31_gen_inst1_n_10),
        .\pattern_reg_reg[8] (prbs31_gen_inst1_n_11),
        .\pattern_reg_reg[9] (prbs31_gen_inst1_n_12),
        .\prbs15_reg_reg[15] (prbs15_reg),
        .\prbs20_reg_reg[15] (prbs20_reg),
        .\prbs31_reg_reg[30]_0 (prbs31_gen_inst1_n_0),
        .prbs31_reg_reg_r_22_0(prbs31_gen_inst1_n_1),
        .prbs31_reg_reg_r_23_0(prbs31_gen_inst1_n_2),
        .rx_fifo_rst(rx_fifo_rst));
  gtx3g_bert_0_prbs7_gen_53 prbs7_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs7_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .rx_fifo_rst(rx_fifo_rst));
  gtx3g_bert_0_prbs9_gen_54 prbs9_gen_inst1
       (.GT0_TXUSRCLK_OUT(GT0_TXUSRCLK_OUT),
        .Q(prbs9_reg),
        .pattern_pause_reg_reg(prbs31_gen_inst1_n_0),
        .rx_fifo_rst(rx_fifo_rst));
endmodule

(* ORIG_REF_NAME = "prbs11_gen" *) 
module gtx3g_bert_0_prbs11_gen
   (D,
    PATTERN_MODE,
    \prbs31_reg_reg[0] ,
    Q,
    \prbs7_reg_reg[15] ,
    \bram_reg_reg[12] ,
    \prbs31_reg_reg[1] ,
    \prbs31_reg_reg[2] ,
    \prbs31_reg_reg[3] ,
    \prbs31_reg_reg[4] ,
    \prbs31_reg_reg[5] ,
    \prbs31_reg_reg[6] ,
    \prbs31_reg_reg[7] ,
    \prbs31_reg_reg[8] ,
    \prbs31_reg_reg[9] ,
    \prbs31_reg_reg[10] ,
    \prbs31_reg_reg[11] ,
    \prbs31_reg_reg[12] ,
    \prbs31_reg_reg[13] ,
    \prbs31_reg_reg[14] ,
    \prbs31_reg_reg[15] ,
    pattern_rst_reg,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]D;
  input [2:0]PATTERN_MODE;
  input \prbs31_reg_reg[0] ;
  input [15:0]Q;
  input [15:0]\prbs7_reg_reg[15] ;
  input [10:0]\bram_reg_reg[12] ;
  input \prbs31_reg_reg[1] ;
  input \prbs31_reg_reg[2] ;
  input \prbs31_reg_reg[3] ;
  input \prbs31_reg_reg[4] ;
  input \prbs31_reg_reg[5] ;
  input \prbs31_reg_reg[6] ;
  input \prbs31_reg_reg[7] ;
  input \prbs31_reg_reg[8] ;
  input \prbs31_reg_reg[9] ;
  input \prbs31_reg_reg[10] ;
  input \prbs31_reg_reg[11] ;
  input \prbs31_reg_reg[12] ;
  input \prbs31_reg_reg[13] ;
  input \prbs31_reg_reg[14] ;
  input \prbs31_reg_reg[15] ;
  input pattern_rst_reg;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire [15:0]D;
  wire GT0_TXUSRCLK_OUT;
  wire [2:0]PATTERN_MODE;
  wire [15:0]Q;
  wire [10:0]\bram_reg_reg[12] ;
  wire pattern_pause_reg_reg;
  wire \pattern_reg[0]_i_2__0_n_0 ;
  wire \pattern_reg[10]_i_2__0_n_0 ;
  wire \pattern_reg[11]_i_2__0_n_0 ;
  wire \pattern_reg[12]_i_2__0_n_0 ;
  wire \pattern_reg[13]_i_2__0_n_0 ;
  wire \pattern_reg[14]_i_2__0_n_0 ;
  wire \pattern_reg[15]_i_2__0_n_0 ;
  wire \pattern_reg[1]_i_2__0_n_0 ;
  wire \pattern_reg[2]_i_2__0_n_0 ;
  wire \pattern_reg[3]_i_2__0_n_0 ;
  wire \pattern_reg[4]_i_2__0_n_0 ;
  wire \pattern_reg[5]_i_2__0_n_0 ;
  wire \pattern_reg[6]_i_2__0_n_0 ;
  wire \pattern_reg[7]_i_2__0_n_0 ;
  wire \pattern_reg[8]_i_2__0_n_0 ;
  wire \pattern_reg[9]_i_2__0_n_0 ;
  wire pattern_rst_reg;
  wire [15:0]prbs11_reg;
  wire \prbs11_reg[0]_i_1__0_n_0 ;
  wire \prbs31_reg_reg[0] ;
  wire \prbs31_reg_reg[10] ;
  wire \prbs31_reg_reg[11] ;
  wire \prbs31_reg_reg[12] ;
  wire \prbs31_reg_reg[13] ;
  wire \prbs31_reg_reg[14] ;
  wire \prbs31_reg_reg[15] ;
  wire \prbs31_reg_reg[1] ;
  wire \prbs31_reg_reg[2] ;
  wire \prbs31_reg_reg[3] ;
  wire \prbs31_reg_reg[4] ;
  wire \prbs31_reg_reg[5] ;
  wire \prbs31_reg_reg[6] ;
  wire \prbs31_reg_reg[7] ;
  wire \prbs31_reg_reg[8] ;
  wire \prbs31_reg_reg[9] ;
  wire [15:0]\prbs7_reg_reg[15] ;

  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[0]_i_2__0 
       (.I0(prbs11_reg[0]),
        .I1(Q[0]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [0]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [0]),
        .O(\pattern_reg[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[10]_i_2__0 
       (.I0(prbs11_reg[10]),
        .I1(Q[10]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [10]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [8]),
        .O(\pattern_reg[10]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[11]_i_2__0 
       (.I0(prbs11_reg[11]),
        .I1(Q[11]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [11]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [9]),
        .O(\pattern_reg[11]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[12]_i_2__0 
       (.I0(prbs11_reg[12]),
        .I1(Q[12]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [12]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [10]),
        .O(\pattern_reg[12]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[13]_i_2__0 
       (.I0(prbs11_reg[13]),
        .I1(Q[13]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [13]),
        .O(\pattern_reg[13]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[14]_i_2__0 
       (.I0(prbs11_reg[14]),
        .I1(Q[14]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [14]),
        .O(\pattern_reg[14]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[15]_i_2__0 
       (.I0(prbs11_reg[15]),
        .I1(Q[15]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [15]),
        .O(\pattern_reg[15]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[1]_i_2__0 
       (.I0(prbs11_reg[1]),
        .I1(Q[1]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [1]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [1]),
        .O(\pattern_reg[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[2]_i_2__0 
       (.I0(prbs11_reg[2]),
        .I1(Q[2]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [2]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [2]),
        .O(\pattern_reg[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[3]_i_2__0 
       (.I0(prbs11_reg[3]),
        .I1(Q[3]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [3]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [3]),
        .O(\pattern_reg[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[4]_i_2__0 
       (.I0(prbs11_reg[4]),
        .I1(Q[4]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [4]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [4]),
        .O(\pattern_reg[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[5]_i_2__0 
       (.I0(prbs11_reg[5]),
        .I1(Q[5]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [5]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [5]),
        .O(\pattern_reg[5]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[6]_i_2__0 
       (.I0(prbs11_reg[6]),
        .I1(Q[6]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [6]),
        .O(\pattern_reg[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[7]_i_2__0 
       (.I0(prbs11_reg[7]),
        .I1(Q[7]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [7]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [5]),
        .O(\pattern_reg[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[8]_i_2__0 
       (.I0(prbs11_reg[8]),
        .I1(Q[8]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [8]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [6]),
        .O(\pattern_reg[8]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[9]_i_2__0 
       (.I0(prbs11_reg[9]),
        .I1(Q[9]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [9]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [7]),
        .O(\pattern_reg[9]_i_2__0_n_0 ));
  MUXF7 \pattern_reg_reg[0]_i_1__0 
       (.I0(\pattern_reg[0]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[0] ),
        .O(D[0]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[10]_i_1__0 
       (.I0(\pattern_reg[10]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[10] ),
        .O(D[10]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[11]_i_1__0 
       (.I0(\pattern_reg[11]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[11] ),
        .O(D[11]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[12]_i_1__0 
       (.I0(\pattern_reg[12]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[12] ),
        .O(D[12]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[13]_i_1__0 
       (.I0(\pattern_reg[13]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[13] ),
        .O(D[13]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[14]_i_1__0 
       (.I0(\pattern_reg[14]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[14] ),
        .O(D[14]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[15]_i_1__0 
       (.I0(\pattern_reg[15]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[15] ),
        .O(D[15]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[1]_i_1__0 
       (.I0(\pattern_reg[1]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[1] ),
        .O(D[1]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[2]_i_1__0 
       (.I0(\pattern_reg[2]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[2] ),
        .O(D[2]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[3]_i_1__0 
       (.I0(\pattern_reg[3]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[3] ),
        .O(D[3]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[4]_i_1__0 
       (.I0(\pattern_reg[4]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[4] ),
        .O(D[4]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[5]_i_1__0 
       (.I0(\pattern_reg[5]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[5] ),
        .O(D[5]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[6]_i_1__0 
       (.I0(\pattern_reg[6]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[6] ),
        .O(D[6]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[7]_i_1__0 
       (.I0(\pattern_reg[7]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[7] ),
        .O(D[7]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[8]_i_1__0 
       (.I0(\pattern_reg[8]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[8] ),
        .O(D[8]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[9]_i_1__0 
       (.I0(\pattern_reg[9]_i_2__0_n_0 ),
        .I1(\prbs31_reg_reg[9] ),
        .O(D[9]),
        .S(PATTERN_MODE[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \prbs11_reg[0]_i_1__0 
       (.I0(prbs11_reg[10]),
        .I1(prbs11_reg[8]),
        .O(\prbs11_reg[0]_i_1__0_n_0 ));
  FDSE \prbs11_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs11_reg[0]_i_1__0_n_0 ),
        .Q(prbs11_reg[0]),
        .S(pattern_rst_reg));
  FDRE \prbs11_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[9]),
        .Q(prbs11_reg[10]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[10]),
        .Q(prbs11_reg[11]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[11]),
        .Q(prbs11_reg[12]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[12]),
        .Q(prbs11_reg[13]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[13]),
        .Q(prbs11_reg[14]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[14]),
        .Q(prbs11_reg[15]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[0]),
        .Q(prbs11_reg[1]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[1]),
        .Q(prbs11_reg[2]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[2]),
        .Q(prbs11_reg[3]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[3]),
        .Q(prbs11_reg[4]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[4]),
        .Q(prbs11_reg[5]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[5]),
        .Q(prbs11_reg[6]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[6]),
        .Q(prbs11_reg[7]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[7]),
        .Q(prbs11_reg[8]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[8]),
        .Q(prbs11_reg[9]),
        .R(pattern_rst_reg));
endmodule

(* ORIG_REF_NAME = "prbs11_gen" *) 
module gtx3g_bert_0_prbs11_gen_38
   (D,
    PATTERN_MODE,
    \prbs31_reg_reg[0] ,
    Q,
    \prbs7_reg_reg[15] ,
    \bram_reg_reg[12] ,
    \prbs31_reg_reg[1] ,
    \prbs31_reg_reg[2] ,
    \prbs31_reg_reg[3] ,
    \prbs31_reg_reg[4] ,
    \prbs31_reg_reg[5] ,
    \prbs31_reg_reg[6] ,
    \prbs31_reg_reg[7] ,
    \prbs31_reg_reg[8] ,
    \prbs31_reg_reg[9] ,
    \prbs31_reg_reg[10] ,
    \prbs31_reg_reg[11] ,
    \prbs31_reg_reg[12] ,
    \prbs31_reg_reg[13] ,
    \prbs31_reg_reg[14] ,
    \prbs31_reg_reg[15] ,
    pattern_rst_reg,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]D;
  input [2:0]PATTERN_MODE;
  input \prbs31_reg_reg[0] ;
  input [15:0]Q;
  input [15:0]\prbs7_reg_reg[15] ;
  input [10:0]\bram_reg_reg[12] ;
  input \prbs31_reg_reg[1] ;
  input \prbs31_reg_reg[2] ;
  input \prbs31_reg_reg[3] ;
  input \prbs31_reg_reg[4] ;
  input \prbs31_reg_reg[5] ;
  input \prbs31_reg_reg[6] ;
  input \prbs31_reg_reg[7] ;
  input \prbs31_reg_reg[8] ;
  input \prbs31_reg_reg[9] ;
  input \prbs31_reg_reg[10] ;
  input \prbs31_reg_reg[11] ;
  input \prbs31_reg_reg[12] ;
  input \prbs31_reg_reg[13] ;
  input \prbs31_reg_reg[14] ;
  input \prbs31_reg_reg[15] ;
  input pattern_rst_reg;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire [15:0]D;
  wire GT0_TXUSRCLK_OUT;
  wire [2:0]PATTERN_MODE;
  wire [15:0]Q;
  wire [10:0]\bram_reg_reg[12] ;
  wire pattern_pause_reg_reg;
  wire \pattern_reg[0]_i_2_n_0 ;
  wire \pattern_reg[10]_i_2_n_0 ;
  wire \pattern_reg[11]_i_2_n_0 ;
  wire \pattern_reg[12]_i_2_n_0 ;
  wire \pattern_reg[13]_i_2_n_0 ;
  wire \pattern_reg[14]_i_2_n_0 ;
  wire \pattern_reg[15]_i_2_n_0 ;
  wire \pattern_reg[1]_i_2_n_0 ;
  wire \pattern_reg[2]_i_2_n_0 ;
  wire \pattern_reg[3]_i_2_n_0 ;
  wire \pattern_reg[4]_i_2_n_0 ;
  wire \pattern_reg[5]_i_2_n_0 ;
  wire \pattern_reg[6]_i_2_n_0 ;
  wire \pattern_reg[7]_i_2_n_0 ;
  wire \pattern_reg[8]_i_2_n_0 ;
  wire \pattern_reg[9]_i_2_n_0 ;
  wire pattern_rst_reg;
  wire [15:0]prbs11_reg;
  wire \prbs11_reg[0]_i_1_n_0 ;
  wire \prbs31_reg_reg[0] ;
  wire \prbs31_reg_reg[10] ;
  wire \prbs31_reg_reg[11] ;
  wire \prbs31_reg_reg[12] ;
  wire \prbs31_reg_reg[13] ;
  wire \prbs31_reg_reg[14] ;
  wire \prbs31_reg_reg[15] ;
  wire \prbs31_reg_reg[1] ;
  wire \prbs31_reg_reg[2] ;
  wire \prbs31_reg_reg[3] ;
  wire \prbs31_reg_reg[4] ;
  wire \prbs31_reg_reg[5] ;
  wire \prbs31_reg_reg[6] ;
  wire \prbs31_reg_reg[7] ;
  wire \prbs31_reg_reg[8] ;
  wire \prbs31_reg_reg[9] ;
  wire [15:0]\prbs7_reg_reg[15] ;

  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[0]_i_2 
       (.I0(prbs11_reg[0]),
        .I1(Q[0]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [0]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [0]),
        .O(\pattern_reg[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[10]_i_2 
       (.I0(prbs11_reg[10]),
        .I1(Q[10]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [10]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [8]),
        .O(\pattern_reg[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[11]_i_2 
       (.I0(prbs11_reg[11]),
        .I1(Q[11]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [11]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [9]),
        .O(\pattern_reg[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[12]_i_2 
       (.I0(prbs11_reg[12]),
        .I1(Q[12]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [12]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [10]),
        .O(\pattern_reg[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[13]_i_2 
       (.I0(prbs11_reg[13]),
        .I1(Q[13]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [13]),
        .O(\pattern_reg[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[14]_i_2 
       (.I0(prbs11_reg[14]),
        .I1(Q[14]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [14]),
        .O(\pattern_reg[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[15]_i_2 
       (.I0(prbs11_reg[15]),
        .I1(Q[15]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [15]),
        .O(\pattern_reg[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[1]_i_2 
       (.I0(prbs11_reg[1]),
        .I1(Q[1]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [1]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [1]),
        .O(\pattern_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[2]_i_2 
       (.I0(prbs11_reg[2]),
        .I1(Q[2]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [2]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [2]),
        .O(\pattern_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[3]_i_2 
       (.I0(prbs11_reg[3]),
        .I1(Q[3]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [3]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [3]),
        .O(\pattern_reg[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[4]_i_2 
       (.I0(prbs11_reg[4]),
        .I1(Q[4]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [4]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [4]),
        .O(\pattern_reg[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[5]_i_2 
       (.I0(prbs11_reg[5]),
        .I1(Q[5]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [5]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [5]),
        .O(\pattern_reg[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[6]_i_2 
       (.I0(prbs11_reg[6]),
        .I1(Q[6]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [6]),
        .O(\pattern_reg[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[7]_i_2 
       (.I0(prbs11_reg[7]),
        .I1(Q[7]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [7]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [5]),
        .O(\pattern_reg[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[8]_i_2 
       (.I0(prbs11_reg[8]),
        .I1(Q[8]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [8]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [6]),
        .O(\pattern_reg[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[9]_i_2 
       (.I0(prbs11_reg[9]),
        .I1(Q[9]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [9]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [7]),
        .O(\pattern_reg[9]_i_2_n_0 ));
  MUXF7 \pattern_reg_reg[0]_i_1 
       (.I0(\pattern_reg[0]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[0] ),
        .O(D[0]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[10]_i_1 
       (.I0(\pattern_reg[10]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[10] ),
        .O(D[10]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[11]_i_1 
       (.I0(\pattern_reg[11]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[11] ),
        .O(D[11]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[12]_i_1 
       (.I0(\pattern_reg[12]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[12] ),
        .O(D[12]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[13]_i_1 
       (.I0(\pattern_reg[13]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[13] ),
        .O(D[13]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[14]_i_1 
       (.I0(\pattern_reg[14]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[14] ),
        .O(D[14]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[15]_i_1 
       (.I0(\pattern_reg[15]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[15] ),
        .O(D[15]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[1]_i_1 
       (.I0(\pattern_reg[1]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[1] ),
        .O(D[1]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[2]_i_1 
       (.I0(\pattern_reg[2]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[2] ),
        .O(D[2]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[3]_i_1 
       (.I0(\pattern_reg[3]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[3] ),
        .O(D[3]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[4]_i_1 
       (.I0(\pattern_reg[4]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[4] ),
        .O(D[4]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[5]_i_1 
       (.I0(\pattern_reg[5]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[5] ),
        .O(D[5]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[6]_i_1 
       (.I0(\pattern_reg[6]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[6] ),
        .O(D[6]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[7]_i_1 
       (.I0(\pattern_reg[7]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[7] ),
        .O(D[7]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[8]_i_1 
       (.I0(\pattern_reg[8]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[8] ),
        .O(D[8]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[9]_i_1 
       (.I0(\pattern_reg[9]_i_2_n_0 ),
        .I1(\prbs31_reg_reg[9] ),
        .O(D[9]),
        .S(PATTERN_MODE[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \prbs11_reg[0]_i_1 
       (.I0(prbs11_reg[10]),
        .I1(prbs11_reg[8]),
        .O(\prbs11_reg[0]_i_1_n_0 ));
  FDSE \prbs11_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs11_reg[0]_i_1_n_0 ),
        .Q(prbs11_reg[0]),
        .S(pattern_rst_reg));
  FDRE \prbs11_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[9]),
        .Q(prbs11_reg[10]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[10]),
        .Q(prbs11_reg[11]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[11]),
        .Q(prbs11_reg[12]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[12]),
        .Q(prbs11_reg[13]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[13]),
        .Q(prbs11_reg[14]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[14]),
        .Q(prbs11_reg[15]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[0]),
        .Q(prbs11_reg[1]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[1]),
        .Q(prbs11_reg[2]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[2]),
        .Q(prbs11_reg[3]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[3]),
        .Q(prbs11_reg[4]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[4]),
        .Q(prbs11_reg[5]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[5]),
        .Q(prbs11_reg[6]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[6]),
        .Q(prbs11_reg[7]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[7]),
        .Q(prbs11_reg[8]),
        .R(pattern_rst_reg));
  FDRE \prbs11_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[8]),
        .Q(prbs11_reg[9]),
        .R(pattern_rst_reg));
endmodule

(* ORIG_REF_NAME = "prbs11_gen" *) 
module gtx3g_bert_0_prbs11_gen_48
   (D,
    PATTERN_MODE,
    \prbs31_reg_reg[0] ,
    Q,
    \prbs7_reg_reg[15] ,
    \bram_reg_reg[12] ,
    \prbs31_reg_reg[1] ,
    \prbs31_reg_reg[2] ,
    \prbs31_reg_reg[3] ,
    \prbs31_reg_reg[4] ,
    \prbs31_reg_reg[5] ,
    \prbs31_reg_reg[6] ,
    \prbs31_reg_reg[7] ,
    \prbs31_reg_reg[8] ,
    \prbs31_reg_reg[9] ,
    \prbs31_reg_reg[10] ,
    \prbs31_reg_reg[11] ,
    \prbs31_reg_reg[12] ,
    \prbs31_reg_reg[13] ,
    \prbs31_reg_reg[14] ,
    \prbs31_reg_reg[15] ,
    rx_fifo_rst,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]D;
  input [2:0]PATTERN_MODE;
  input \prbs31_reg_reg[0] ;
  input [15:0]Q;
  input [15:0]\prbs7_reg_reg[15] ;
  input [10:0]\bram_reg_reg[12] ;
  input \prbs31_reg_reg[1] ;
  input \prbs31_reg_reg[2] ;
  input \prbs31_reg_reg[3] ;
  input \prbs31_reg_reg[4] ;
  input \prbs31_reg_reg[5] ;
  input \prbs31_reg_reg[6] ;
  input \prbs31_reg_reg[7] ;
  input \prbs31_reg_reg[8] ;
  input \prbs31_reg_reg[9] ;
  input \prbs31_reg_reg[10] ;
  input \prbs31_reg_reg[11] ;
  input \prbs31_reg_reg[12] ;
  input \prbs31_reg_reg[13] ;
  input \prbs31_reg_reg[14] ;
  input \prbs31_reg_reg[15] ;
  input rx_fifo_rst;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire [15:0]D;
  wire GT0_TXUSRCLK_OUT;
  wire [2:0]PATTERN_MODE;
  wire [15:0]Q;
  wire [10:0]\bram_reg_reg[12] ;
  wire pattern_pause_reg_reg;
  wire \pattern_reg[0]_i_2__1_n_0 ;
  wire \pattern_reg[10]_i_2__1_n_0 ;
  wire \pattern_reg[11]_i_2__1_n_0 ;
  wire \pattern_reg[12]_i_2__1_n_0 ;
  wire \pattern_reg[13]_i_2__1_n_0 ;
  wire \pattern_reg[14]_i_2__1_n_0 ;
  wire \pattern_reg[15]_i_2__1_n_0 ;
  wire \pattern_reg[1]_i_2__1_n_0 ;
  wire \pattern_reg[2]_i_2__1_n_0 ;
  wire \pattern_reg[3]_i_2__1_n_0 ;
  wire \pattern_reg[4]_i_2__1_n_0 ;
  wire \pattern_reg[5]_i_2__1_n_0 ;
  wire \pattern_reg[6]_i_2__1_n_0 ;
  wire \pattern_reg[7]_i_2__1_n_0 ;
  wire \pattern_reg[8]_i_2__1_n_0 ;
  wire \pattern_reg[9]_i_2__1_n_0 ;
  wire [15:0]prbs11_reg;
  wire \prbs11_reg[0]_i_1__1_n_0 ;
  wire \prbs31_reg_reg[0] ;
  wire \prbs31_reg_reg[10] ;
  wire \prbs31_reg_reg[11] ;
  wire \prbs31_reg_reg[12] ;
  wire \prbs31_reg_reg[13] ;
  wire \prbs31_reg_reg[14] ;
  wire \prbs31_reg_reg[15] ;
  wire \prbs31_reg_reg[1] ;
  wire \prbs31_reg_reg[2] ;
  wire \prbs31_reg_reg[3] ;
  wire \prbs31_reg_reg[4] ;
  wire \prbs31_reg_reg[5] ;
  wire \prbs31_reg_reg[6] ;
  wire \prbs31_reg_reg[7] ;
  wire \prbs31_reg_reg[8] ;
  wire \prbs31_reg_reg[9] ;
  wire [15:0]\prbs7_reg_reg[15] ;
  wire rx_fifo_rst;

  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[0]_i_2__1 
       (.I0(prbs11_reg[0]),
        .I1(Q[0]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [0]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [0]),
        .O(\pattern_reg[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[10]_i_2__1 
       (.I0(prbs11_reg[10]),
        .I1(Q[10]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [10]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [8]),
        .O(\pattern_reg[10]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[11]_i_2__1 
       (.I0(prbs11_reg[11]),
        .I1(Q[11]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [11]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [9]),
        .O(\pattern_reg[11]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[12]_i_2__1 
       (.I0(prbs11_reg[12]),
        .I1(Q[12]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [12]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [10]),
        .O(\pattern_reg[12]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[13]_i_2__1 
       (.I0(prbs11_reg[13]),
        .I1(Q[13]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [13]),
        .O(\pattern_reg[13]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[14]_i_2__1 
       (.I0(prbs11_reg[14]),
        .I1(Q[14]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [14]),
        .O(\pattern_reg[14]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[15]_i_2__1 
       (.I0(prbs11_reg[15]),
        .I1(Q[15]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [15]),
        .O(\pattern_reg[15]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[1]_i_2__1 
       (.I0(prbs11_reg[1]),
        .I1(Q[1]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [1]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [1]),
        .O(\pattern_reg[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[2]_i_2__1 
       (.I0(prbs11_reg[2]),
        .I1(Q[2]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [2]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [2]),
        .O(\pattern_reg[2]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[3]_i_2__1 
       (.I0(prbs11_reg[3]),
        .I1(Q[3]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [3]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [3]),
        .O(\pattern_reg[3]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[4]_i_2__1 
       (.I0(prbs11_reg[4]),
        .I1(Q[4]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [4]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [4]),
        .O(\pattern_reg[4]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[5]_i_2__1 
       (.I0(prbs11_reg[5]),
        .I1(Q[5]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [5]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [5]),
        .O(\pattern_reg[5]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \pattern_reg[6]_i_2__1 
       (.I0(prbs11_reg[6]),
        .I1(Q[6]),
        .I2(PATTERN_MODE[1]),
        .I3(PATTERN_MODE[0]),
        .I4(\prbs7_reg_reg[15] [6]),
        .O(\pattern_reg[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[7]_i_2__1 
       (.I0(prbs11_reg[7]),
        .I1(Q[7]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [7]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [5]),
        .O(\pattern_reg[7]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[8]_i_2__1 
       (.I0(prbs11_reg[8]),
        .I1(Q[8]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [8]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [6]),
        .O(\pattern_reg[8]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[9]_i_2__1 
       (.I0(prbs11_reg[9]),
        .I1(Q[9]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs7_reg_reg[15] [9]),
        .I4(PATTERN_MODE[0]),
        .I5(\bram_reg_reg[12] [7]),
        .O(\pattern_reg[9]_i_2__1_n_0 ));
  MUXF7 \pattern_reg_reg[0]_i_1__1 
       (.I0(\pattern_reg[0]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[0] ),
        .O(D[0]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[10]_i_1__1 
       (.I0(\pattern_reg[10]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[10] ),
        .O(D[10]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[11]_i_1__1 
       (.I0(\pattern_reg[11]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[11] ),
        .O(D[11]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[12]_i_1__1 
       (.I0(\pattern_reg[12]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[12] ),
        .O(D[12]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[13]_i_1__1 
       (.I0(\pattern_reg[13]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[13] ),
        .O(D[13]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[14]_i_1__1 
       (.I0(\pattern_reg[14]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[14] ),
        .O(D[14]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[15]_i_1__1 
       (.I0(\pattern_reg[15]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[15] ),
        .O(D[15]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[1]_i_1__1 
       (.I0(\pattern_reg[1]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[1] ),
        .O(D[1]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[2]_i_1__1 
       (.I0(\pattern_reg[2]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[2] ),
        .O(D[2]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[3]_i_1__1 
       (.I0(\pattern_reg[3]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[3] ),
        .O(D[3]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[4]_i_1__1 
       (.I0(\pattern_reg[4]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[4] ),
        .O(D[4]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[5]_i_1__1 
       (.I0(\pattern_reg[5]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[5] ),
        .O(D[5]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[6]_i_1__1 
       (.I0(\pattern_reg[6]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[6] ),
        .O(D[6]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[7]_i_1__1 
       (.I0(\pattern_reg[7]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[7] ),
        .O(D[7]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[8]_i_1__1 
       (.I0(\pattern_reg[8]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[8] ),
        .O(D[8]),
        .S(PATTERN_MODE[2]));
  MUXF7 \pattern_reg_reg[9]_i_1__1 
       (.I0(\pattern_reg[9]_i_2__1_n_0 ),
        .I1(\prbs31_reg_reg[9] ),
        .O(D[9]),
        .S(PATTERN_MODE[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \prbs11_reg[0]_i_1__1 
       (.I0(prbs11_reg[10]),
        .I1(prbs11_reg[8]),
        .O(\prbs11_reg[0]_i_1__1_n_0 ));
  FDSE \prbs11_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs11_reg[0]_i_1__1_n_0 ),
        .Q(prbs11_reg[0]),
        .S(rx_fifo_rst));
  FDRE \prbs11_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[9]),
        .Q(prbs11_reg[10]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[10]),
        .Q(prbs11_reg[11]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[11]),
        .Q(prbs11_reg[12]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[12]),
        .Q(prbs11_reg[13]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[13]),
        .Q(prbs11_reg[14]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[14]),
        .Q(prbs11_reg[15]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[0]),
        .Q(prbs11_reg[1]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[1]),
        .Q(prbs11_reg[2]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[2]),
        .Q(prbs11_reg[3]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[3]),
        .Q(prbs11_reg[4]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[4]),
        .Q(prbs11_reg[5]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[5]),
        .Q(prbs11_reg[6]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[6]),
        .Q(prbs11_reg[7]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[7]),
        .Q(prbs11_reg[8]),
        .R(rx_fifo_rst));
  FDRE \prbs11_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs11_reg[8]),
        .Q(prbs11_reg[9]),
        .R(rx_fifo_rst));
endmodule

(* ORIG_REF_NAME = "prbs15_gen" *) 
module gtx3g_bert_0_prbs15_gen
   (Q,
    pattern_rst_reg,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]Q;
  input pattern_rst_reg;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire pattern_rst_reg;
  wire \prbs15_reg[0]_i_1__0_n_0 ;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs15_reg[0]_i_1__0 
       (.I0(Q[14]),
        .I1(Q[13]),
        .O(\prbs15_reg[0]_i_1__0_n_0 ));
  FDSE \prbs15_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs15_reg[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(pattern_rst_reg));
  FDRE \prbs15_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(pattern_rst_reg));
endmodule

(* ORIG_REF_NAME = "prbs15_gen" *) 
module gtx3g_bert_0_prbs15_gen_39
   (Q,
    pattern_rst_reg,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]Q;
  input pattern_rst_reg;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire pattern_rst_reg;
  wire \prbs15_reg[0]_i_1_n_0 ;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs15_reg[0]_i_1 
       (.I0(Q[14]),
        .I1(Q[13]),
        .O(\prbs15_reg[0]_i_1_n_0 ));
  FDSE \prbs15_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs15_reg[0]_i_1_n_0 ),
        .Q(Q[0]),
        .S(pattern_rst_reg));
  FDRE \prbs15_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(pattern_rst_reg));
  FDRE \prbs15_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(pattern_rst_reg));
endmodule

(* ORIG_REF_NAME = "prbs15_gen" *) 
module gtx3g_bert_0_prbs15_gen_49
   (Q,
    rx_fifo_rst,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]Q;
  input rx_fifo_rst;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire \prbs15_reg[0]_i_1__1_n_0 ;
  wire rx_fifo_rst;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs15_reg[0]_i_1__1 
       (.I0(Q[14]),
        .I1(Q[13]),
        .O(\prbs15_reg[0]_i_1__1_n_0 ));
  FDSE \prbs15_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs15_reg[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .S(rx_fifo_rst));
  FDRE \prbs15_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(rx_fifo_rst));
  FDRE \prbs15_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(rx_fifo_rst));
endmodule

(* ORIG_REF_NAME = "prbs20_gen" *) 
module gtx3g_bert_0_prbs20_gen
   (Q,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT,
    prbs31_reg_reg_r_11,
    pattern_rst_reg);
  output [15:0]Q;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;
  input prbs31_reg_reg_r_11;
  input pattern_rst_reg;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire pattern_rst_reg;
  wire [19:19]prbs20_reg;
  wire \prbs20_reg[0]_i_1__0_n_0 ;
  wire \prbs20_reg_reg[17]_srl2___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_10_n_0 ;
  wire \prbs20_reg_reg[18]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_11_n_0 ;
  wire prbs20_reg_reg_gate_n_0;
  wire prbs31_reg_reg_r_11;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs20_reg[0]_i_1__0 
       (.I0(prbs20_reg),
        .I1(Q[2]),
        .O(\prbs20_reg[0]_i_1__0_n_0 ));
  FDSE \prbs20_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs20_reg[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(pattern_rst_reg));
  FDRE \prbs20_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(pattern_rst_reg));
  (* srl_bus_name = "inst/\gt1_frame_gen/pattern_gen_inst_1/prbs20_gen_inst1/prbs20_reg_reg " *) 
  (* srl_name = "inst/\gt1_frame_gen/pattern_gen_inst_1/prbs20_gen_inst1/prbs20_reg_reg[17]_srl2___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_10 " *) 
  SRL16E \prbs20_reg_reg[17]_srl2___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_10 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(pattern_pause_reg_reg),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(Q[15]),
        .Q(\prbs20_reg_reg[17]_srl2___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_10_n_0 ));
  FDRE \prbs20_reg_reg[18]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_11 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs20_reg_reg[17]_srl2___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_10_n_0 ),
        .Q(\prbs20_reg_reg[18]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_11_n_0 ),
        .R(1'b0));
  FDRE \prbs20_reg_reg[19] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs20_reg_reg_gate_n_0),
        .Q(prbs20_reg),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(pattern_rst_reg));
  LUT2 #(
    .INIT(4'h8)) 
    prbs20_reg_reg_gate
       (.I0(\prbs20_reg_reg[18]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_11_n_0 ),
        .I1(prbs31_reg_reg_r_11),
        .O(prbs20_reg_reg_gate_n_0));
endmodule

(* ORIG_REF_NAME = "prbs20_gen" *) 
module gtx3g_bert_0_prbs20_gen_40
   (Q,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT,
    prbs31_reg_reg_r_1,
    pattern_rst_reg);
  output [15:0]Q;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;
  input prbs31_reg_reg_r_1;
  input pattern_rst_reg;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire pattern_rst_reg;
  wire [19:19]prbs20_reg;
  wire \prbs20_reg[0]_i_1_n_0 ;
  wire \prbs20_reg_reg[17]_srl2___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_0_n_0 ;
  wire \prbs20_reg_reg[18]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_1_n_0 ;
  wire prbs20_reg_reg_gate_n_0;
  wire prbs31_reg_reg_r_1;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs20_reg[0]_i_1 
       (.I0(prbs20_reg),
        .I1(Q[2]),
        .O(\prbs20_reg[0]_i_1_n_0 ));
  FDSE \prbs20_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs20_reg[0]_i_1_n_0 ),
        .Q(Q[0]),
        .S(pattern_rst_reg));
  FDRE \prbs20_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(pattern_rst_reg));
  (* srl_bus_name = "inst/\gt0_frame_gen/pattern_gen_inst_1/prbs20_gen_inst1/prbs20_reg_reg " *) 
  (* srl_name = "inst/\gt0_frame_gen/pattern_gen_inst_1/prbs20_gen_inst1/prbs20_reg_reg[17]_srl2___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_0 " *) 
  SRL16E \prbs20_reg_reg[17]_srl2___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_0 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(pattern_pause_reg_reg),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(Q[15]),
        .Q(\prbs20_reg_reg[17]_srl2___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_0_n_0 ));
  FDRE \prbs20_reg_reg[18]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_1 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs20_reg_reg[17]_srl2___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_0_n_0 ),
        .Q(\prbs20_reg_reg[18]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_1_n_0 ),
        .R(1'b0));
  FDRE \prbs20_reg_reg[19] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs20_reg_reg_gate_n_0),
        .Q(prbs20_reg),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(pattern_rst_reg));
  FDRE \prbs20_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(pattern_rst_reg));
  LUT2 #(
    .INIT(4'h8)) 
    prbs20_reg_reg_gate
       (.I0(\prbs20_reg_reg[18]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_1_n_0 ),
        .I1(prbs31_reg_reg_r_1),
        .O(prbs20_reg_reg_gate_n_0));
endmodule

(* ORIG_REF_NAME = "prbs20_gen" *) 
module gtx3g_bert_0_prbs20_gen_50
   (Q,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT,
    prbs31_reg_reg_r_21,
    rx_fifo_rst);
  output [15:0]Q;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;
  input prbs31_reg_reg_r_21;
  input rx_fifo_rst;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire [19:19]prbs20_reg;
  wire \prbs20_reg[0]_i_1__1_n_0 ;
  wire \prbs20_reg_reg[17]_srl2___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_20_n_0 ;
  wire \prbs20_reg_reg[18]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_21_n_0 ;
  wire prbs20_reg_reg_gate_n_0;
  wire prbs31_reg_reg_r_21;
  wire rx_fifo_rst;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs20_reg[0]_i_1__1 
       (.I0(prbs20_reg),
        .I1(Q[2]),
        .O(\prbs20_reg[0]_i_1__1_n_0 ));
  FDSE \prbs20_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs20_reg[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .S(rx_fifo_rst));
  FDRE \prbs20_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(rx_fifo_rst));
  (* srl_bus_name = "inst/\gt0_frame_check/pattern_gen_inst_2/prbs20_gen_inst1/prbs20_reg_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/pattern_gen_inst_2/prbs20_gen_inst1/prbs20_reg_reg[17]_srl2___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_20 " *) 
  SRL16E \prbs20_reg_reg[17]_srl2___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_20 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(pattern_pause_reg_reg),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(Q[15]),
        .Q(\prbs20_reg_reg[17]_srl2___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_20_n_0 ));
  FDRE \prbs20_reg_reg[18]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_21 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs20_reg_reg[17]_srl2___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_20_n_0 ),
        .Q(\prbs20_reg_reg[18]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_21_n_0 ),
        .R(1'b0));
  FDRE \prbs20_reg_reg[19] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs20_reg_reg_gate_n_0),
        .Q(prbs20_reg),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(rx_fifo_rst));
  FDRE \prbs20_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(rx_fifo_rst));
  LUT2 #(
    .INIT(4'h8)) 
    prbs20_reg_reg_gate
       (.I0(\prbs20_reg_reg[18]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_21_n_0 ),
        .I1(prbs31_reg_reg_r_21),
        .O(prbs20_reg_reg_gate_n_0));
endmodule

(* ORIG_REF_NAME = "prbs23_gen" *) 
module gtx3g_bert_0_prbs23_gen
   (Q,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT,
    prbs31_reg_reg_r_12,
    pattern_rst_reg);
  output [15:0]Q;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;
  input prbs31_reg_reg_r_12;
  input pattern_rst_reg;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire pattern_rst_reg;
  wire [22:16]prbs23_reg;
  wire \prbs23_reg[0]_i_1__0_n_0 ;
  wire \prbs23_reg_reg[20]_srl3___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_11_n_0 ;
  wire \prbs23_reg_reg[21]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_12_n_0 ;
  wire prbs23_reg_reg_gate_n_0;
  wire prbs31_reg_reg_r_12;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs23_reg[0]_i_1__0 
       (.I0(prbs23_reg[22]),
        .I1(prbs23_reg[17]),
        .O(\prbs23_reg[0]_i_1__0_n_0 ));
  FDSE \prbs23_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs23_reg[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(pattern_rst_reg));
  FDRE \prbs23_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[16] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[15]),
        .Q(prbs23_reg[16]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[17] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs23_reg[16]),
        .Q(prbs23_reg[17]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  (* srl_bus_name = "inst/\gt1_frame_gen/pattern_gen_inst_1/prbs23_gen_inst1/prbs23_reg_reg " *) 
  (* srl_name = "inst/\gt1_frame_gen/pattern_gen_inst_1/prbs23_gen_inst1/prbs23_reg_reg[20]_srl3___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_11 " *) 
  SRL16E \prbs23_reg_reg[20]_srl3___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_11 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(pattern_pause_reg_reg),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(prbs23_reg[17]),
        .Q(\prbs23_reg_reg[20]_srl3___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_11_n_0 ));
  FDRE \prbs23_reg_reg[21]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_12 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs23_reg_reg[20]_srl3___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_11_n_0 ),
        .Q(\prbs23_reg_reg[21]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_12_n_0 ),
        .R(1'b0));
  FDRE \prbs23_reg_reg[22] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs23_reg_reg_gate_n_0),
        .Q(prbs23_reg[22]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(pattern_rst_reg));
  LUT2 #(
    .INIT(4'h8)) 
    prbs23_reg_reg_gate
       (.I0(\prbs23_reg_reg[21]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_12_n_0 ),
        .I1(prbs31_reg_reg_r_12),
        .O(prbs23_reg_reg_gate_n_0));
endmodule

(* ORIG_REF_NAME = "prbs23_gen" *) 
module gtx3g_bert_0_prbs23_gen_41
   (Q,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT,
    prbs31_reg_reg_r_2,
    pattern_rst_reg);
  output [15:0]Q;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;
  input prbs31_reg_reg_r_2;
  input pattern_rst_reg;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire pattern_rst_reg;
  wire [22:16]prbs23_reg;
  wire \prbs23_reg[0]_i_1_n_0 ;
  wire \prbs23_reg_reg[20]_srl3___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_1_n_0 ;
  wire \prbs23_reg_reg[21]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_2_n_0 ;
  wire prbs23_reg_reg_gate_n_0;
  wire prbs31_reg_reg_r_2;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs23_reg[0]_i_1 
       (.I0(prbs23_reg[22]),
        .I1(prbs23_reg[17]),
        .O(\prbs23_reg[0]_i_1_n_0 ));
  FDSE \prbs23_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs23_reg[0]_i_1_n_0 ),
        .Q(Q[0]),
        .S(pattern_rst_reg));
  FDRE \prbs23_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[16] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[15]),
        .Q(prbs23_reg[16]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[17] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs23_reg[16]),
        .Q(prbs23_reg[17]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  (* srl_bus_name = "inst/\gt0_frame_gen/pattern_gen_inst_1/prbs23_gen_inst1/prbs23_reg_reg " *) 
  (* srl_name = "inst/\gt0_frame_gen/pattern_gen_inst_1/prbs23_gen_inst1/prbs23_reg_reg[20]_srl3___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_1 " *) 
  SRL16E \prbs23_reg_reg[20]_srl3___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_1 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(pattern_pause_reg_reg),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(prbs23_reg[17]),
        .Q(\prbs23_reg_reg[20]_srl3___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_1_n_0 ));
  FDRE \prbs23_reg_reg[21]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_2 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs23_reg_reg[20]_srl3___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_1_n_0 ),
        .Q(\prbs23_reg_reg[21]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_2_n_0 ),
        .R(1'b0));
  FDRE \prbs23_reg_reg[22] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs23_reg_reg_gate_n_0),
        .Q(prbs23_reg[22]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(pattern_rst_reg));
  FDRE \prbs23_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(pattern_rst_reg));
  LUT2 #(
    .INIT(4'h8)) 
    prbs23_reg_reg_gate
       (.I0(\prbs23_reg_reg[21]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_2_n_0 ),
        .I1(prbs31_reg_reg_r_2),
        .O(prbs23_reg_reg_gate_n_0));
endmodule

(* ORIG_REF_NAME = "prbs23_gen" *) 
module gtx3g_bert_0_prbs23_gen_51
   (Q,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT,
    prbs31_reg_reg_r_22,
    rx_fifo_rst);
  output [15:0]Q;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;
  input prbs31_reg_reg_r_22;
  input rx_fifo_rst;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire [22:16]prbs23_reg;
  wire \prbs23_reg[0]_i_1__1_n_0 ;
  wire \prbs23_reg_reg[20]_srl3___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_21_n_0 ;
  wire \prbs23_reg_reg[21]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_22_n_0 ;
  wire prbs23_reg_reg_gate_n_0;
  wire prbs31_reg_reg_r_22;
  wire rx_fifo_rst;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs23_reg[0]_i_1__1 
       (.I0(prbs23_reg[22]),
        .I1(prbs23_reg[17]),
        .O(\prbs23_reg[0]_i_1__1_n_0 ));
  FDSE \prbs23_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs23_reg[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .S(rx_fifo_rst));
  FDRE \prbs23_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[16] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[15]),
        .Q(prbs23_reg[16]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[17] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs23_reg[16]),
        .Q(prbs23_reg[17]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(rx_fifo_rst));
  (* srl_bus_name = "inst/\gt0_frame_check/pattern_gen_inst_2/prbs23_gen_inst1/prbs23_reg_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/pattern_gen_inst_2/prbs23_gen_inst1/prbs23_reg_reg[20]_srl3___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_21 " *) 
  SRL16E \prbs23_reg_reg[20]_srl3___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_21 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(pattern_pause_reg_reg),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(prbs23_reg[17]),
        .Q(\prbs23_reg_reg[20]_srl3___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_21_n_0 ));
  FDRE \prbs23_reg_reg[21]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_22 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs23_reg_reg[20]_srl3___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_21_n_0 ),
        .Q(\prbs23_reg_reg[21]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_22_n_0 ),
        .R(1'b0));
  FDRE \prbs23_reg_reg[22] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(prbs23_reg_reg_gate_n_0),
        .Q(prbs23_reg[22]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(rx_fifo_rst));
  FDRE \prbs23_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(rx_fifo_rst));
  LUT2 #(
    .INIT(4'h8)) 
    prbs23_reg_reg_gate
       (.I0(\prbs23_reg_reg[21]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_22_n_0 ),
        .I1(prbs31_reg_reg_r_22),
        .O(prbs23_reg_reg_gate_n_0));
endmodule

(* ORIG_REF_NAME = "prbs31_gen" *) 
module gtx3g_bert_0_prbs31_gen
   (\prbs31_reg_reg[30]_0 ,
    prbs31_reg_reg_r_12_0,
    prbs31_reg_reg_r_13_0,
    \pattern_reg_reg[0] ,
    \pattern_reg_reg[1] ,
    \pattern_reg_reg[2] ,
    \pattern_reg_reg[3] ,
    \pattern_reg_reg[4] ,
    \pattern_reg_reg[5] ,
    \pattern_reg_reg[6] ,
    \pattern_reg_reg[7] ,
    \pattern_reg_reg[8] ,
    \pattern_reg_reg[9] ,
    \pattern_reg_reg[10] ,
    \pattern_reg_reg[11] ,
    \pattern_reg_reg[12] ,
    \pattern_reg_reg[13] ,
    \pattern_reg_reg[14] ,
    \pattern_reg_reg[15] ,
    pattern_rst_reg,
    GT0_TXUSRCLK_OUT,
    pattern_pause_reg,
    Q,
    PATTERN_MODE,
    \prbs20_reg_reg[15] ,
    \prbs15_reg_reg[15] );
  output \prbs31_reg_reg[30]_0 ;
  output prbs31_reg_reg_r_12_0;
  output prbs31_reg_reg_r_13_0;
  output \pattern_reg_reg[0] ;
  output \pattern_reg_reg[1] ;
  output \pattern_reg_reg[2] ;
  output \pattern_reg_reg[3] ;
  output \pattern_reg_reg[4] ;
  output \pattern_reg_reg[5] ;
  output \pattern_reg_reg[6] ;
  output \pattern_reg_reg[7] ;
  output \pattern_reg_reg[8] ;
  output \pattern_reg_reg[9] ;
  output \pattern_reg_reg[10] ;
  output \pattern_reg_reg[11] ;
  output \pattern_reg_reg[12] ;
  output \pattern_reg_reg[13] ;
  output \pattern_reg_reg[14] ;
  output \pattern_reg_reg[15] ;
  input pattern_rst_reg;
  input GT0_TXUSRCLK_OUT;
  input pattern_pause_reg;
  input [15:0]Q;
  input [1:0]PATTERN_MODE;
  input [15:0]\prbs20_reg_reg[15] ;
  input [15:0]\prbs15_reg_reg[15] ;

  wire GT0_TXUSRCLK_OUT;
  wire [1:0]PATTERN_MODE;
  wire [15:0]Q;
  wire pattern_pause_reg;
  wire \pattern_reg_reg[0] ;
  wire \pattern_reg_reg[10] ;
  wire \pattern_reg_reg[11] ;
  wire \pattern_reg_reg[12] ;
  wire \pattern_reg_reg[13] ;
  wire \pattern_reg_reg[14] ;
  wire \pattern_reg_reg[15] ;
  wire \pattern_reg_reg[1] ;
  wire \pattern_reg_reg[2] ;
  wire \pattern_reg_reg[3] ;
  wire \pattern_reg_reg[4] ;
  wire \pattern_reg_reg[5] ;
  wire \pattern_reg_reg[6] ;
  wire \pattern_reg_reg[7] ;
  wire \pattern_reg_reg[8] ;
  wire \pattern_reg_reg[9] ;
  wire pattern_rst_reg;
  wire [15:0]\prbs15_reg_reg[15] ;
  wire [15:0]\prbs20_reg_reg[15] ;
  wire [30:0]prbs31_reg;
  wire \prbs31_reg[0]_i_1__0_n_0 ;
  wire \prbs31_reg_reg[25]_srl10___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_18_n_0 ;
  wire \prbs31_reg_reg[26]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_19_n_0 ;
  wire \prbs31_reg_reg[30]_0 ;
  wire prbs31_reg_reg_gate_n_0;
  wire prbs31_reg_reg_r_10_n_0;
  wire prbs31_reg_reg_r_12_0;
  wire prbs31_reg_reg_r_13_0;
  wire prbs31_reg_reg_r_13_n_0;
  wire prbs31_reg_reg_r_14_n_0;
  wire prbs31_reg_reg_r_15_n_0;
  wire prbs31_reg_reg_r_16_n_0;
  wire prbs31_reg_reg_r_17_n_0;
  wire prbs31_reg_reg_r_18_n_0;
  wire prbs31_reg_reg_r_19_n_0;
  wire prbs31_reg_reg_r_n_0;

  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[0]_i_3__0 
       (.I0(prbs31_reg[0]),
        .I1(Q[0]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [0]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [0]),
        .O(\pattern_reg_reg[0] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[10]_i_3__0 
       (.I0(prbs31_reg[10]),
        .I1(Q[10]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [10]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [10]),
        .O(\pattern_reg_reg[10] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[11]_i_3__0 
       (.I0(prbs31_reg[11]),
        .I1(Q[11]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [11]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [11]),
        .O(\pattern_reg_reg[11] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[12]_i_3__0 
       (.I0(prbs31_reg[12]),
        .I1(Q[12]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [12]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [12]),
        .O(\pattern_reg_reg[12] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[13]_i_3__0 
       (.I0(prbs31_reg[13]),
        .I1(Q[13]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [13]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [13]),
        .O(\pattern_reg_reg[13] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[14]_i_3__0 
       (.I0(prbs31_reg[14]),
        .I1(Q[14]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [14]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [14]),
        .O(\pattern_reg_reg[14] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[15]_i_3__0 
       (.I0(prbs31_reg[15]),
        .I1(Q[15]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [15]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [15]),
        .O(\pattern_reg_reg[15] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[1]_i_3__0 
       (.I0(prbs31_reg[1]),
        .I1(Q[1]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [1]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [1]),
        .O(\pattern_reg_reg[1] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[2]_i_3__0 
       (.I0(prbs31_reg[2]),
        .I1(Q[2]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [2]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [2]),
        .O(\pattern_reg_reg[2] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[3]_i_3__0 
       (.I0(prbs31_reg[3]),
        .I1(Q[3]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [3]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [3]),
        .O(\pattern_reg_reg[3] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[4]_i_3__0 
       (.I0(prbs31_reg[4]),
        .I1(Q[4]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [4]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [4]),
        .O(\pattern_reg_reg[4] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[5]_i_3__0 
       (.I0(prbs31_reg[5]),
        .I1(Q[5]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [5]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [5]),
        .O(\pattern_reg_reg[5] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[6]_i_3__0 
       (.I0(prbs31_reg[6]),
        .I1(Q[6]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [6]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [6]),
        .O(\pattern_reg_reg[6] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[7]_i_3__0 
       (.I0(prbs31_reg[7]),
        .I1(Q[7]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [7]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [7]),
        .O(\pattern_reg_reg[7] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[8]_i_3__0 
       (.I0(prbs31_reg[8]),
        .I1(Q[8]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [8]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [8]),
        .O(\pattern_reg_reg[8] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[9]_i_3__0 
       (.I0(prbs31_reg[9]),
        .I1(Q[9]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [9]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [9]),
        .O(\pattern_reg_reg[9] ));
  LUT2 #(
    .INIT(4'h6)) 
    \prbs31_reg[0]_i_1__0 
       (.I0(prbs31_reg[30]),
        .I1(prbs31_reg[27]),
        .O(\prbs31_reg[0]_i_1__0_n_0 ));
  FDSE \prbs31_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(\prbs31_reg[0]_i_1__0_n_0 ),
        .Q(prbs31_reg[0]),
        .S(pattern_rst_reg));
  FDRE \prbs31_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[9]),
        .Q(prbs31_reg[10]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[10]),
        .Q(prbs31_reg[11]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[11]),
        .Q(prbs31_reg[12]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[12]),
        .Q(prbs31_reg[13]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[13]),
        .Q(prbs31_reg[14]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[14]),
        .Q(prbs31_reg[15]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[0]),
        .Q(prbs31_reg[1]),
        .R(pattern_rst_reg));
  (* srl_bus_name = "inst/\gt1_frame_gen/pattern_gen_inst_1/prbs31_gen_inst1/prbs31_reg_reg " *) 
  (* srl_name = "inst/\gt1_frame_gen/pattern_gen_inst_1/prbs31_gen_inst1/prbs31_reg_reg[25]_srl10___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_18 " *) 
  SRL16E \prbs31_reg_reg[25]_srl10___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_18 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b1),
        .CE(\prbs31_reg_reg[30]_0 ),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(prbs31_reg[15]),
        .Q(\prbs31_reg_reg[25]_srl10___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_18_n_0 ));
  FDRE \prbs31_reg_reg[26]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_19 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(\prbs31_reg_reg[25]_srl10___gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_18_n_0 ),
        .Q(\prbs31_reg_reg[26]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_19_n_0 ),
        .R(1'b0));
  FDRE \prbs31_reg_reg[27] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_gate_n_0),
        .Q(prbs31_reg[27]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[28] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[27]),
        .Q(prbs31_reg[28]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[29] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[28]),
        .Q(prbs31_reg[29]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[1]),
        .Q(prbs31_reg[2]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[30] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[29]),
        .Q(prbs31_reg[30]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[2]),
        .Q(prbs31_reg[3]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[3]),
        .Q(prbs31_reg[4]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[4]),
        .Q(prbs31_reg[5]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[5]),
        .Q(prbs31_reg[6]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[6]),
        .Q(prbs31_reg[7]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[7]),
        .Q(prbs31_reg[8]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[8]),
        .Q(prbs31_reg[9]),
        .R(pattern_rst_reg));
  LUT2 #(
    .INIT(4'h8)) 
    prbs31_reg_reg_gate
       (.I0(\prbs31_reg_reg[26]_gt1_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_19_n_0 ),
        .I1(prbs31_reg_reg_r_19_n_0),
        .O(prbs31_reg_reg_gate_n_0));
  FDRE prbs31_reg_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(1'b1),
        .Q(prbs31_reg_reg_r_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_10
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_n_0),
        .Q(prbs31_reg_reg_r_10_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_11
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_10_n_0),
        .Q(prbs31_reg_reg_r_12_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_12
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_12_0),
        .Q(prbs31_reg_reg_r_13_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_13
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_13_0),
        .Q(prbs31_reg_reg_r_13_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_14
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_13_n_0),
        .Q(prbs31_reg_reg_r_14_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_15
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_14_n_0),
        .Q(prbs31_reg_reg_r_15_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_16
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_15_n_0),
        .Q(prbs31_reg_reg_r_16_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_17
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_16_n_0),
        .Q(prbs31_reg_reg_r_17_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_18
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_17_n_0),
        .Q(prbs31_reg_reg_r_18_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_19
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_18_n_0),
        .Q(prbs31_reg_reg_r_19_n_0),
        .R(pattern_rst_reg));
  LUT1 #(
    .INIT(2'h1)) 
    \read_counter_i_rep[3]_i_1__0 
       (.I0(pattern_pause_reg),
        .O(\prbs31_reg_reg[30]_0 ));
endmodule

(* ORIG_REF_NAME = "prbs31_gen" *) 
module gtx3g_bert_0_prbs31_gen_42
   (\prbs31_reg_reg[30]_0 ,
    prbs31_reg_reg_r_2_0,
    prbs31_reg_reg_r_3_0,
    \pattern_reg_reg[0] ,
    \pattern_reg_reg[1] ,
    \pattern_reg_reg[2] ,
    \pattern_reg_reg[3] ,
    \pattern_reg_reg[4] ,
    \pattern_reg_reg[5] ,
    \pattern_reg_reg[6] ,
    \pattern_reg_reg[7] ,
    \pattern_reg_reg[8] ,
    \pattern_reg_reg[9] ,
    \pattern_reg_reg[10] ,
    \pattern_reg_reg[11] ,
    \pattern_reg_reg[12] ,
    \pattern_reg_reg[13] ,
    \pattern_reg_reg[14] ,
    \pattern_reg_reg[15] ,
    pattern_rst_reg,
    GT0_TXUSRCLK_OUT,
    pattern_pause_reg,
    Q,
    PATTERN_MODE,
    \prbs20_reg_reg[15] ,
    \prbs15_reg_reg[15] );
  output \prbs31_reg_reg[30]_0 ;
  output prbs31_reg_reg_r_2_0;
  output prbs31_reg_reg_r_3_0;
  output \pattern_reg_reg[0] ;
  output \pattern_reg_reg[1] ;
  output \pattern_reg_reg[2] ;
  output \pattern_reg_reg[3] ;
  output \pattern_reg_reg[4] ;
  output \pattern_reg_reg[5] ;
  output \pattern_reg_reg[6] ;
  output \pattern_reg_reg[7] ;
  output \pattern_reg_reg[8] ;
  output \pattern_reg_reg[9] ;
  output \pattern_reg_reg[10] ;
  output \pattern_reg_reg[11] ;
  output \pattern_reg_reg[12] ;
  output \pattern_reg_reg[13] ;
  output \pattern_reg_reg[14] ;
  output \pattern_reg_reg[15] ;
  input pattern_rst_reg;
  input GT0_TXUSRCLK_OUT;
  input pattern_pause_reg;
  input [15:0]Q;
  input [1:0]PATTERN_MODE;
  input [15:0]\prbs20_reg_reg[15] ;
  input [15:0]\prbs15_reg_reg[15] ;

  wire GT0_TXUSRCLK_OUT;
  wire [1:0]PATTERN_MODE;
  wire [15:0]Q;
  wire pattern_pause_reg;
  wire \pattern_reg_reg[0] ;
  wire \pattern_reg_reg[10] ;
  wire \pattern_reg_reg[11] ;
  wire \pattern_reg_reg[12] ;
  wire \pattern_reg_reg[13] ;
  wire \pattern_reg_reg[14] ;
  wire \pattern_reg_reg[15] ;
  wire \pattern_reg_reg[1] ;
  wire \pattern_reg_reg[2] ;
  wire \pattern_reg_reg[3] ;
  wire \pattern_reg_reg[4] ;
  wire \pattern_reg_reg[5] ;
  wire \pattern_reg_reg[6] ;
  wire \pattern_reg_reg[7] ;
  wire \pattern_reg_reg[8] ;
  wire \pattern_reg_reg[9] ;
  wire pattern_rst_reg;
  wire [15:0]\prbs15_reg_reg[15] ;
  wire [15:0]\prbs20_reg_reg[15] ;
  wire [30:0]prbs31_reg;
  wire \prbs31_reg[0]_i_1_n_0 ;
  wire \prbs31_reg_reg[25]_srl10___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_8_n_0 ;
  wire \prbs31_reg_reg[26]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_9_n_0 ;
  wire \prbs31_reg_reg[30]_0 ;
  wire prbs31_reg_reg_gate_n_0;
  wire prbs31_reg_reg_r_0_n_0;
  wire prbs31_reg_reg_r_2_0;
  wire prbs31_reg_reg_r_3_0;
  wire prbs31_reg_reg_r_3_n_0;
  wire prbs31_reg_reg_r_4_n_0;
  wire prbs31_reg_reg_r_5_n_0;
  wire prbs31_reg_reg_r_6_n_0;
  wire prbs31_reg_reg_r_7_n_0;
  wire prbs31_reg_reg_r_8_n_0;
  wire prbs31_reg_reg_r_9_n_0;
  wire prbs31_reg_reg_r_n_0;

  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[0]_i_3 
       (.I0(prbs31_reg[0]),
        .I1(Q[0]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [0]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [0]),
        .O(\pattern_reg_reg[0] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[10]_i_3 
       (.I0(prbs31_reg[10]),
        .I1(Q[10]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [10]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [10]),
        .O(\pattern_reg_reg[10] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[11]_i_3 
       (.I0(prbs31_reg[11]),
        .I1(Q[11]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [11]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [11]),
        .O(\pattern_reg_reg[11] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[12]_i_3 
       (.I0(prbs31_reg[12]),
        .I1(Q[12]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [12]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [12]),
        .O(\pattern_reg_reg[12] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[13]_i_3 
       (.I0(prbs31_reg[13]),
        .I1(Q[13]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [13]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [13]),
        .O(\pattern_reg_reg[13] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[14]_i_3 
       (.I0(prbs31_reg[14]),
        .I1(Q[14]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [14]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [14]),
        .O(\pattern_reg_reg[14] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[15]_i_3 
       (.I0(prbs31_reg[15]),
        .I1(Q[15]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [15]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [15]),
        .O(\pattern_reg_reg[15] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[1]_i_3 
       (.I0(prbs31_reg[1]),
        .I1(Q[1]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [1]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [1]),
        .O(\pattern_reg_reg[1] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[2]_i_3 
       (.I0(prbs31_reg[2]),
        .I1(Q[2]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [2]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [2]),
        .O(\pattern_reg_reg[2] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[3]_i_3 
       (.I0(prbs31_reg[3]),
        .I1(Q[3]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [3]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [3]),
        .O(\pattern_reg_reg[3] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[4]_i_3 
       (.I0(prbs31_reg[4]),
        .I1(Q[4]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [4]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [4]),
        .O(\pattern_reg_reg[4] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[5]_i_3 
       (.I0(prbs31_reg[5]),
        .I1(Q[5]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [5]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [5]),
        .O(\pattern_reg_reg[5] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[6]_i_3 
       (.I0(prbs31_reg[6]),
        .I1(Q[6]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [6]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [6]),
        .O(\pattern_reg_reg[6] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[7]_i_3 
       (.I0(prbs31_reg[7]),
        .I1(Q[7]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [7]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [7]),
        .O(\pattern_reg_reg[7] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[8]_i_3 
       (.I0(prbs31_reg[8]),
        .I1(Q[8]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [8]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [8]),
        .O(\pattern_reg_reg[8] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[9]_i_3 
       (.I0(prbs31_reg[9]),
        .I1(Q[9]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [9]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [9]),
        .O(\pattern_reg_reg[9] ));
  LUT2 #(
    .INIT(4'h6)) 
    \prbs31_reg[0]_i_1 
       (.I0(prbs31_reg[30]),
        .I1(prbs31_reg[27]),
        .O(\prbs31_reg[0]_i_1_n_0 ));
  FDSE \prbs31_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(\prbs31_reg[0]_i_1_n_0 ),
        .Q(prbs31_reg[0]),
        .S(pattern_rst_reg));
  FDRE \prbs31_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[9]),
        .Q(prbs31_reg[10]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[10]),
        .Q(prbs31_reg[11]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[11]),
        .Q(prbs31_reg[12]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[12]),
        .Q(prbs31_reg[13]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[13]),
        .Q(prbs31_reg[14]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[14]),
        .Q(prbs31_reg[15]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[0]),
        .Q(prbs31_reg[1]),
        .R(pattern_rst_reg));
  (* srl_bus_name = "inst/\gt0_frame_gen/pattern_gen_inst_1/prbs31_gen_inst1/prbs31_reg_reg " *) 
  (* srl_name = "inst/\gt0_frame_gen/pattern_gen_inst_1/prbs31_gen_inst1/prbs31_reg_reg[25]_srl10___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_8 " *) 
  SRL16E \prbs31_reg_reg[25]_srl10___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_8 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b1),
        .CE(\prbs31_reg_reg[30]_0 ),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(prbs31_reg[15]),
        .Q(\prbs31_reg_reg[25]_srl10___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_8_n_0 ));
  FDRE \prbs31_reg_reg[26]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_9 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(\prbs31_reg_reg[25]_srl10___gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_8_n_0 ),
        .Q(\prbs31_reg_reg[26]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_9_n_0 ),
        .R(1'b0));
  FDRE \prbs31_reg_reg[27] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_gate_n_0),
        .Q(prbs31_reg[27]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[28] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[27]),
        .Q(prbs31_reg[28]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[29] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[28]),
        .Q(prbs31_reg[29]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[1]),
        .Q(prbs31_reg[2]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[30] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[29]),
        .Q(prbs31_reg[30]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[2]),
        .Q(prbs31_reg[3]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[3]),
        .Q(prbs31_reg[4]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[4]),
        .Q(prbs31_reg[5]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[5]),
        .Q(prbs31_reg[6]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[6]),
        .Q(prbs31_reg[7]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[7]),
        .Q(prbs31_reg[8]),
        .R(pattern_rst_reg));
  FDRE \prbs31_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[8]),
        .Q(prbs31_reg[9]),
        .R(pattern_rst_reg));
  LUT2 #(
    .INIT(4'h8)) 
    prbs31_reg_reg_gate
       (.I0(\prbs31_reg_reg[26]_gt0_frame_gen_pattern_gen_inst_1_prbs31_gen_inst1_prbs31_reg_reg_r_9_n_0 ),
        .I1(prbs31_reg_reg_r_9_n_0),
        .O(prbs31_reg_reg_gate_n_0));
  FDRE prbs31_reg_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(1'b1),
        .Q(prbs31_reg_reg_r_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_0
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_n_0),
        .Q(prbs31_reg_reg_r_0_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_1
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_0_n_0),
        .Q(prbs31_reg_reg_r_2_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_2
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_2_0),
        .Q(prbs31_reg_reg_r_3_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_3
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_3_0),
        .Q(prbs31_reg_reg_r_3_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_4
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_3_n_0),
        .Q(prbs31_reg_reg_r_4_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_5
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_4_n_0),
        .Q(prbs31_reg_reg_r_5_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_6
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_5_n_0),
        .Q(prbs31_reg_reg_r_6_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_7
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_6_n_0),
        .Q(prbs31_reg_reg_r_7_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_8
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_7_n_0),
        .Q(prbs31_reg_reg_r_8_n_0),
        .R(pattern_rst_reg));
  FDRE prbs31_reg_reg_r_9
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_8_n_0),
        .Q(prbs31_reg_reg_r_9_n_0),
        .R(pattern_rst_reg));
  LUT1 #(
    .INIT(2'h1)) 
    \read_counter_i_rep[3]_i_1 
       (.I0(pattern_pause_reg),
        .O(\prbs31_reg_reg[30]_0 ));
endmodule

(* ORIG_REF_NAME = "prbs31_gen" *) 
module gtx3g_bert_0_prbs31_gen_52
   (\prbs31_reg_reg[30]_0 ,
    prbs31_reg_reg_r_22_0,
    prbs31_reg_reg_r_23_0,
    \pattern_reg_reg[0] ,
    \pattern_reg_reg[1] ,
    \pattern_reg_reg[2] ,
    \pattern_reg_reg[3] ,
    \pattern_reg_reg[4] ,
    \pattern_reg_reg[5] ,
    \pattern_reg_reg[6] ,
    \pattern_reg_reg[7] ,
    \pattern_reg_reg[8] ,
    \pattern_reg_reg[9] ,
    \pattern_reg_reg[10] ,
    \pattern_reg_reg[11] ,
    \pattern_reg_reg[12] ,
    \pattern_reg_reg[13] ,
    \pattern_reg_reg[14] ,
    \pattern_reg_reg[15] ,
    rx_fifo_rst,
    GT0_TXUSRCLK_OUT,
    pattern_pause_reg_reg,
    Q,
    PATTERN_MODE,
    \prbs20_reg_reg[15] ,
    \prbs15_reg_reg[15] );
  output \prbs31_reg_reg[30]_0 ;
  output prbs31_reg_reg_r_22_0;
  output prbs31_reg_reg_r_23_0;
  output \pattern_reg_reg[0] ;
  output \pattern_reg_reg[1] ;
  output \pattern_reg_reg[2] ;
  output \pattern_reg_reg[3] ;
  output \pattern_reg_reg[4] ;
  output \pattern_reg_reg[5] ;
  output \pattern_reg_reg[6] ;
  output \pattern_reg_reg[7] ;
  output \pattern_reg_reg[8] ;
  output \pattern_reg_reg[9] ;
  output \pattern_reg_reg[10] ;
  output \pattern_reg_reg[11] ;
  output \pattern_reg_reg[12] ;
  output \pattern_reg_reg[13] ;
  output \pattern_reg_reg[14] ;
  output \pattern_reg_reg[15] ;
  input rx_fifo_rst;
  input GT0_TXUSRCLK_OUT;
  input pattern_pause_reg_reg;
  input [15:0]Q;
  input [1:0]PATTERN_MODE;
  input [15:0]\prbs20_reg_reg[15] ;
  input [15:0]\prbs15_reg_reg[15] ;

  wire GT0_TXUSRCLK_OUT;
  wire [1:0]PATTERN_MODE;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire \pattern_reg_reg[0] ;
  wire \pattern_reg_reg[10] ;
  wire \pattern_reg_reg[11] ;
  wire \pattern_reg_reg[12] ;
  wire \pattern_reg_reg[13] ;
  wire \pattern_reg_reg[14] ;
  wire \pattern_reg_reg[15] ;
  wire \pattern_reg_reg[1] ;
  wire \pattern_reg_reg[2] ;
  wire \pattern_reg_reg[3] ;
  wire \pattern_reg_reg[4] ;
  wire \pattern_reg_reg[5] ;
  wire \pattern_reg_reg[6] ;
  wire \pattern_reg_reg[7] ;
  wire \pattern_reg_reg[8] ;
  wire \pattern_reg_reg[9] ;
  wire [15:0]\prbs15_reg_reg[15] ;
  wire [15:0]\prbs20_reg_reg[15] ;
  wire [30:0]prbs31_reg;
  wire \prbs31_reg[0]_i_1__1_n_0 ;
  wire \prbs31_reg_reg[25]_srl10___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_28_n_0 ;
  wire \prbs31_reg_reg[26]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_29_n_0 ;
  wire \prbs31_reg_reg[30]_0 ;
  wire prbs31_reg_reg_gate_n_0;
  wire prbs31_reg_reg_r_20_n_0;
  wire prbs31_reg_reg_r_22_0;
  wire prbs31_reg_reg_r_23_0;
  wire prbs31_reg_reg_r_23_n_0;
  wire prbs31_reg_reg_r_24_n_0;
  wire prbs31_reg_reg_r_25_n_0;
  wire prbs31_reg_reg_r_26_n_0;
  wire prbs31_reg_reg_r_27_n_0;
  wire prbs31_reg_reg_r_28_n_0;
  wire prbs31_reg_reg_r_29_n_0;
  wire prbs31_reg_reg_r_n_0;
  wire rx_fifo_rst;

  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[0]_i_3__1 
       (.I0(prbs31_reg[0]),
        .I1(Q[0]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [0]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [0]),
        .O(\pattern_reg_reg[0] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[10]_i_3__1 
       (.I0(prbs31_reg[10]),
        .I1(Q[10]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [10]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [10]),
        .O(\pattern_reg_reg[10] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[11]_i_3__1 
       (.I0(prbs31_reg[11]),
        .I1(Q[11]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [11]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [11]),
        .O(\pattern_reg_reg[11] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[12]_i_3__1 
       (.I0(prbs31_reg[12]),
        .I1(Q[12]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [12]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [12]),
        .O(\pattern_reg_reg[12] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[13]_i_3__1 
       (.I0(prbs31_reg[13]),
        .I1(Q[13]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [13]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [13]),
        .O(\pattern_reg_reg[13] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[14]_i_3__1 
       (.I0(prbs31_reg[14]),
        .I1(Q[14]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [14]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [14]),
        .O(\pattern_reg_reg[14] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[15]_i_3__1 
       (.I0(prbs31_reg[15]),
        .I1(Q[15]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [15]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [15]),
        .O(\pattern_reg_reg[15] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[1]_i_3__1 
       (.I0(prbs31_reg[1]),
        .I1(Q[1]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [1]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [1]),
        .O(\pattern_reg_reg[1] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[2]_i_3__1 
       (.I0(prbs31_reg[2]),
        .I1(Q[2]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [2]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [2]),
        .O(\pattern_reg_reg[2] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[3]_i_3__1 
       (.I0(prbs31_reg[3]),
        .I1(Q[3]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [3]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [3]),
        .O(\pattern_reg_reg[3] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[4]_i_3__1 
       (.I0(prbs31_reg[4]),
        .I1(Q[4]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [4]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [4]),
        .O(\pattern_reg_reg[4] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[5]_i_3__1 
       (.I0(prbs31_reg[5]),
        .I1(Q[5]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [5]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [5]),
        .O(\pattern_reg_reg[5] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[6]_i_3__1 
       (.I0(prbs31_reg[6]),
        .I1(Q[6]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [6]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [6]),
        .O(\pattern_reg_reg[6] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[7]_i_3__1 
       (.I0(prbs31_reg[7]),
        .I1(Q[7]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [7]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [7]),
        .O(\pattern_reg_reg[7] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[8]_i_3__1 
       (.I0(prbs31_reg[8]),
        .I1(Q[8]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [8]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [8]),
        .O(\pattern_reg_reg[8] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \pattern_reg[9]_i_3__1 
       (.I0(prbs31_reg[9]),
        .I1(Q[9]),
        .I2(PATTERN_MODE[1]),
        .I3(\prbs20_reg_reg[15] [9]),
        .I4(PATTERN_MODE[0]),
        .I5(\prbs15_reg_reg[15] [9]),
        .O(\pattern_reg_reg[9] ));
  LUT2 #(
    .INIT(4'h6)) 
    \prbs31_reg[0]_i_1__1 
       (.I0(prbs31_reg[30]),
        .I1(prbs31_reg[27]),
        .O(\prbs31_reg[0]_i_1__1_n_0 ));
  FDSE \prbs31_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(\prbs31_reg[0]_i_1__1_n_0 ),
        .Q(prbs31_reg[0]),
        .S(rx_fifo_rst));
  FDRE \prbs31_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[9]),
        .Q(prbs31_reg[10]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[10]),
        .Q(prbs31_reg[11]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[11]),
        .Q(prbs31_reg[12]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[12]),
        .Q(prbs31_reg[13]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[13]),
        .Q(prbs31_reg[14]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[14]),
        .Q(prbs31_reg[15]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[0]),
        .Q(prbs31_reg[1]),
        .R(rx_fifo_rst));
  (* srl_bus_name = "inst/\gt0_frame_check/pattern_gen_inst_2/prbs31_gen_inst1/prbs31_reg_reg " *) 
  (* srl_name = "inst/\gt0_frame_check/pattern_gen_inst_2/prbs31_gen_inst1/prbs31_reg_reg[25]_srl10___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_28 " *) 
  SRL16E \prbs31_reg_reg[25]_srl10___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_28 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b1),
        .CE(\prbs31_reg_reg[30]_0 ),
        .CLK(GT0_TXUSRCLK_OUT),
        .D(prbs31_reg[15]),
        .Q(\prbs31_reg_reg[25]_srl10___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_28_n_0 ));
  FDRE \prbs31_reg_reg[26]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_29 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(\prbs31_reg_reg[25]_srl10___gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_28_n_0 ),
        .Q(\prbs31_reg_reg[26]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_29_n_0 ),
        .R(1'b0));
  FDRE \prbs31_reg_reg[27] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_gate_n_0),
        .Q(prbs31_reg[27]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[28] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[27]),
        .Q(prbs31_reg[28]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[29] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[28]),
        .Q(prbs31_reg[29]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[1]),
        .Q(prbs31_reg[2]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[30] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[29]),
        .Q(prbs31_reg[30]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[2]),
        .Q(prbs31_reg[3]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[3]),
        .Q(prbs31_reg[4]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[4]),
        .Q(prbs31_reg[5]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[5]),
        .Q(prbs31_reg[6]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[6]),
        .Q(prbs31_reg[7]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[7]),
        .Q(prbs31_reg[8]),
        .R(rx_fifo_rst));
  FDRE \prbs31_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg[8]),
        .Q(prbs31_reg[9]),
        .R(rx_fifo_rst));
  LUT2 #(
    .INIT(4'h8)) 
    prbs31_reg_reg_gate
       (.I0(\prbs31_reg_reg[26]_gt0_frame_check_pattern_gen_inst_2_prbs31_gen_inst1_prbs31_reg_reg_r_29_n_0 ),
        .I1(prbs31_reg_reg_r_29_n_0),
        .O(prbs31_reg_reg_gate_n_0));
  FDRE prbs31_reg_reg_r
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(1'b1),
        .Q(prbs31_reg_reg_r_n_0),
        .R(rx_fifo_rst));
  FDRE prbs31_reg_reg_r_20
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_n_0),
        .Q(prbs31_reg_reg_r_20_n_0),
        .R(rx_fifo_rst));
  FDRE prbs31_reg_reg_r_21
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_20_n_0),
        .Q(prbs31_reg_reg_r_22_0),
        .R(rx_fifo_rst));
  FDRE prbs31_reg_reg_r_22
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_22_0),
        .Q(prbs31_reg_reg_r_23_0),
        .R(rx_fifo_rst));
  FDRE prbs31_reg_reg_r_23
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_23_0),
        .Q(prbs31_reg_reg_r_23_n_0),
        .R(rx_fifo_rst));
  FDRE prbs31_reg_reg_r_24
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_23_n_0),
        .Q(prbs31_reg_reg_r_24_n_0),
        .R(rx_fifo_rst));
  FDRE prbs31_reg_reg_r_25
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_24_n_0),
        .Q(prbs31_reg_reg_r_25_n_0),
        .R(rx_fifo_rst));
  FDRE prbs31_reg_reg_r_26
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_25_n_0),
        .Q(prbs31_reg_reg_r_26_n_0),
        .R(rx_fifo_rst));
  FDRE prbs31_reg_reg_r_27
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_26_n_0),
        .Q(prbs31_reg_reg_r_27_n_0),
        .R(rx_fifo_rst));
  FDRE prbs31_reg_reg_r_28
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_27_n_0),
        .Q(prbs31_reg_reg_r_28_n_0),
        .R(rx_fifo_rst));
  FDRE prbs31_reg_reg_r_29
       (.C(GT0_TXUSRCLK_OUT),
        .CE(\prbs31_reg_reg[30]_0 ),
        .D(prbs31_reg_reg_r_28_n_0),
        .Q(prbs31_reg_reg_r_29_n_0),
        .R(rx_fifo_rst));
  LUT1 #(
    .INIT(2'h1)) 
    \read_counter_i_rep[3]_i_1__1 
       (.I0(pattern_pause_reg_reg),
        .O(\prbs31_reg_reg[30]_0 ));
endmodule

(* ORIG_REF_NAME = "prbs7_gen" *) 
module gtx3g_bert_0_prbs7_gen
   (Q,
    pattern_rst_reg,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]Q;
  input pattern_rst_reg;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire [0:0]p_0_out;
  wire pattern_pause_reg_reg;
  wire pattern_rst_reg;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs7_reg[0]_i_1__0 
       (.I0(Q[6]),
        .I1(Q[5]),
        .O(p_0_out));
  FDSE \prbs7_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(p_0_out),
        .Q(Q[0]),
        .S(pattern_rst_reg));
  FDRE \prbs7_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(pattern_rst_reg));
endmodule

(* ORIG_REF_NAME = "prbs7_gen" *) 
module gtx3g_bert_0_prbs7_gen_43
   (Q,
    pattern_rst_reg,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]Q;
  input pattern_rst_reg;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire [0:0]p_0_out;
  wire pattern_pause_reg_reg;
  wire pattern_rst_reg;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs7_reg[0]_i_1 
       (.I0(Q[6]),
        .I1(Q[5]),
        .O(p_0_out));
  FDSE \prbs7_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(p_0_out),
        .Q(Q[0]),
        .S(pattern_rst_reg));
  FDRE \prbs7_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(pattern_rst_reg));
  FDRE \prbs7_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(pattern_rst_reg));
endmodule

(* ORIG_REF_NAME = "prbs7_gen" *) 
module gtx3g_bert_0_prbs7_gen_53
   (Q,
    rx_fifo_rst,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]Q;
  input rx_fifo_rst;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire \prbs7_reg[0]_i_1__1_n_0 ;
  wire rx_fifo_rst;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs7_reg[0]_i_1__1 
       (.I0(Q[6]),
        .I1(Q[5]),
        .O(\prbs7_reg[0]_i_1__1_n_0 ));
  FDSE \prbs7_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs7_reg[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .S(rx_fifo_rst));
  FDRE \prbs7_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(rx_fifo_rst));
  FDRE \prbs7_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(rx_fifo_rst));
endmodule

(* ORIG_REF_NAME = "prbs9_gen" *) 
module gtx3g_bert_0_prbs9_gen
   (Q,
    pattern_rst_reg,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]Q;
  input pattern_rst_reg;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire pattern_rst_reg;
  wire \prbs9_reg[0]_i_1__0_n_0 ;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs9_reg[0]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[4]),
        .O(\prbs9_reg[0]_i_1__0_n_0 ));
  FDSE \prbs9_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs9_reg[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(pattern_rst_reg));
  FDRE \prbs9_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(pattern_rst_reg));
endmodule

(* ORIG_REF_NAME = "prbs9_gen" *) 
module gtx3g_bert_0_prbs9_gen_44
   (Q,
    pattern_rst_reg,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]Q;
  input pattern_rst_reg;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire pattern_rst_reg;
  wire \prbs9_reg[0]_i_1_n_0 ;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs9_reg[0]_i_1 
       (.I0(Q[8]),
        .I1(Q[4]),
        .O(\prbs9_reg[0]_i_1_n_0 ));
  FDSE \prbs9_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs9_reg[0]_i_1_n_0 ),
        .Q(Q[0]),
        .S(pattern_rst_reg));
  FDRE \prbs9_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(pattern_rst_reg));
  FDRE \prbs9_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(pattern_rst_reg));
endmodule

(* ORIG_REF_NAME = "prbs9_gen" *) 
module gtx3g_bert_0_prbs9_gen_54
   (Q,
    rx_fifo_rst,
    pattern_pause_reg_reg,
    GT0_TXUSRCLK_OUT);
  output [15:0]Q;
  input rx_fifo_rst;
  input pattern_pause_reg_reg;
  input GT0_TXUSRCLK_OUT;

  wire GT0_TXUSRCLK_OUT;
  wire [15:0]Q;
  wire pattern_pause_reg_reg;
  wire \prbs9_reg[0]_i_1__1_n_0 ;
  wire rx_fifo_rst;

  LUT2 #(
    .INIT(4'h6)) 
    \prbs9_reg[0]_i_1__1 
       (.I0(Q[8]),
        .I1(Q[4]),
        .O(\prbs9_reg[0]_i_1__1_n_0 ));
  FDSE \prbs9_reg_reg[0] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(\prbs9_reg[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .S(rx_fifo_rst));
  FDRE \prbs9_reg_reg[10] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[9]),
        .Q(Q[10]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[11] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[10]),
        .Q(Q[11]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[12] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[11]),
        .Q(Q[12]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[13] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[12]),
        .Q(Q[13]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[14] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[13]),
        .Q(Q[14]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[15] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[14]),
        .Q(Q[15]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[1] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[0]),
        .Q(Q[1]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[2] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[1]),
        .Q(Q[2]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[3] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[2]),
        .Q(Q[3]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[4] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[3]),
        .Q(Q[4]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[5] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[4]),
        .Q(Q[5]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[6] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[5]),
        .Q(Q[6]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[7] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[6]),
        .Q(Q[7]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[8] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[7]),
        .Q(Q[8]),
        .R(rx_fifo_rst));
  FDRE \prbs9_reg_reg[9] 
       (.C(GT0_TXUSRCLK_OUT),
        .CE(pattern_pause_reg_reg),
        .D(Q[8]),
        .Q(Q[9]),
        .R(rx_fifo_rst));
endmodule

(* CHECK_LICENSE_TYPE = "rx_word_fifo,fifo_generator_v13_1_4,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "rx_word_fifo" *) 
(* X_CORE_INFO = "fifo_generator_v13_1_4,Vivado 2017.2" *) 
module gtx3g_bert_0_rx_word_fifo
   (clk,
    srst,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 core_clk CLK" *) input clk;
  input srst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [15:0]din;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [15:0]dout;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;

  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [3:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [3:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [3:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "1" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "4" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "16" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "16" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "0" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "1" *) 
  (* C_PRELOAD_REGS = "0" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "14" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "13" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "4" *) 
  (* C_RD_DEPTH = "16" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "4" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "4" *) 
  (* C_WR_DEPTH = "16" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "4" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  gtx3g_bert_0_fifo_generator_v13_1_4 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(clk),
        .data_count(NLW_U0_data_count_UNCONNECTED[3:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[3:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[3:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "rx_word_fifo,fifo_generator_v13_1_4,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "rx_word_fifo" *) 
(* X_CORE_INFO = "fifo_generator_v13_1_4,Vivado 2017.2" *) 
module gtx3g_bert_0_rx_word_fifo__xdcDup__1
   (clk,
    srst,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 core_clk CLK" *) input clk;
  input srst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [15:0]din;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [15:0]dout;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;

  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [3:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [3:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [3:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "1" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "4" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "16" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "16" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "0" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "1" *) 
  (* C_PRELOAD_REGS = "0" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "14" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "13" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "4" *) 
  (* C_RD_DEPTH = "16" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "4" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "4" *) 
  (* C_WR_DEPTH = "16" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "4" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  gtx3g_bert_0_fifo_generator_v13_1_4__2 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(clk),
        .data_count(NLW_U0_data_count_UNCONNECTED[3:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[3:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[3:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module gtx3g_bert_0_blk_mem_gen_generic_cstr
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module gtx3g_bert_0_blk_mem_gen_generic_cstr_64
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_prim_width_65 \ramloop[0].ram.r 
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module gtx3g_bert_0_blk_mem_gen_prim_width
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module gtx3g_bert_0_blk_mem_gen_prim_width_65
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_prim_wrapper_66 \prim_noinit.ram 
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module gtx3g_bert_0_blk_mem_gen_prim_wrapper
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_10 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_11 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_18 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_19 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_2 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_26 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_27 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_3 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_9 ;
  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({1'b0,1'b0,1'b0,1'b0,1'b0,\gc0.count_d1_reg[3] ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b0,1'b0,1'b0,1'b0,1'b0,Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,din[7:4],1'b0,1'b0,1'b0,1'b0,din[3:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,din[15:12],1'b0,1'b0,1'b0,1'b0,din[11:8]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_2 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_3 ,dout[7:4],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_9 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_10 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_11 ,dout[3:0]}),
        .DOBDO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_18 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_19 ,dout[15:12],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_26 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_27 ,dout[11:8]}),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 }),
        .ENARDEN(tmp_ram_rd_en),
        .ENBWREN(E),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(srst),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({E,E,E,E}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module gtx3g_bert_0_blk_mem_gen_prim_wrapper_66
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_10 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_11 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_18 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_19 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_2 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_26 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_27 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_3 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_9 ;
  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({1'b0,1'b0,1'b0,1'b0,1'b0,\gc0.count_d1_reg[3] ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b0,1'b0,1'b0,1'b0,1'b0,Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,din[7:4],1'b0,1'b0,1'b0,1'b0,din[3:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,din[15:12],1'b0,1'b0,1'b0,1'b0,din[11:8]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_2 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_3 ,dout[7:4],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_9 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_10 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_11 ,dout[3:0]}),
        .DOBDO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_18 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_19 ,dout[15:12],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_26 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_27 ,dout[11:8]}),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 }),
        .ENARDEN(tmp_ram_rd_en),
        .ENBWREN(E),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(srst),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({E,E,E,E}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module gtx3g_bert_0_blk_mem_gen_top
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_generic_cstr \valid.cstr 
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module gtx3g_bert_0_blk_mem_gen_top_63
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_generic_cstr_64 \valid.cstr 
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_6" *) 
module gtx3g_bert_0_blk_mem_gen_v8_3_6
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_v8_3_6_synth inst_blk_mem_gen
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_6" *) 
module gtx3g_bert_0_blk_mem_gen_v8_3_6_61
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_v8_3_6_synth_62 inst_blk_mem_gen
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_6_synth" *) 
module gtx3g_bert_0_blk_mem_gen_v8_3_6_synth
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_6_synth" *) 
module gtx3g_bert_0_blk_mem_gen_v8_3_6_synth_62
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_top_63 \gnbram.gnativebmg.native_blk_mem_gen 
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module gtx3g_bert_0_fifo_generator_ramfifo
   (dout,
    empty,
    full,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output [15:0]dout;
  output empty;
  output full;
  input clk;
  input srst;
  input [15:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire [3:0]p_0_out;
  wire [3:0]p_11_out;
  wire p_17_out;
  wire p_2_out;
  wire rd_en;
  wire [3:0]rd_pntr_plus1;
  wire srst;
  wire tmp_ram_rd_en;
  wire wr_en;

  gtx3g_bert_0_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_0_out),
        .Q(rd_pntr_plus1),
        .clk(clk),
        .empty(empty),
        .out(p_2_out),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .rd_en(rd_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  gtx3g_bert_0_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.E(p_17_out),
        .Q(p_11_out),
        .clk(clk),
        .full(full),
        .\gc0.count_d1_reg[3] (p_0_out),
        .\gc0.count_reg[3] (rd_pntr_plus1),
        .out(p_2_out),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
  gtx3g_bert_0_memory \gntv_or_sync_fifo.mem 
       (.E(p_17_out),
        .Q(p_11_out),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (p_0_out),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module gtx3g_bert_0_fifo_generator_ramfifo_57
   (dout,
    empty,
    full,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output [15:0]dout;
  output empty;
  output full;
  input clk;
  input srst;
  input [15:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire [3:0]p_0_out;
  wire [3:0]p_11_out;
  wire p_17_out;
  wire p_2_out;
  wire rd_en;
  wire [3:0]rd_pntr_plus1;
  wire srst;
  wire tmp_ram_rd_en;
  wire wr_en;

  gtx3g_bert_0_rd_logic_58 \gntv_or_sync_fifo.gl0.rd 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_0_out),
        .Q(rd_pntr_plus1),
        .clk(clk),
        .empty(empty),
        .out(p_2_out),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .rd_en(rd_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  gtx3g_bert_0_wr_logic_59 \gntv_or_sync_fifo.gl0.wr 
       (.E(p_17_out),
        .Q(p_11_out),
        .clk(clk),
        .full(full),
        .\gc0.count_d1_reg[3] (p_0_out),
        .\gc0.count_reg[3] (rd_pntr_plus1),
        .out(p_2_out),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
  gtx3g_bert_0_memory_60 \gntv_or_sync_fifo.mem 
       (.E(p_17_out),
        .Q(p_11_out),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (p_0_out),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module gtx3g_bert_0_fifo_generator_top
   (dout,
    empty,
    full,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output [15:0]dout;
  output empty;
  output full;
  input clk;
  input srst;
  input [15:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  gtx3g_bert_0_fifo_generator_ramfifo \grf.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module gtx3g_bert_0_fifo_generator_top_56
   (dout,
    empty,
    full,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output [15:0]dout;
  output empty;
  output full;
  input clk;
  input srst;
  input [15:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  gtx3g_bert_0_fifo_generator_ramfifo_57 \grf.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "4" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "16" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "16" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "1" *) (* C_PRELOAD_REGS = "0" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "14" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "13" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "4" *) 
(* C_RD_DEPTH = "16" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "4" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "4" *) 
(* C_WR_DEPTH = "16" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "4" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_1_4" *) 
module gtx3g_bert_0_fifo_generator_v13_1_4
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [15:0]din;
  input wr_en;
  input rd_en;
  input [3:0]prog_empty_thresh;
  input [3:0]prog_empty_thresh_assert;
  input [3:0]prog_empty_thresh_negate;
  input [3:0]prog_full_thresh;
  input [3:0]prog_full_thresh_assert;
  input [3:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [15:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [3:0]data_count;
  output [3:0]rd_data_count;
  output [3:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  gtx3g_bert_0_fifo_generator_v13_1_4_synth inst_fifo_gen
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "4" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "16" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "16" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "1" *) (* C_PRELOAD_REGS = "0" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "14" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "13" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "4" *) 
(* C_RD_DEPTH = "16" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "4" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "4" *) 
(* C_WR_DEPTH = "16" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "4" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_1_4" *) 
module gtx3g_bert_0_fifo_generator_v13_1_4__2
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [15:0]din;
  input wr_en;
  input rd_en;
  input [3:0]prog_empty_thresh;
  input [3:0]prog_empty_thresh_assert;
  input [3:0]prog_empty_thresh_negate;
  input [3:0]prog_full_thresh;
  input [3:0]prog_full_thresh_assert;
  input [3:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [15:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [3:0]data_count;
  output [3:0]rd_data_count;
  output [3:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  gtx3g_bert_0_fifo_generator_v13_1_4_synth_55 inst_fifo_gen
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_1_4_synth" *) 
module gtx3g_bert_0_fifo_generator_v13_1_4_synth
   (dout,
    empty,
    full,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output [15:0]dout;
  output empty;
  output full;
  input clk;
  input srst;
  input [15:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  gtx3g_bert_0_fifo_generator_top \gconvfifo.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_1_4_synth" *) 
module gtx3g_bert_0_fifo_generator_v13_1_4_synth_55
   (dout,
    empty,
    full,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output [15:0]dout;
  output empty;
  output full;
  input clk;
  input srst;
  input [15:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  gtx3g_bert_0_fifo_generator_top_56 \gconvfifo.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module gtx3g_bert_0_memory
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_v8_3_6 \gbm.gbmg.gbmga.ngecc.bmg 
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module gtx3g_bert_0_memory_60
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \gc0.count_d1_reg[3] ,
    Q,
    din);
  output [15:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]Q;
  input [15:0]din;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [15:0]din;
  wire [15:0]dout;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_blk_mem_gen_v8_3_6_61 \gbm.gbmg.gbmga.ngecc.bmg 
       (.E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module gtx3g_bert_0_rd_bin_cntr
   (Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    srst,
    E,
    clk);
  output [3:0]Q;
  output [3:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input srst;
  input [0:0]E;
  input clk;

  wire [3:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [3:0]plusOp;
  wire srst;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \gc0.count[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \gc0.count[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(plusOp[3]));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(Q[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(Q[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(Q[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(Q[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [3]),
        .R(srst));
  FDSE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp[0]),
        .Q(Q[0]),
        .S(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp[1]),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp[2]),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp[3]),
        .Q(Q[3]),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module gtx3g_bert_0_rd_bin_cntr_70
   (Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    srst,
    E,
    clk);
  output [3:0]Q;
  output [3:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input srst;
  input [0:0]E;
  input clk;

  wire [3:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [3:0]plusOp;
  wire srst;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \gc0.count[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \gc0.count[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(plusOp[3]));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(Q[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(Q[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(Q[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(Q[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [3]),
        .R(srst));
  FDSE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp[0]),
        .Q(Q[0]),
        .S(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp[1]),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp[2]),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp[3]),
        .Q(Q[3]),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module gtx3g_bert_0_rd_logic
   (out,
    empty,
    Q,
    tmp_ram_rd_en,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    srst,
    ram_empty_fb_i_reg,
    clk,
    rd_en);
  output out;
  output empty;
  output [3:0]Q;
  output tmp_ram_rd_en;
  output [3:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input srst;
  input ram_empty_fb_i_reg;
  input clk;
  input rd_en;

  wire [3:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [3:0]Q;
  wire clk;
  wire empty;
  wire out;
  wire p_7_out;
  wire ram_empty_fb_i_reg;
  wire rd_en;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_rd_status_flags_ss \grss.rsts 
       (.E(p_7_out),
        .clk(clk),
        .empty(empty),
        .out(out),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg),
        .rd_en(rd_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  gtx3g_bert_0_rd_bin_cntr rpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(p_7_out),
        .Q(Q),
        .clk(clk),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module gtx3g_bert_0_rd_logic_58
   (out,
    empty,
    Q,
    tmp_ram_rd_en,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    srst,
    ram_empty_fb_i_reg,
    clk,
    rd_en);
  output out;
  output empty;
  output [3:0]Q;
  output tmp_ram_rd_en;
  output [3:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input srst;
  input ram_empty_fb_i_reg;
  input clk;
  input rd_en;

  wire [3:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [3:0]Q;
  wire clk;
  wire empty;
  wire out;
  wire p_7_out;
  wire ram_empty_fb_i_reg;
  wire rd_en;
  wire srst;
  wire tmp_ram_rd_en;

  gtx3g_bert_0_rd_status_flags_ss_69 \grss.rsts 
       (.E(p_7_out),
        .clk(clk),
        .empty(empty),
        .out(out),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg),
        .rd_en(rd_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  gtx3g_bert_0_rd_bin_cntr_70 rpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(p_7_out),
        .Q(Q),
        .clk(clk),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_ss" *) 
module gtx3g_bert_0_rd_status_flags_ss
   (out,
    empty,
    tmp_ram_rd_en,
    E,
    srst,
    ram_empty_fb_i_reg_0,
    clk,
    rd_en);
  output out;
  output empty;
  output tmp_ram_rd_en;
  output [0:0]E;
  input srst;
  input ram_empty_fb_i_reg_0;
  input clk;
  input rd_en;

  wire [0:0]E;
  wire clk;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  wire ram_empty_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire rd_en;
  wire srst;
  wire tmp_ram_rd_en;

  assign empty = ram_empty_i;
  assign out = ram_empty_fb_i;
  LUT3 #(
    .INIT(8'hF4)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(ram_empty_fb_i),
        .I1(rd_en),
        .I2(srst),
        .O(tmp_ram_rd_en));
  LUT2 #(
    .INIT(4'h2)) 
    \gc0.count_d1[3]_i_1 
       (.I0(rd_en),
        .I1(ram_empty_fb_i),
        .O(E));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg_0),
        .Q(ram_empty_fb_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg_0),
        .Q(ram_empty_i),
        .S(srst));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_ss" *) 
module gtx3g_bert_0_rd_status_flags_ss_69
   (out,
    empty,
    tmp_ram_rd_en,
    E,
    srst,
    ram_empty_fb_i_reg_0,
    clk,
    rd_en);
  output out;
  output empty;
  output tmp_ram_rd_en;
  output [0:0]E;
  input srst;
  input ram_empty_fb_i_reg_0;
  input clk;
  input rd_en;

  wire [0:0]E;
  wire clk;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  wire ram_empty_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire rd_en;
  wire srst;
  wire tmp_ram_rd_en;

  assign empty = ram_empty_i;
  assign out = ram_empty_fb_i;
  LUT3 #(
    .INIT(8'hF4)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(ram_empty_fb_i),
        .I1(rd_en),
        .I2(srst),
        .O(tmp_ram_rd_en));
  LUT2 #(
    .INIT(4'h2)) 
    \gc0.count_d1[3]_i_1 
       (.I0(rd_en),
        .I1(ram_empty_fb_i),
        .O(E));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg_0),
        .Q(ram_empty_fb_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg_0),
        .Q(ram_empty_i),
        .S(srst));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module gtx3g_bert_0_wr_bin_cntr
   (ram_full_fb_i_reg,
    ram_empty_i_reg,
    Q,
    out,
    ram_full_fb_i_reg_0,
    rd_en,
    wr_en,
    \gc0.count_d1_reg[3] ,
    \gc0.count_reg[3] ,
    srst,
    E,
    clk);
  output ram_full_fb_i_reg;
  output ram_empty_i_reg;
  output [3:0]Q;
  input out;
  input ram_full_fb_i_reg_0;
  input rd_en;
  input wr_en;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]\gc0.count_reg[3] ;
  input srst;
  input [0:0]E;
  input clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [3:0]\gc0.count_reg[3] ;
  wire out;
  wire [3:0]p_12_out;
  wire [3:0]plusOp__0;
  wire ram_empty_fb_i_i_2_n_0;
  wire ram_empty_fb_i_i_3_n_0;
  wire ram_empty_i_reg;
  wire ram_full_fb_i_i_2_n_0;
  wire ram_full_fb_i_i_3_n_0;
  wire ram_full_fb_i_i_4_n_0;
  wire ram_full_fb_i_i_5_n_0;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire rd_en;
  wire srst;
  wire wr_en;

  LUT1 #(
    .INIT(2'h1)) 
    \gcc0.gc0.count[0]_i_1 
       (.I0(p_12_out[0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gcc0.gc0.count[1]_i_1 
       (.I0(p_12_out[1]),
        .I1(p_12_out[0]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \gcc0.gc0.count[2]_i_1 
       (.I0(p_12_out[2]),
        .I1(p_12_out[1]),
        .I2(p_12_out[0]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \gcc0.gc0.count[3]_i_1 
       (.I0(p_12_out[3]),
        .I1(p_12_out[1]),
        .I2(p_12_out[0]),
        .I3(p_12_out[2]),
        .O(plusOp__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(p_12_out[0]),
        .Q(Q[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(p_12_out[1]),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(p_12_out[2]),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(p_12_out[3]),
        .Q(Q[3]),
        .R(srst));
  FDSE #(
    .INIT(1'b1)) 
    \gcc0.gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(p_12_out[0]),
        .S(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(p_12_out[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(p_12_out[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(p_12_out[3]),
        .R(srst));
  LUT6 #(
    .INIT(64'hFFCC8F8CCCCC8C8C)) 
    ram_empty_fb_i_i_1
       (.I0(ram_full_fb_i_i_2_n_0),
        .I1(out),
        .I2(wr_en),
        .I3(ram_empty_fb_i_i_2_n_0),
        .I4(ram_full_fb_i_reg_0),
        .I5(rd_en),
        .O(ram_empty_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h84)) 
    ram_empty_fb_i_i_2
       (.I0(Q[3]),
        .I1(ram_empty_fb_i_i_3_n_0),
        .I2(\gc0.count_reg[3] [3]),
        .O(ram_empty_fb_i_i_2_n_0));
  LUT6 #(
    .INIT(64'h8008200240041001)) 
    ram_empty_fb_i_i_3
       (.I0(Q[2]),
        .I1(\gc0.count_reg[3] [1]),
        .I2(Q[0]),
        .I3(\gc0.count_reg[3] [0]),
        .I4(Q[1]),
        .I5(\gc0.count_reg[3] [2]),
        .O(ram_empty_fb_i_i_3_n_0));
  LUT5 #(
    .INIT(32'hEAFF4000)) 
    ram_full_fb_i_i_1
       (.I0(out),
        .I1(ram_full_fb_i_i_2_n_0),
        .I2(ram_full_fb_i_reg_0),
        .I3(rd_en),
        .I4(ram_full_fb_i_i_3_n_0),
        .O(ram_full_fb_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hDE)) 
    ram_full_fb_i_i_2
       (.I0(Q[3]),
        .I1(ram_full_fb_i_i_4_n_0),
        .I2(\gc0.count_d1_reg[3] [3]),
        .O(ram_full_fb_i_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFF8020)) 
    ram_full_fb_i_i_3
       (.I0(wr_en),
        .I1(\gc0.count_d1_reg[3] [3]),
        .I2(ram_full_fb_i_i_5_n_0),
        .I3(p_12_out[3]),
        .I4(ram_full_fb_i_reg_0),
        .O(ram_full_fb_i_i_3_n_0));
  LUT6 #(
    .INIT(64'h7FF7DFFDBFFBEFFE)) 
    ram_full_fb_i_i_4
       (.I0(Q[2]),
        .I1(\gc0.count_d1_reg[3] [1]),
        .I2(Q[0]),
        .I3(\gc0.count_d1_reg[3] [0]),
        .I4(Q[1]),
        .I5(\gc0.count_d1_reg[3] [2]),
        .O(ram_full_fb_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h8008200240041001)) 
    ram_full_fb_i_i_5
       (.I0(p_12_out[2]),
        .I1(p_12_out[1]),
        .I2(p_12_out[0]),
        .I3(\gc0.count_d1_reg[3] [0]),
        .I4(\gc0.count_d1_reg[3] [1]),
        .I5(\gc0.count_d1_reg[3] [2]),
        .O(ram_full_fb_i_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module gtx3g_bert_0_wr_bin_cntr_68
   (ram_full_fb_i_reg,
    ram_empty_i_reg,
    Q,
    out,
    ram_full_fb_i_reg_0,
    rd_en,
    wr_en,
    \gc0.count_d1_reg[3] ,
    \gc0.count_reg[3] ,
    srst,
    E,
    clk);
  output ram_full_fb_i_reg;
  output ram_empty_i_reg;
  output [3:0]Q;
  input out;
  input ram_full_fb_i_reg_0;
  input rd_en;
  input wr_en;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]\gc0.count_reg[3] ;
  input srst;
  input [0:0]E;
  input clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [3:0]\gc0.count_reg[3] ;
  wire out;
  wire [3:0]p_12_out;
  wire [3:0]plusOp__0;
  wire ram_empty_fb_i_i_2_n_0;
  wire ram_empty_fb_i_i_3_n_0;
  wire ram_empty_i_reg;
  wire ram_full_fb_i_i_2_n_0;
  wire ram_full_fb_i_i_3_n_0;
  wire ram_full_fb_i_i_4_n_0;
  wire ram_full_fb_i_i_5_n_0;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire rd_en;
  wire srst;
  wire wr_en;

  LUT1 #(
    .INIT(2'h1)) 
    \gcc0.gc0.count[0]_i_1 
       (.I0(p_12_out[0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gcc0.gc0.count[1]_i_1 
       (.I0(p_12_out[1]),
        .I1(p_12_out[0]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \gcc0.gc0.count[2]_i_1 
       (.I0(p_12_out[2]),
        .I1(p_12_out[1]),
        .I2(p_12_out[0]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \gcc0.gc0.count[3]_i_1 
       (.I0(p_12_out[3]),
        .I1(p_12_out[1]),
        .I2(p_12_out[0]),
        .I3(p_12_out[2]),
        .O(plusOp__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(p_12_out[0]),
        .Q(Q[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(p_12_out[1]),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(p_12_out[2]),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(p_12_out[3]),
        .Q(Q[3]),
        .R(srst));
  FDSE #(
    .INIT(1'b1)) 
    \gcc0.gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(p_12_out[0]),
        .S(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(p_12_out[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(p_12_out[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(p_12_out[3]),
        .R(srst));
  LUT6 #(
    .INIT(64'hFFCC8F8CCCCC8C8C)) 
    ram_empty_fb_i_i_1
       (.I0(ram_full_fb_i_i_2_n_0),
        .I1(out),
        .I2(wr_en),
        .I3(ram_empty_fb_i_i_2_n_0),
        .I4(ram_full_fb_i_reg_0),
        .I5(rd_en),
        .O(ram_empty_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h84)) 
    ram_empty_fb_i_i_2
       (.I0(Q[3]),
        .I1(ram_empty_fb_i_i_3_n_0),
        .I2(\gc0.count_reg[3] [3]),
        .O(ram_empty_fb_i_i_2_n_0));
  LUT6 #(
    .INIT(64'h8008200240041001)) 
    ram_empty_fb_i_i_3
       (.I0(Q[2]),
        .I1(\gc0.count_reg[3] [1]),
        .I2(Q[0]),
        .I3(\gc0.count_reg[3] [0]),
        .I4(Q[1]),
        .I5(\gc0.count_reg[3] [2]),
        .O(ram_empty_fb_i_i_3_n_0));
  LUT5 #(
    .INIT(32'hEAFF4000)) 
    ram_full_fb_i_i_1
       (.I0(out),
        .I1(ram_full_fb_i_i_2_n_0),
        .I2(ram_full_fb_i_reg_0),
        .I3(rd_en),
        .I4(ram_full_fb_i_i_3_n_0),
        .O(ram_full_fb_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hDE)) 
    ram_full_fb_i_i_2
       (.I0(Q[3]),
        .I1(ram_full_fb_i_i_4_n_0),
        .I2(\gc0.count_d1_reg[3] [3]),
        .O(ram_full_fb_i_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFF8020)) 
    ram_full_fb_i_i_3
       (.I0(wr_en),
        .I1(\gc0.count_d1_reg[3] [3]),
        .I2(ram_full_fb_i_i_5_n_0),
        .I3(p_12_out[3]),
        .I4(ram_full_fb_i_reg_0),
        .O(ram_full_fb_i_i_3_n_0));
  LUT6 #(
    .INIT(64'h7FF7DFFDBFFBEFFE)) 
    ram_full_fb_i_i_4
       (.I0(Q[2]),
        .I1(\gc0.count_d1_reg[3] [1]),
        .I2(Q[0]),
        .I3(\gc0.count_d1_reg[3] [0]),
        .I4(Q[1]),
        .I5(\gc0.count_d1_reg[3] [2]),
        .O(ram_full_fb_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h8008200240041001)) 
    ram_full_fb_i_i_5
       (.I0(p_12_out[2]),
        .I1(p_12_out[1]),
        .I2(p_12_out[0]),
        .I3(\gc0.count_d1_reg[3] [0]),
        .I4(\gc0.count_d1_reg[3] [1]),
        .I5(\gc0.count_d1_reg[3] [2]),
        .O(ram_full_fb_i_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module gtx3g_bert_0_wr_logic
   (full,
    ram_empty_i_reg,
    Q,
    E,
    srst,
    clk,
    out,
    rd_en,
    wr_en,
    \gc0.count_d1_reg[3] ,
    \gc0.count_reg[3] );
  output full;
  output ram_empty_i_reg;
  output [3:0]Q;
  output [0:0]E;
  input srst;
  input clk;
  input out;
  input rd_en;
  input wr_en;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]\gc0.count_reg[3] ;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire full;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [3:0]\gc0.count_reg[3] ;
  wire \gwss.wsts_n_0 ;
  wire out;
  wire ram_empty_i_reg;
  wire rd_en;
  wire srst;
  wire wpntr_n_0;
  wire wr_en;

  gtx3g_bert_0_wr_status_flags_ss \gwss.wsts 
       (.E(E),
        .clk(clk),
        .full(full),
        .out(\gwss.wsts_n_0 ),
        .ram_empty_fb_i_reg(wpntr_n_0),
        .srst(srst),
        .wr_en(wr_en));
  gtx3g_bert_0_wr_bin_cntr wpntr
       (.E(E),
        .Q(Q),
        .clk(clk),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .\gc0.count_reg[3] (\gc0.count_reg[3] ),
        .out(out),
        .ram_empty_i_reg(ram_empty_i_reg),
        .ram_full_fb_i_reg(wpntr_n_0),
        .ram_full_fb_i_reg_0(\gwss.wsts_n_0 ),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module gtx3g_bert_0_wr_logic_59
   (full,
    ram_empty_i_reg,
    Q,
    E,
    srst,
    clk,
    out,
    rd_en,
    wr_en,
    \gc0.count_d1_reg[3] ,
    \gc0.count_reg[3] );
  output full;
  output ram_empty_i_reg;
  output [3:0]Q;
  output [0:0]E;
  input srst;
  input clk;
  input out;
  input rd_en;
  input wr_en;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]\gc0.count_reg[3] ;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk;
  wire full;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [3:0]\gc0.count_reg[3] ;
  wire \gwss.wsts_n_0 ;
  wire out;
  wire ram_empty_i_reg;
  wire rd_en;
  wire srst;
  wire wpntr_n_0;
  wire wr_en;

  gtx3g_bert_0_wr_status_flags_ss_67 \gwss.wsts 
       (.E(E),
        .clk(clk),
        .full(full),
        .out(\gwss.wsts_n_0 ),
        .ram_empty_fb_i_reg(wpntr_n_0),
        .srst(srst),
        .wr_en(wr_en));
  gtx3g_bert_0_wr_bin_cntr_68 wpntr
       (.E(E),
        .Q(Q),
        .clk(clk),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .\gc0.count_reg[3] (\gc0.count_reg[3] ),
        .out(out),
        .ram_empty_i_reg(ram_empty_i_reg),
        .ram_full_fb_i_reg(wpntr_n_0),
        .ram_full_fb_i_reg_0(\gwss.wsts_n_0 ),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_ss" *) 
module gtx3g_bert_0_wr_status_flags_ss
   (out,
    full,
    E,
    srst,
    ram_empty_fb_i_reg,
    clk,
    wr_en);
  output out;
  output full;
  output [0:0]E;
  input srst;
  input ram_empty_fb_i_reg;
  input clk;
  input wr_en;

  wire [0:0]E;
  wire clk;
  (* DONT_TOUCH *) wire ram_afull_fb;
  (* DONT_TOUCH *) wire ram_afull_i;
  wire ram_empty_fb_i_reg;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire srst;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(ram_afull_i));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(ram_afull_fb));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg),
        .Q(ram_full_fb_i),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg),
        .Q(ram_full_i),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_ss" *) 
module gtx3g_bert_0_wr_status_flags_ss_67
   (out,
    full,
    E,
    srst,
    ram_empty_fb_i_reg,
    clk,
    wr_en);
  output out;
  output full;
  output [0:0]E;
  input srst;
  input ram_empty_fb_i_reg;
  input clk;
  input wr_en;

  wire [0:0]E;
  wire clk;
  (* DONT_TOUCH *) wire ram_afull_fb;
  (* DONT_TOUCH *) wire ram_afull_i;
  wire ram_empty_fb_i_reg;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire srst;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(ram_afull_i));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(ram_afull_fb));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg),
        .Q(ram_full_fb_i),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg),
        .Q(ram_full_i),
        .R(srst));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
